// Credit for this approach belongs to Camilo
module one_hot_decoder (
    input [255:0] i_one_hot, // Accepts one-hot encodings from 1 to 255
    output [7:0] o_binary
);
    // Declarations
    wire [127:0] bit_concat [7:0];

    // Compare the bits with 0
    genvar i;
    generate
        for (i = 0; i < 8; i = i + 1)
            assign o_binary[i] = (bit_concat[i] == 0) ? 0 : 1;
    endgenerate

    // Concatenate bits
    assign bit_concat[7] = {
        i_one_hot[127+:128]
    };
    assign bit_concat[6] = {
        i_one_hot[63+:64],
        i_one_hot[191+:64]
    };

    assign bit_concat[5] = {
        i_one_hot[31+:32],
        i_one_hot[95+:32],
        i_one_hot[159+:32],
        i_one_hot[223+:32]
    };
    assign bit_concat[4] = {
        i_one_hot[15+:16],
        i_one_hot[47+:16],
        i_one_hot[79+:16],
        i_one_hot[111+:16],
        i_one_hot[143+:16],
        i_one_hot[175+:16],
        i_one_hot[207+:16],
        i_one_hot[239+:16]
    };
    assign bit_concat[3] = {
        i_one_hot[7+:8],
        i_one_hot[23+:8],
        i_one_hot[39+:8],
        i_one_hot[55+:8],
        i_one_hot[71+:8],
        i_one_hot[87+:8],
        i_one_hot[103+:8],
        i_one_hot[119+:8],
        i_one_hot[135+:8],
        i_one_hot[151+:8],
        i_one_hot[167+:8],
        i_one_hot[183+:8],
        i_one_hot[199+:8],
        i_one_hot[215+:8],
        i_one_hot[231+:8],
        i_one_hot[247+:8]
    };
    assign bit_concat[2] = {
        i_one_hot[3+:4],
        i_one_hot[11+:4],
        i_one_hot[19+:4],
        i_one_hot[27+:4],
        i_one_hot[35+:4],
        i_one_hot[43+:4],
        i_one_hot[51+:4],
        i_one_hot[59+:4],
        i_one_hot[67+:4],
        i_one_hot[75+:4],
        i_one_hot[83+:4],
        i_one_hot[91+:4],
        i_one_hot[99+:4],
        i_one_hot[107+:4],
        i_one_hot[115+:4],
        i_one_hot[123+:4],
        i_one_hot[131+:4],
        i_one_hot[139+:4],
        i_one_hot[147+:4],
        i_one_hot[155+:4],
        i_one_hot[163+:4],
        i_one_hot[171+:4],
        i_one_hot[179+:4],
        i_one_hot[187+:4],
        i_one_hot[195+:4],
        i_one_hot[203+:4],
        i_one_hot[211+:4],
        i_one_hot[219+:4],
        i_one_hot[227+:4],
        i_one_hot[235+:4],
        i_one_hot[243+:4],
        i_one_hot[251+:4]
    };
    assign bit_concat[1] = {
        i_one_hot[1+:2],
        i_one_hot[5+:2],
        i_one_hot[9+:2],
        i_one_hot[13+:2],
        i_one_hot[17+:2],
        i_one_hot[21+:2],
        i_one_hot[25+:2],
        i_one_hot[29+:2],
        i_one_hot[33+:2],
        i_one_hot[37+:2],
        i_one_hot[41+:2],
        i_one_hot[45+:2],
        i_one_hot[49+:2],
        i_one_hot[53+:2],
        i_one_hot[57+:2],
        i_one_hot[61+:2],
        i_one_hot[65+:2],
        i_one_hot[69+:2],
        i_one_hot[73+:2],
        i_one_hot[77+:2],
        i_one_hot[81+:2],
        i_one_hot[85+:2],
        i_one_hot[89+:2],
        i_one_hot[93+:2],
        i_one_hot[97+:2],
        i_one_hot[101+:2],
        i_one_hot[105+:2],
        i_one_hot[109+:2],
        i_one_hot[113+:2],
        i_one_hot[117+:2],
        i_one_hot[121+:2],
        i_one_hot[125+:2],
        i_one_hot[129+:2],
        i_one_hot[133+:2],
        i_one_hot[137+:2],
        i_one_hot[141+:2],
        i_one_hot[145+:2],
        i_one_hot[149+:2],
        i_one_hot[153+:2],
        i_one_hot[157+:2],
        i_one_hot[161+:2],
        i_one_hot[165+:2],
        i_one_hot[169+:2],
        i_one_hot[173+:2],
        i_one_hot[177+:2],
        i_one_hot[181+:2],
        i_one_hot[185+:2],
        i_one_hot[189+:2],
        i_one_hot[193+:2],
        i_one_hot[197+:2],
        i_one_hot[201+:2],
        i_one_hot[205+:2],
        i_one_hot[209+:2],
        i_one_hot[213+:2],
        i_one_hot[217+:2],
        i_one_hot[221+:2],
        i_one_hot[225+:2],
        i_one_hot[229+:2],
        i_one_hot[233+:2],
        i_one_hot[237+:2],
        i_one_hot[241+:2],
        i_one_hot[245+:2],
        i_one_hot[249+:2],
        i_one_hot[253+:2]
    };
    assign bit_concat[0] = {
        i_one_hot[0+:1],
        i_one_hot[2+:1],
        i_one_hot[4+:1],
        i_one_hot[6+:1],
        i_one_hot[8+:1],
        i_one_hot[10+:1],
        i_one_hot[12+:1],
        i_one_hot[14+:1],
        i_one_hot[16+:1],
        i_one_hot[18+:1],
        i_one_hot[20+:1],
        i_one_hot[22+:1],
        i_one_hot[24+:1],
        i_one_hot[26+:1],
        i_one_hot[28+:1],
        i_one_hot[30+:1],
        i_one_hot[32+:1],
        i_one_hot[34+:1],
        i_one_hot[36+:1],
        i_one_hot[38+:1],
        i_one_hot[40+:1],
        i_one_hot[42+:1],
        i_one_hot[44+:1],
        i_one_hot[46+:1],
        i_one_hot[48+:1],
        i_one_hot[50+:1],
        i_one_hot[52+:1],
        i_one_hot[54+:1],
        i_one_hot[56+:1],
        i_one_hot[58+:1],
        i_one_hot[60+:1],
        i_one_hot[62+:1],
        i_one_hot[64+:1],
        i_one_hot[66+:1],
        i_one_hot[68+:1],
        i_one_hot[70+:1],
        i_one_hot[72+:1],
        i_one_hot[74+:1],
        i_one_hot[76+:1],
        i_one_hot[78+:1],
        i_one_hot[80+:1],
        i_one_hot[82+:1],
        i_one_hot[84+:1],
        i_one_hot[86+:1],
        i_one_hot[88+:1],
        i_one_hot[90+:1],
        i_one_hot[92+:1],
        i_one_hot[94+:1],
        i_one_hot[96+:1],
        i_one_hot[98+:1],
        i_one_hot[100+:1],
        i_one_hot[102+:1],
        i_one_hot[104+:1],
        i_one_hot[106+:1],
        i_one_hot[108+:1],
        i_one_hot[110+:1],
        i_one_hot[112+:1],
        i_one_hot[114+:1],
        i_one_hot[116+:1],
        i_one_hot[118+:1],
        i_one_hot[120+:1],
        i_one_hot[122+:1],
        i_one_hot[124+:1],
        i_one_hot[126+:1],
        i_one_hot[128+:1],
        i_one_hot[130+:1],
        i_one_hot[132+:1],
        i_one_hot[134+:1],
        i_one_hot[136+:1],
        i_one_hot[138+:1],
        i_one_hot[140+:1],
        i_one_hot[142+:1],
        i_one_hot[144+:1],
        i_one_hot[146+:1],
        i_one_hot[148+:1],
        i_one_hot[150+:1],
        i_one_hot[152+:1],
        i_one_hot[154+:1],
        i_one_hot[156+:1],
        i_one_hot[158+:1],
        i_one_hot[160+:1],
        i_one_hot[162+:1],
        i_one_hot[164+:1],
        i_one_hot[166+:1],
        i_one_hot[168+:1],
        i_one_hot[170+:1],
        i_one_hot[172+:1],
        i_one_hot[174+:1],
        i_one_hot[176+:1],
        i_one_hot[178+:1],
        i_one_hot[180+:1],
        i_one_hot[182+:1],
        i_one_hot[184+:1],
        i_one_hot[186+:1],
        i_one_hot[188+:1],
        i_one_hot[190+:1],
        i_one_hot[192+:1],
        i_one_hot[194+:1],
        i_one_hot[196+:1],
        i_one_hot[198+:1],
        i_one_hot[200+:1],
        i_one_hot[202+:1],
        i_one_hot[204+:1],
        i_one_hot[206+:1],
        i_one_hot[208+:1],
        i_one_hot[210+:1],
        i_one_hot[212+:1],
        i_one_hot[214+:1],
        i_one_hot[216+:1],
        i_one_hot[218+:1],
        i_one_hot[220+:1],
        i_one_hot[222+:1],
        i_one_hot[224+:1],
        i_one_hot[226+:1],
        i_one_hot[228+:1],
        i_one_hot[230+:1],
        i_one_hot[232+:1],
        i_one_hot[234+:1],
        i_one_hot[236+:1],
        i_one_hot[238+:1],
        i_one_hot[240+:1],
        i_one_hot[242+:1],
        i_one_hot[244+:1],
        i_one_hot[246+:1],
        i_one_hot[248+:1],
        i_one_hot[250+:1],
        i_one_hot[252+:1],
        i_one_hot[254+:1]
};
endmodule