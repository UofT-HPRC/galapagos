// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="udp_eth_assemble,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=3.103000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.714750,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1239,HLS_SYN_LUT=392,HLS_VERSION=2019_1}" *)

module udp_eth_assemble (
        ap_clk,
        ap_rst,
        myMac_V,
        myIP_V,
        action,
        action_valid_V,
        action_empty_V,
        action_re_V,
        payload_in_data_V,
        payload_in_keep_V,
        payload_in_valid_V,
        payload_in_last_V,
        payload_ready_V,
        packet_out_data_V,
        packet_out_keep_V,
        packet_out_valid_V,
        packet_out_last_V,
        packet_out_ready_V
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input  [47:0] myMac_V;
input  [31:0] myIP_V;
input  [160:0] action;
input  [0:0] action_valid_V;
input  [0:0] action_empty_V;
output  [0:0] action_re_V;
input  [511:0] payload_in_data_V;
input  [63:0] payload_in_keep_V;
input  [0:0] payload_in_valid_V;
input  [0:0] payload_in_last_V;
output  [0:0] payload_ready_V;
output  [511:0] packet_out_data_V;
output  [63:0] packet_out_keep_V;
output  [0:0] packet_out_valid_V;
output  [0:0] packet_out_last_V;
input  [0:0] packet_out_ready_V;

reg   [511:0] packet_out_reg_data_s;
reg   [63:0] packet_out_reg_keep_s;
reg   [0:0] packet_out_reg_valid;
reg   [0:0] packet_out_reg_last_s;
reg   [0:0] payloadin_pause_V;
reg   [0:0] IN_PACKET_V;
reg   [47:0] myMac_reg_V;
reg   [31:0] myIP_reg_V;
reg   [511:0] payload_in_reg_data_s;
reg   [0:0] payload_in_reg_last_s;
reg   [63:0] payload_in_reg_keep_s;
reg   [0:0] payload_in_reg_valid;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] packet_out_ready_V_r_read_fu_170_p2;
wire   [0:0] ret_V_5_fu_402_p2;
wire   [0:0] IN_PACKET_V_load_load_fu_392_p1;
wire   [511:0] p_Result_4_fu_464_p3;
wire   [511:0] p_Result_s_8_fu_650_p14;
wire   [63:0] p_Result_5_fu_494_p3;
wire   [63:0] p_Result_2_fu_692_p3;
wire   [0:0] ret_V_8_fu_508_p2;
wire   [0:0] ret_V_15_fu_332_p2;
wire   [0:0] rhs_V_1_load_fu_344_p1;
wire   [0:0] ret_V_11_fu_762_p2;
wire   [0:0] ret_V_9_fu_530_p2;
wire   [0:0] action_valid_V_read_read_fu_206_p2;
wire   [0:0] ret_V_7_fu_450_p2;
wire   [0:0] tmp_fu_318_p3;
wire   [0:0] xor_ln1355_fu_326_p2;
wire   [0:0] ret_V_12_fu_338_p2;
wire   [0:0] ret_V_13_fu_348_p2;
wire   [0:0] rhs_V_fu_312_p2;
wire   [0:0] and_ln1355_2_fu_354_p2;
wire   [0:0] rhs_V_3_fu_367_p2;
wire   [0:0] and_ln1355_4_fu_373_p2;
wire   [0:0] ret_V_14_fu_386_p2;
wire   [0:0] rhs_V_4_fu_396_p2;
wire   [0:0] lhs_V_fu_444_p2;
wire   [175:0] grp_fu_272_p4;
wire   [335:0] trunc_ln647_fu_436_p1;
wire   [175:0] select_ln1355_fu_456_p3;
wire   [21:0] grp_fu_282_p4;
wire   [41:0] trunc_ln647_1_fu_482_p1;
wire   [21:0] select_ln1355_1_fu_486_p3;
wire   [15:0] action_payload_lengt_fu_556_p4;
wire   [0:0] tmp_1_fu_626_p3;
wire   [15:0] zext_ln215_fu_634_p1;
wire   [15:0] p_Result_s_fu_616_p4;
wire   [15:0] add_ln215_2_fu_638_p2;
wire   [47:0] action_dst_mac_V_loa_fu_542_p4;
wire   [15:0] add_ln215_fu_566_p2;
wire   [15:0] action_ip_cksum_V_lo_fu_572_p4;
wire   [31:0] trunc_ln215_fu_586_p1;
wire   [15:0] action_src_port_V_lo_fu_590_p4;
wire   [15:0] action_dst_port_V_lo_fu_600_p4;
wire   [15:0] add_ln215_1_fu_610_p2;
wire   [15:0] xor_ln215_fu_644_p2;
wire   [21:0] or_ln1356_fu_686_p2;
wire   [0:0] and_ln1355_fu_756_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_condition_354;

// power-on initialization
initial begin
#0 packet_out_reg_data_s = 512'd0;
#0 packet_out_reg_keep_s = 64'd0;
#0 packet_out_reg_valid = 1'd0;
#0 packet_out_reg_last_s = 1'd0;
#0 payloadin_pause_V = 1'd0;
#0 IN_PACKET_V = 1'd0;
#0 myMac_reg_V = 48'd0;
#0 myIP_reg_V = 32'd0;
#0 payload_in_reg_data_s = 512'd0;
#0 payload_in_reg_last_s = 1'd0;
#0 payload_in_reg_keep_s = 64'd0;
#0 payload_in_reg_valid = 1'd0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        IN_PACKET_V <= 1'd0;
    end else begin
        if (((packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            if ((ret_V_5_fu_402_p2 == 1'd1)) begin
                IN_PACKET_V <= payload_in_keep_V[32'd41];
            end else if ((1'b1 == ap_condition_354)) begin
                IN_PACKET_V <= 1'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        myIP_reg_V <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            myIP_reg_V <= myIP_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        myMac_reg_V <= 48'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            myMac_reg_V <= myMac_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        packet_out_reg_data_s <= 512'd0;
    end else begin
        if (((packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            if ((ret_V_5_fu_402_p2 == 1'd1)) begin
                packet_out_reg_data_s <= p_Result_s_8_fu_650_p14;
            end else if (((1'd1 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0))) begin
                packet_out_reg_data_s <= p_Result_4_fu_464_p3;
            end else if (((1'd0 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0))) begin
                packet_out_reg_data_s <= 512'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        packet_out_reg_keep_s <= 64'd0;
    end else begin
        if (((packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            if ((ret_V_5_fu_402_p2 == 1'd1)) begin
                packet_out_reg_keep_s <= p_Result_2_fu_692_p3;
            end else if (((1'd1 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0))) begin
                packet_out_reg_keep_s <= p_Result_5_fu_494_p3;
            end else if (((1'd0 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0))) begin
                packet_out_reg_keep_s <= 64'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        packet_out_reg_last_s <= 1'd0;
    end else begin
        if (((packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            if ((ret_V_5_fu_402_p2 == 1'd1)) begin
                packet_out_reg_last_s <= ret_V_15_fu_332_p2;
            end else if (((1'd1 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0))) begin
                packet_out_reg_last_s <= ret_V_8_fu_508_p2;
            end else if (((1'd0 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0))) begin
                packet_out_reg_last_s <= 1'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        packet_out_reg_valid <= 1'd0;
    end else begin
        if (((packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            if ((ret_V_5_fu_402_p2 == 1'd1)) begin
                packet_out_reg_valid <= 1'd1;
            end else if (((1'd1 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0))) begin
                packet_out_reg_valid <= payload_in_reg_valid;
            end else if (((1'd0 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0))) begin
                packet_out_reg_valid <= 1'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        payload_in_reg_data_s <= 512'd0;
    end else begin
        if (((1'd1 == action_valid_V_read_read_fu_206_p2) & (packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            payload_in_reg_data_s <= payload_in_data_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        payload_in_reg_keep_s <= 64'd0;
    end else begin
        if (((1'd1 == action_valid_V_read_read_fu_206_p2) & (packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            payload_in_reg_keep_s <= payload_in_keep_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        payload_in_reg_last_s <= 1'd0;
    end else begin
        if (((1'd1 == action_valid_V_read_read_fu_206_p2) & (packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            payload_in_reg_last_s <= payload_in_last_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        payload_in_reg_valid <= 1'd0;
    end else begin
        if (((1'd1 == action_valid_V_read_read_fu_206_p2) & (packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            payload_in_reg_valid <= payload_in_valid_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        payloadin_pause_V <= 1'd0;
    end else begin
        if (((packet_out_ready_V_r_read_fu_170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            if ((rhs_V_1_load_fu_344_p1 == 1'd1)) begin
                payloadin_pause_V <= 1'd0;
            end else if (((ret_V_11_fu_762_p2 == 1'd1) & (rhs_V_1_load_fu_344_p1 == 1'd0))) begin
                payloadin_pause_V <= 1'd1;
            end
        end
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IN_PACKET_V_load_load_fu_392_p1 = IN_PACKET_V;

assign action_dst_mac_V_loa_fu_542_p4 = {{action[79:32]}};

assign action_dst_port_V_lo_fu_600_p4 = {{action[111:96]}};

assign action_ip_cksum_V_lo_fu_572_p4 = {{action[144:129]}};

assign action_payload_lengt_fu_556_p4 = {{action[160:145]}};

assign action_re_V = (packet_out_ready_V & and_ln1355_2_fu_354_p2);

assign action_src_port_V_lo_fu_590_p4 = {{action[95:80]}};

assign action_valid_V_read_read_fu_206_p2 = action_valid_V;

assign add_ln215_1_fu_610_p2 = (16'd8 + action_payload_lengt_fu_556_p4);

assign add_ln215_2_fu_638_p2 = (zext_ln215_fu_634_p1 + p_Result_s_fu_616_p4);

assign add_ln215_fu_566_p2 = (16'd28 + action_payload_lengt_fu_556_p4);

assign and_ln1355_2_fu_354_p2 = (rhs_V_fu_312_p2 & ret_V_13_fu_348_p2);

assign and_ln1355_4_fu_373_p2 = (rhs_V_3_fu_367_p2 & action_valid_V);

assign and_ln1355_fu_756_p2 = (tmp_fu_318_p3 & payload_in_last_V);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_condition_354 = ((ret_V_9_fu_530_p2 == 1'd1) & (1'd1 == IN_PACKET_V_load_load_fu_392_p1) & (ret_V_5_fu_402_p2 == 1'd0));
end

assign grp_fu_272_p4 = {{payload_in_data_V[511:336]}};

assign grp_fu_282_p4 = {{payload_in_keep_V[63:42]}};

assign lhs_V_fu_444_p2 = (payload_in_reg_last_s ^ 1'd1);

assign or_ln1356_fu_686_p2 = (grp_fu_282_p4 | 22'd4194288);

assign p_Result_2_fu_692_p3 = {{42'd4398046511103}, {or_ln1356_fu_686_p2}};

assign p_Result_4_fu_464_p3 = {{trunc_ln647_fu_436_p1}, {select_ln1355_fu_456_p3}};

assign p_Result_5_fu_494_p3 = {{trunc_ln647_1_fu_482_p1}, {select_ln1355_1_fu_486_p3}};

assign p_Result_s_8_fu_650_p14 = {{{{{{{{{{{{{action_dst_mac_V_loa_fu_542_p4}, {myMac_reg_V}}, {32'd134235392}}, {add_ln215_fu_566_p2}}, {48'd1073758225}}, {action_ip_cksum_V_lo_fu_572_p4}}, {myIP_reg_V}}, {trunc_ln215_fu_586_p1}}, {action_src_port_V_lo_fu_590_p4}}, {action_dst_port_V_lo_fu_600_p4}}, {add_ln215_1_fu_610_p2}}, {xor_ln215_fu_644_p2}}, {grp_fu_272_p4}};

assign p_Result_s_fu_616_p4 = {{action[127:112]}};

assign packet_out_data_V = packet_out_reg_data_s;

assign packet_out_keep_V = packet_out_reg_keep_s;

assign packet_out_last_V = packet_out_reg_last_s;

assign packet_out_ready_V_r_read_fu_170_p2 = packet_out_ready_V;

assign packet_out_valid_V = packet_out_reg_valid;

assign payload_ready_V = (packet_out_ready_V & and_ln1355_4_fu_373_p2);

assign ret_V_11_fu_762_p2 = (ret_V_14_fu_386_p2 & and_ln1355_fu_756_p2);

assign ret_V_12_fu_338_p2 = (ret_V_15_fu_332_p2 & payload_in_valid_V);

assign ret_V_13_fu_348_p2 = (ret_V_12_fu_338_p2 | payloadin_pause_V);

assign ret_V_14_fu_386_p2 = (payload_in_valid_V & action_valid_V);

assign ret_V_15_fu_332_p2 = (xor_ln1355_fu_326_p2 & payload_in_last_V);

assign ret_V_5_fu_402_p2 = (rhs_V_4_fu_396_p2 & ret_V_14_fu_386_p2);

assign ret_V_7_fu_450_p2 = (payload_in_valid_V & lhs_V_fu_444_p2);

assign ret_V_8_fu_508_p2 = (ret_V_15_fu_332_p2 | payload_in_reg_last_s);

assign ret_V_9_fu_530_p2 = (xor_ln1355_fu_326_p2 | payload_in_reg_last_s);

assign rhs_V_1_load_fu_344_p1 = payloadin_pause_V;

assign rhs_V_3_fu_367_p2 = (payloadin_pause_V ^ 1'd1);

assign rhs_V_4_fu_396_p2 = (1'd1 ^ IN_PACKET_V);

assign rhs_V_fu_312_p2 = (1'd1 ^ action_empty_V);

assign select_ln1355_1_fu_486_p3 = ((ret_V_7_fu_450_p2[0:0] === 1'b1) ? grp_fu_282_p4 : 22'd0);

assign select_ln1355_fu_456_p3 = ((ret_V_7_fu_450_p2[0:0] === 1'b1) ? grp_fu_272_p4 : 176'd0);

assign tmp_1_fu_626_p3 = action[32'd128];

assign tmp_fu_318_p3 = payload_in_keep_V[32'd41];

assign trunc_ln215_fu_586_p1 = action[31:0];

assign trunc_ln647_1_fu_482_p1 = payload_in_reg_keep_s[41:0];

assign trunc_ln647_fu_436_p1 = payload_in_reg_data_s[335:0];

assign xor_ln1355_fu_326_p2 = (tmp_fu_318_p3 ^ 1'd1);

assign xor_ln215_fu_644_p2 = (16'd65535 ^ add_ln215_2_fu_638_p2);

assign zext_ln215_fu_634_p1 = tmp_1_fu_626_p3;

endmodule //udp_eth_assemble
