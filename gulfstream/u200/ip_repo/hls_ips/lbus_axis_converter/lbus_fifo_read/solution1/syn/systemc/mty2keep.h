// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mty2keep_HH_
#define _mty2keep_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct mty2keep : public sc_module {
    // Port declarations 4
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<4> > mty_V;
    sc_in< sc_lv<1> > ena_V;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    mty2keep(sc_module_name name);
    SC_HAS_PROCESS(mty2keep);

    ~mty2keep();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > rhs_V_fu_64_p2;
    sc_signal< sc_lv<1> > rhs_V_1_fu_76_p2;
    sc_signal< sc_lv<1> > rhs_V_2_fu_88_p2;
    sc_signal< sc_lv<1> > rhs_V_3_fu_100_p2;
    sc_signal< sc_lv<1> > rhs_V_4_fu_112_p2;
    sc_signal< sc_lv<1> > rhs_V_5_fu_124_p2;
    sc_signal< sc_lv<1> > rhs_V_6_fu_136_p2;
    sc_signal< sc_lv<1> > tmp_fu_148_p3;
    sc_signal< sc_lv<1> > xor_ln1355_fu_156_p2;
    sc_signal< sc_lv<1> > rhs_V_7_fu_168_p2;
    sc_signal< sc_lv<1> > rhs_V_8_fu_180_p2;
    sc_signal< sc_lv<1> > rhs_V_9_fu_192_p2;
    sc_signal< sc_lv<2> > tmp_1_fu_204_p4;
    sc_signal< sc_lv<1> > rhs_V_10_fu_214_p2;
    sc_signal< sc_lv<1> > rhs_V_11_fu_226_p2;
    sc_signal< sc_lv<3> > tmp_2_fu_238_p4;
    sc_signal< sc_lv<1> > rhs_V_12_fu_248_p2;
    sc_signal< sc_lv<1> > rhs_V_13_fu_260_p2;
    sc_signal< sc_lv<1> > ret_V_fu_70_p2;
    sc_signal< sc_lv<1> > ret_V_1_fu_82_p2;
    sc_signal< sc_lv<1> > ret_V_2_fu_94_p2;
    sc_signal< sc_lv<1> > ret_V_3_fu_106_p2;
    sc_signal< sc_lv<1> > ret_V_4_fu_118_p2;
    sc_signal< sc_lv<1> > ret_V_5_fu_130_p2;
    sc_signal< sc_lv<1> > ret_V_6_fu_142_p2;
    sc_signal< sc_lv<1> > ret_V_7_fu_162_p2;
    sc_signal< sc_lv<1> > ret_V_8_fu_174_p2;
    sc_signal< sc_lv<1> > ret_V_9_fu_186_p2;
    sc_signal< sc_lv<1> > ret_V_10_fu_198_p2;
    sc_signal< sc_lv<1> > ret_V_11_fu_220_p2;
    sc_signal< sc_lv<1> > ret_V_12_fu_232_p2;
    sc_signal< sc_lv<1> > ret_V_13_fu_254_p2;
    sc_signal< sc_lv<1> > ret_V_14_fu_266_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ret_V_10_fu_198_p2();
    void thread_ret_V_11_fu_220_p2();
    void thread_ret_V_12_fu_232_p2();
    void thread_ret_V_13_fu_254_p2();
    void thread_ret_V_14_fu_266_p2();
    void thread_ret_V_1_fu_82_p2();
    void thread_ret_V_2_fu_94_p2();
    void thread_ret_V_3_fu_106_p2();
    void thread_ret_V_4_fu_118_p2();
    void thread_ret_V_5_fu_130_p2();
    void thread_ret_V_6_fu_142_p2();
    void thread_ret_V_7_fu_162_p2();
    void thread_ret_V_8_fu_174_p2();
    void thread_ret_V_9_fu_186_p2();
    void thread_ret_V_fu_70_p2();
    void thread_rhs_V_10_fu_214_p2();
    void thread_rhs_V_11_fu_226_p2();
    void thread_rhs_V_12_fu_248_p2();
    void thread_rhs_V_13_fu_260_p2();
    void thread_rhs_V_1_fu_76_p2();
    void thread_rhs_V_2_fu_88_p2();
    void thread_rhs_V_3_fu_100_p2();
    void thread_rhs_V_4_fu_112_p2();
    void thread_rhs_V_5_fu_124_p2();
    void thread_rhs_V_6_fu_136_p2();
    void thread_rhs_V_7_fu_168_p2();
    void thread_rhs_V_8_fu_180_p2();
    void thread_rhs_V_9_fu_192_p2();
    void thread_rhs_V_fu_64_p2();
    void thread_tmp_1_fu_204_p4();
    void thread_tmp_2_fu_238_p4();
    void thread_tmp_fu_148_p3();
    void thread_xor_ln1355_fu_156_p2();
};

}

using namespace ap_rtl;

#endif
