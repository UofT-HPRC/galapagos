// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ether_protocol_spliter_HH_
#define _ether_protocol_spliter_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct ether_protocol_spliter : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<48> > myMacAddr_V;
    sc_in< sc_lv<512> > s_axis_data_V;
    sc_in< sc_lv<64> > s_axis_keep_V;
    sc_in< sc_lv<1> > s_axis_last_V;
    sc_in< sc_lv<1> > s_axis_valid_V;
    sc_out< sc_lv<336> > arp_data_V;
    sc_out< sc_lv<1> > arp_valid_V;
    sc_out< sc_lv<336> > ip_data_V;
    sc_out< sc_lv<1> > ip_valid_V;
    sc_out< sc_lv<512> > payload_data_V;
    sc_out< sc_lv<1> > payload_valid_V;
    sc_out< sc_lv<1> > payload_last_V;
    sc_out< sc_lv<16> > payload_len_data_V;
    sc_out< sc_lv<1> > payload_len_valid_V;


    // Module declarations
    ether_protocol_spliter(sc_module_name name);
    SC_HAS_PROCESS(ether_protocol_spliter);

    ~ether_protocol_spliter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<336> > arp_output_reg_data_s;
    sc_signal< sc_lv<1> > arp_output_reg_valid;
    sc_signal< sc_lv<336> > ip_output_reg_data_V;
    sc_signal< sc_lv<1> > ip_output_reg_valid_s;
    sc_signal< sc_lv<512> > payload_output_reg_d;
    sc_signal< sc_lv<1> > payload_output_reg_v;
    sc_signal< sc_lv<1> > payload_output_reg_l;
    sc_signal< sc_lv<16> > payload_len_reg_data;
    sc_signal< sc_lv<1> > payload_len_reg_vali;
    sc_signal< sc_lv<1> > axis_input_reg_valid;
    sc_signal< sc_lv<512> > axis_input_reg_data_s;
    sc_signal< sc_lv<48> > myMacAddr_reg_V;
    sc_signal< sc_lv<1> > in_ip_packet_V;
    sc_signal< sc_lv<1> > axis_input_reg_last_s;
    sc_signal< sc_lv<64> > axis_input_reg_keep_s;
    sc_signal< sc_lv<1> > ap_phi_mux_val_assign_1_phi_fu_232_p6;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > lhs_V_3_load_fu_330_p1;
    sc_signal< sc_lv<1> > or_ln63_fu_415_p2;
    sc_signal< sc_lv<1> > and_ln63_fu_427_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_payload_output_reg_d_1_phi_fu_245_p4;
    sc_signal< sc_lv<1> > ret_V_4_fu_568_p2;
    sc_signal< sc_lv<512> > p_Result_s_10_fu_648_p5;
    sc_signal< sc_lv<512> > ap_phi_mux_p_Val2_3_phi_fu_256_p4;
    sc_signal< sc_lv<1> > ret_V_10_fu_771_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_storemerge1171_phi_fu_265_p6;
    sc_signal< sc_lv<1> > ret_V_8_fu_759_p2;
    sc_signal< sc_lv<1> > or_ln70_fu_580_p2;
    sc_signal< sc_lv<1> > or_ln73_fu_620_p2;
    sc_signal< sc_lv<1> > or_ln73_1_fu_632_p2;
    sc_signal< sc_lv<1> > icmp_ln879_4_fu_450_p2;
    sc_signal< sc_lv<1> > and_ln879_1_fu_397_p2;
    sc_signal< sc_lv<512> > select_ln1355_1_fu_727_p3;
    sc_signal< sc_lv<1> > or_ln1355_1_fu_713_p2;
    sc_signal< sc_lv<1> > ret_V_fu_556_p2;
    sc_signal< sc_lv<16> > add_ln214_fu_602_p2;
    sc_signal< sc_lv<1> > and_ln879_3_fu_490_p2;
    sc_signal< sc_lv<1> > and_ln96_fu_784_p2;
    sc_signal< sc_lv<1> > or_ln96_1_fu_802_p2;
    sc_signal< sc_lv<48> > p_Result_s_fu_353_p4;
    sc_signal< sc_lv<16> > p_Result_1_fu_369_p4;
    sc_signal< sc_lv<1> > icmp_ln879_fu_363_p2;
    sc_signal< sc_lv<1> > xor_ln761_fu_385_p2;
    sc_signal< sc_lv<1> > and_ln879_fu_391_p2;
    sc_signal< sc_lv<1> > icmp_ln879_1_fu_379_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_409_p2;
    sc_signal< sc_lv<1> > icmp_ln879_3_fu_421_p2;
    sc_signal< sc_lv<48> > p_Result_5_fu_440_p4;
    sc_signal< sc_lv<16> > p_Result_6_fu_456_p4;
    sc_signal< sc_lv<1> > icmp_ln879_5_fu_466_p2;
    sc_signal< sc_lv<1> > xor_ln761_1_fu_472_p2;
    sc_signal< sc_lv<1> > and_ln64_fu_478_p2;
    sc_signal< sc_lv<1> > and_ln879_2_fu_484_p2;
    sc_signal< sc_lv<1> > ret_V_14_fu_506_p2;
    sc_signal< sc_lv<1> > tmp_fu_516_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_530_p3;
    sc_signal< sc_lv<1> > xor_ln1355_fu_538_p2;
    sc_signal< sc_lv<1> > and_ln1355_fu_544_p2;
    sc_signal< sc_lv<1> > ret_V_15_fu_524_p2;
    sc_signal< sc_lv<1> > ret_V_16_fu_550_p2;
    sc_signal< sc_lv<1> > icmp_ln70_fu_574_p2;
    sc_signal< sc_lv<16> > p_Result_4_fu_592_p4;
    sc_signal< sc_lv<1> > icmp_ln879_6_fu_614_p2;
    sc_signal< sc_lv<1> > icmp_ln73_fu_626_p2;
    sc_signal< sc_lv<176> > trunc_ln647_fu_644_p1;
    sc_signal< sc_lv<1> > rhs_V_fu_661_p2;
    sc_signal< sc_lv<336> > p_Result_8_fu_673_p4;
    sc_signal< sc_lv<1> > or_ln1355_fu_707_p2;
    sc_signal< sc_lv<1> > ret_V_6_fu_667_p2;
    sc_signal< sc_lv<512> > p_Result_2_fu_683_p5;
    sc_signal< sc_lv<512> > p_Result_3_fu_695_p5;
    sc_signal< sc_lv<512> > select_ln1355_fu_719_p3;
    sc_signal< sc_lv<1> > ret_V_18_fu_741_p2;
    sc_signal< sc_lv<1> > and_ln1355_4_fu_753_p2;
    sc_signal< sc_lv<1> > and_ln1355_3_fu_747_p2;
    sc_signal< sc_lv<1> > ret_V_17_fu_765_p2;
    sc_signal< sc_lv<1> > icmp_ln96_fu_790_p2;
    sc_signal< sc_lv<1> > or_ln96_fu_796_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_condition_158;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<336> ap_const_lv336_lc_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<48> ap_const_lv48_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_B0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_1D0;
    static const sc_lv<32> ap_const_lv32_190;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<16> ap_const_lv16_800;
    static const sc_lv<48> ap_const_lv48_FFFFFFFFFFFF;
    static const sc_lv<16> ap_const_lv16_806;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_170;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<16> ap_const_lv16_FFE4;
    static const sc_lv<32> ap_const_lv32_150;
    static const sc_lv<32> ap_const_lv32_14F;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln214_fu_602_p2();
    void thread_and_ln1355_3_fu_747_p2();
    void thread_and_ln1355_4_fu_753_p2();
    void thread_and_ln1355_fu_544_p2();
    void thread_and_ln63_fu_427_p2();
    void thread_and_ln64_fu_478_p2();
    void thread_and_ln879_1_fu_397_p2();
    void thread_and_ln879_2_fu_484_p2();
    void thread_and_ln879_3_fu_490_p2();
    void thread_and_ln879_fu_391_p2();
    void thread_and_ln96_fu_784_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_condition_158();
    void thread_ap_phi_mux_p_Val2_3_phi_fu_256_p4();
    void thread_ap_phi_mux_payload_output_reg_d_1_phi_fu_245_p4();
    void thread_ap_phi_mux_storemerge1171_phi_fu_265_p6();
    void thread_ap_phi_mux_val_assign_1_phi_fu_232_p6();
    void thread_arp_data_V();
    void thread_arp_valid_V();
    void thread_icmp_ln70_fu_574_p2();
    void thread_icmp_ln73_fu_626_p2();
    void thread_icmp_ln879_1_fu_379_p2();
    void thread_icmp_ln879_2_fu_409_p2();
    void thread_icmp_ln879_3_fu_421_p2();
    void thread_icmp_ln879_4_fu_450_p2();
    void thread_icmp_ln879_5_fu_466_p2();
    void thread_icmp_ln879_6_fu_614_p2();
    void thread_icmp_ln879_fu_363_p2();
    void thread_icmp_ln96_fu_790_p2();
    void thread_ip_data_V();
    void thread_ip_valid_V();
    void thread_lhs_V_3_load_fu_330_p1();
    void thread_or_ln1355_1_fu_713_p2();
    void thread_or_ln1355_fu_707_p2();
    void thread_or_ln63_fu_415_p2();
    void thread_or_ln70_fu_580_p2();
    void thread_or_ln73_1_fu_632_p2();
    void thread_or_ln73_fu_620_p2();
    void thread_or_ln96_1_fu_802_p2();
    void thread_or_ln96_fu_796_p2();
    void thread_p_Result_1_fu_369_p4();
    void thread_p_Result_2_fu_683_p5();
    void thread_p_Result_3_fu_695_p5();
    void thread_p_Result_4_fu_592_p4();
    void thread_p_Result_5_fu_440_p4();
    void thread_p_Result_6_fu_456_p4();
    void thread_p_Result_8_fu_673_p4();
    void thread_p_Result_s_10_fu_648_p5();
    void thread_p_Result_s_fu_353_p4();
    void thread_payload_data_V();
    void thread_payload_last_V();
    void thread_payload_len_data_V();
    void thread_payload_len_valid_V();
    void thread_payload_valid_V();
    void thread_ret_V_10_fu_771_p2();
    void thread_ret_V_14_fu_506_p2();
    void thread_ret_V_15_fu_524_p2();
    void thread_ret_V_16_fu_550_p2();
    void thread_ret_V_17_fu_765_p2();
    void thread_ret_V_18_fu_741_p2();
    void thread_ret_V_4_fu_568_p2();
    void thread_ret_V_6_fu_667_p2();
    void thread_ret_V_8_fu_759_p2();
    void thread_ret_V_fu_556_p2();
    void thread_rhs_V_fu_661_p2();
    void thread_select_ln1355_1_fu_727_p3();
    void thread_select_ln1355_fu_719_p3();
    void thread_tmp_1_fu_530_p3();
    void thread_tmp_fu_516_p3();
    void thread_trunc_ln647_fu_644_p1();
    void thread_xor_ln1355_fu_538_p2();
    void thread_xor_ln761_1_fu_472_p2();
    void thread_xor_ln761_fu_385_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
