// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _payload_validator_HH_
#define _payload_validator_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct payload_validator : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<1> > clear_V;
    sc_in< sc_lv<32> > packet_num_V;
    sc_in< sc_lv<32> > counter_in_V;
    sc_in< sc_lv<512> > s_axis_data_V;
    sc_in< sc_lv<64> > s_axis_keep_V;
    sc_in< sc_lv<1> > s_axis_last_V;
    sc_in< sc_lv<1> > s_axis_valid_V;
    sc_out< sc_lv<64> > latency_sum_V;
    sc_out< sc_lv<64> > time_elapse_V;
    sc_out< sc_lv<32> > curr_cnt_V;
    sc_out< sc_lv<1> > done_V;
    sc_out< sc_lv<1> > error_V;


    // Module declarations
    payload_validator(sc_module_name name);
    SC_HAS_PROCESS(payload_validator);

    ~payload_validator();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<32> > packet_cnt_V;
    sc_signal< sc_lv<1> > error_reg_V;
    sc_signal< sc_lv<1> > done_reg_V;
    sc_signal< sc_lv<64> > latency_sum_reg_V;
    sc_signal< sc_lv<64> > time_elapse_reg_V;
    sc_signal< sc_lv<1> > clear_reg_V;
    sc_signal< sc_lv<1> > IN_PACKET_V;
    sc_signal< sc_lv<32> > latency_V;
    sc_signal< sc_lv<1> > init_reg_V;
    sc_signal< sc_lv<32> > add_ln214_fu_191_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > ret_V_fu_228_p2;
    sc_signal< sc_lv<1> > ret_V_6_fu_394_p2;
    sc_signal< sc_lv<1> > ret_V_3_fu_316_p2;
    sc_signal< sc_lv<1> > tmp_fu_352_p3;
    sc_signal< sc_lv<1> > icmp_ln879_fu_346_p2;
    sc_signal< sc_lv<1> > icmp_ln879_1_fu_282_p2;
    sc_signal< sc_lv<64> > add_ln700_1_fu_270_p2;
    sc_signal< sc_lv<64> > add_ln700_fu_250_p2;
    sc_signal< sc_lv<1> > ret_V_1_fu_244_p2;
    sc_signal< sc_lv<1> > ret_V_5_fu_304_p2;
    sc_signal< sc_lv<32> > sub_ln214_fu_376_p2;
    sc_signal< sc_lv<1> > lhs_V_fu_222_p2;
    sc_signal< sc_lv<1> > rhs_V_fu_234_p2;
    sc_signal< sc_lv<64> > zext_ln700_fu_266_p1;
    sc_signal< sc_lv<1> > lhs_V_2_fu_298_p2;
    sc_signal< sc_lv<1> > rhs_V_1_fu_310_p2;
    sc_signal< sc_lv<33> > zext_ln215_fu_322_p1;
    sc_signal< sc_lv<32> > p_Result_3_fu_332_p4;
    sc_signal< sc_lv<33> > zext_ln647_fu_342_p1;
    sc_signal< sc_lv<33> > ret_V_4_fu_326_p2;
    sc_signal< sc_lv<32> > p_Result_4_fu_366_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_condition_59;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<33> ap_const_lv33_1;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln214_fu_191_p2();
    void thread_add_ln700_1_fu_270_p2();
    void thread_add_ln700_fu_250_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_condition_59();
    void thread_curr_cnt_V();
    void thread_done_V();
    void thread_error_V();
    void thread_icmp_ln879_1_fu_282_p2();
    void thread_icmp_ln879_fu_346_p2();
    void thread_latency_sum_V();
    void thread_lhs_V_2_fu_298_p2();
    void thread_lhs_V_fu_222_p2();
    void thread_p_Result_3_fu_332_p4();
    void thread_p_Result_4_fu_366_p4();
    void thread_ret_V_1_fu_244_p2();
    void thread_ret_V_3_fu_316_p2();
    void thread_ret_V_4_fu_326_p2();
    void thread_ret_V_5_fu_304_p2();
    void thread_ret_V_6_fu_394_p2();
    void thread_ret_V_fu_228_p2();
    void thread_rhs_V_1_fu_310_p2();
    void thread_rhs_V_fu_234_p2();
    void thread_sub_ln214_fu_376_p2();
    void thread_time_elapse_V();
    void thread_tmp_fu_352_p3();
    void thread_zext_ln215_fu_322_p1();
    void thread_zext_ln647_fu_342_p1();
    void thread_zext_ln700_fu_266_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
