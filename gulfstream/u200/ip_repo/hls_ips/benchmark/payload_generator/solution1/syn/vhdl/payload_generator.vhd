-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity payload_generator is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    start_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ready_V : IN STD_LOGIC_VECTOR (0 downto 0);
    packet_num_V : IN STD_LOGIC_VECTOR (31 downto 0);
    payload_len_V : IN STD_LOGIC_VECTOR (15 downto 0);
    counter_out_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    time_elapse_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_data_V : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axis_keep_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_last_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_valid_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    done_V : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of payload_generator is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "payload_generator,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=3.103000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.675125,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=324,HLS_SYN_LUT=1827,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv448_lc_1 : STD_LOGIC_VECTOR (447 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv16_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000101";
    constant ap_const_lv16_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv16_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001001";
    constant ap_const_lv16_A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001010";
    constant ap_const_lv16_B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001011";
    constant ap_const_lv16_C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001100";
    constant ap_const_lv16_D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001101";
    constant ap_const_lv16_E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv16_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_const_lv16_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010001";
    constant ap_const_lv16_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010010";
    constant ap_const_lv16_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010011";
    constant ap_const_lv16_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010100";
    constant ap_const_lv16_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010101";
    constant ap_const_lv16_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010110";
    constant ap_const_lv16_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010111";
    constant ap_const_lv16_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011000";
    constant ap_const_lv16_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011001";
    constant ap_const_lv16_1A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011010";
    constant ap_const_lv16_1B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011011";
    constant ap_const_lv16_1C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011100";
    constant ap_const_lv16_1D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011101";
    constant ap_const_lv16_1E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_const_lv16_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100001";
    constant ap_const_lv16_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100010";
    constant ap_const_lv16_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100011";
    constant ap_const_lv16_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100100";
    constant ap_const_lv16_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100101";
    constant ap_const_lv16_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100110";
    constant ap_const_lv16_27 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100111";
    constant ap_const_lv16_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101000";
    constant ap_const_lv16_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101001";
    constant ap_const_lv16_2A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101010";
    constant ap_const_lv16_2B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101011";
    constant ap_const_lv16_2C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101100";
    constant ap_const_lv16_2D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101101";
    constant ap_const_lv16_2E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101110";
    constant ap_const_lv16_2F : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101111";
    constant ap_const_lv16_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110000";
    constant ap_const_lv16_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110001";
    constant ap_const_lv16_32 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110010";
    constant ap_const_lv16_33 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110011";
    constant ap_const_lv16_34 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110100";
    constant ap_const_lv16_35 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110101";
    constant ap_const_lv16_36 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110110";
    constant ap_const_lv16_37 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110111";
    constant ap_const_lv16_38 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000111000";
    constant ap_const_lv16_39 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000111001";
    constant ap_const_lv16_3A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000111010";
    constant ap_const_lv16_3B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000111011";
    constant ap_const_lv16_3C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000111100";
    constant ap_const_lv16_3D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000111101";
    constant ap_const_lv16_3E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000111110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv16_41 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000001";
    constant ap_const_lv16_FFC0 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111000000";
    constant ap_const_lv16_2556 : STD_LOGIC_VECTOR (15 downto 0) := "0010010101010110";
    constant ap_const_lv14_2556 : STD_LOGIC_VECTOR (13 downto 0) := "10010101010110";
    constant ap_const_lv14_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal done_reg_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal axis_reg_data_V : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal axis_reg_keep_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal axis_reg_last_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal axis_reg_valid_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cnt_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal time_elapse_reg_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal start_reg_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal payload_len_adjusted : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal status_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal packet_id_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal length_remain_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal packet_num_reg_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ret_V_1_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln76_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_4_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_load_fu_472_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_560_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal ret_V_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_1020_p65 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln899_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_2_fu_1218_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_fu_482_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_2_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln899_fu_1296_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_1_fu_1194_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln701_fu_1170_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln321_fu_467_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_1_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln215_fu_498_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln76_fu_512_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_3_fu_502_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln76_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln81_fu_544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_1_fu_552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_582_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_fu_604_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_2_fu_638_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_3_fu_696_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_802_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_fu_1004_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Repl2_1_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_2_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_3_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_4_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_5_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_6_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_7_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_8_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_9_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_10_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_11_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_12_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_13_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_14_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_15_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_16_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_17_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_18_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_19_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_20_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_21_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_22_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_23_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_24_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_25_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_26_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_27_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_28_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_29_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_30_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_31_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_32_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_33_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_34_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_35_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_36_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_37_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_38_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_39_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_40_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_41_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_42_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_43_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_44_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_45_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_46_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_47_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_48_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_49_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_50_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_51_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_52_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_53_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_54_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_55_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_56_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_57_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_58_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_59_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_60_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_61_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_62_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_63_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln102_fu_1284_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln899_1_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln102_fu_1288_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_84 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    axis_reg_data_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                axis_reg_data_V(448) <= '0';
                axis_reg_data_V(449) <= '0';
                axis_reg_data_V(450) <= '0';
                axis_reg_data_V(451) <= '0';
                axis_reg_data_V(452) <= '0';
                axis_reg_data_V(453) <= '0';
                axis_reg_data_V(454) <= '0';
                axis_reg_data_V(455) <= '0';
                axis_reg_data_V(456) <= '0';
                axis_reg_data_V(457) <= '0';
                axis_reg_data_V(458) <= '0';
                axis_reg_data_V(459) <= '0';
                axis_reg_data_V(460) <= '0';
                axis_reg_data_V(461) <= '0';
                axis_reg_data_V(462) <= '0';
                axis_reg_data_V(463) <= '0';
                axis_reg_data_V(464) <= '0';
                axis_reg_data_V(465) <= '0';
                axis_reg_data_V(466) <= '0';
                axis_reg_data_V(467) <= '0';
                axis_reg_data_V(468) <= '0';
                axis_reg_data_V(469) <= '0';
                axis_reg_data_V(470) <= '0';
                axis_reg_data_V(471) <= '0';
                axis_reg_data_V(472) <= '0';
                axis_reg_data_V(473) <= '0';
                axis_reg_data_V(474) <= '0';
                axis_reg_data_V(475) <= '0';
                axis_reg_data_V(476) <= '0';
                axis_reg_data_V(477) <= '0';
                axis_reg_data_V(478) <= '0';
                axis_reg_data_V(479) <= '0';
                axis_reg_data_V(480) <= '0';
                axis_reg_data_V(481) <= '0';
                axis_reg_data_V(482) <= '0';
                axis_reg_data_V(483) <= '0';
                axis_reg_data_V(484) <= '0';
                axis_reg_data_V(485) <= '0';
                axis_reg_data_V(486) <= '0';
                axis_reg_data_V(487) <= '0';
                axis_reg_data_V(488) <= '0';
                axis_reg_data_V(489) <= '0';
                axis_reg_data_V(490) <= '0';
                axis_reg_data_V(491) <= '0';
                axis_reg_data_V(492) <= '0';
                axis_reg_data_V(493) <= '0';
                axis_reg_data_V(494) <= '0';
                axis_reg_data_V(495) <= '0';
                axis_reg_data_V(496) <= '0';
                axis_reg_data_V(497) <= '0';
                axis_reg_data_V(498) <= '0';
                axis_reg_data_V(499) <= '0';
                axis_reg_data_V(500) <= '0';
                axis_reg_data_V(501) <= '0';
                axis_reg_data_V(502) <= '0';
                axis_reg_data_V(503) <= '0';
                axis_reg_data_V(504) <= '0';
                axis_reg_data_V(505) <= '0';
                axis_reg_data_V(506) <= '0';
                axis_reg_data_V(507) <= '0';
                axis_reg_data_V(508) <= '0';
                axis_reg_data_V(509) <= '0';
                axis_reg_data_V(510) <= '0';
                axis_reg_data_V(511) <= '0';
            else
                if (((ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                                        axis_reg_data_V(511 downto 448) <= p_Result_s_fu_560_p4(511 downto 448);
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (rhs_V_load_fu_472_p1 = ap_const_lv1_0) and (ret_V_4_fu_528_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln76_fu_522_p2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)))) then 
                    axis_reg_data_V(448) <= '0';
                    axis_reg_data_V(449) <= '0';
                    axis_reg_data_V(450) <= '0';
                    axis_reg_data_V(451) <= '0';
                    axis_reg_data_V(452) <= '0';
                    axis_reg_data_V(453) <= '0';
                    axis_reg_data_V(454) <= '0';
                    axis_reg_data_V(455) <= '0';
                    axis_reg_data_V(456) <= '0';
                    axis_reg_data_V(457) <= '0';
                    axis_reg_data_V(458) <= '0';
                    axis_reg_data_V(459) <= '0';
                    axis_reg_data_V(460) <= '0';
                    axis_reg_data_V(461) <= '0';
                    axis_reg_data_V(462) <= '0';
                    axis_reg_data_V(463) <= '0';
                    axis_reg_data_V(464) <= '0';
                    axis_reg_data_V(465) <= '0';
                    axis_reg_data_V(466) <= '0';
                    axis_reg_data_V(467) <= '0';
                    axis_reg_data_V(468) <= '0';
                    axis_reg_data_V(469) <= '0';
                    axis_reg_data_V(470) <= '0';
                    axis_reg_data_V(471) <= '0';
                    axis_reg_data_V(472) <= '0';
                    axis_reg_data_V(473) <= '0';
                    axis_reg_data_V(474) <= '0';
                    axis_reg_data_V(475) <= '0';
                    axis_reg_data_V(476) <= '0';
                    axis_reg_data_V(477) <= '0';
                    axis_reg_data_V(478) <= '0';
                    axis_reg_data_V(479) <= '0';
                    axis_reg_data_V(480) <= '0';
                    axis_reg_data_V(481) <= '0';
                    axis_reg_data_V(482) <= '0';
                    axis_reg_data_V(483) <= '0';
                    axis_reg_data_V(484) <= '0';
                    axis_reg_data_V(485) <= '0';
                    axis_reg_data_V(486) <= '0';
                    axis_reg_data_V(487) <= '0';
                    axis_reg_data_V(488) <= '0';
                    axis_reg_data_V(489) <= '0';
                    axis_reg_data_V(490) <= '0';
                    axis_reg_data_V(491) <= '0';
                    axis_reg_data_V(492) <= '0';
                    axis_reg_data_V(493) <= '0';
                    axis_reg_data_V(494) <= '0';
                    axis_reg_data_V(495) <= '0';
                    axis_reg_data_V(496) <= '0';
                    axis_reg_data_V(497) <= '0';
                    axis_reg_data_V(498) <= '0';
                    axis_reg_data_V(499) <= '0';
                    axis_reg_data_V(500) <= '0';
                    axis_reg_data_V(501) <= '0';
                    axis_reg_data_V(502) <= '0';
                    axis_reg_data_V(503) <= '0';
                    axis_reg_data_V(504) <= '0';
                    axis_reg_data_V(505) <= '0';
                    axis_reg_data_V(506) <= '0';
                    axis_reg_data_V(507) <= '0';
                    axis_reg_data_V(508) <= '0';
                    axis_reg_data_V(509) <= '0';
                    axis_reg_data_V(510) <= '0';
                    axis_reg_data_V(511) <= '0';
                end if; 
            end if;
        end if;
    end process;


    axis_reg_keep_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                axis_reg_keep_V <= ap_const_lv64_0;
            else
                if (((ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                    axis_reg_keep_V <= p_Result_1_fu_1020_p65;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (rhs_V_load_fu_472_p1 = ap_const_lv1_0) and (ret_V_4_fu_528_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln76_fu_522_p2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)))) then 
                    axis_reg_keep_V <= ap_const_lv64_0;
                end if; 
            end if;
        end if;
    end process;


    axis_reg_last_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                axis_reg_last_V <= ap_const_lv1_0;
            else
                if (((icmp_ln899_fu_1158_p2 = ap_const_lv1_1) and (ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                    axis_reg_last_V <= p_Repl2_s_fu_576_p2;
                elsif ((((ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln899_fu_1158_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (rhs_V_load_fu_472_p1 = ap_const_lv1_0) and (ret_V_4_fu_528_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln76_fu_522_p2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)))) then 
                    axis_reg_last_V <= ap_const_lv1_0;
                end if; 
            end if;
        end if;
    end process;


    axis_reg_valid_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                axis_reg_valid_V <= ap_const_lv1_0;
            else
                if (((icmp_ln899_fu_1158_p2 = ap_const_lv1_1) and (ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                    axis_reg_valid_V <= p_Repl2_s_fu_576_p2;
                elsif (((ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln899_fu_1158_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                    axis_reg_valid_V <= ap_const_lv1_1;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (rhs_V_load_fu_472_p1 = ap_const_lv1_0) and (ret_V_4_fu_528_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln76_fu_522_p2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)))) then 
                    axis_reg_valid_V <= ap_const_lv1_0;
                end if; 
            end if;
        end if;
    end process;


    cnt_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                cnt_V <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((ret_V_1_fu_457_p2 = ap_const_lv1_1)) then 
                        cnt_V <= ap_const_lv32_0;
                    elsif ((ret_V_1_fu_457_p2 = ap_const_lv1_0)) then 
                        cnt_V <= add_ln700_2_fu_1218_p2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    done_reg_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                done_reg_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((ret_V_1_fu_457_p2 = ap_const_lv1_1)) then 
                        done_reg_V <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                        done_reg_V <= ap_const_lv1_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    length_remain_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                length_remain_V <= ap_const_lv16_0;
            else
                if ((((ret_V_1_fu_457_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln899_fu_1158_p2 = ap_const_lv1_1) and (ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0)))) then 
                    length_remain_V <= zext_ln321_fu_467_p1;
                elsif (((ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln899_fu_1158_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                    length_remain_V <= add_ln701_fu_1170_p2;
                end if; 
            end if;
        end if;
    end process;


    packet_id_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                packet_id_V <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((ret_V_1_fu_457_p2 = ap_const_lv1_1)) then 
                        packet_id_V <= ap_const_lv32_1;
                    elsif ((ap_const_boolean_1 = ap_condition_84)) then 
                        packet_id_V <= add_ln700_1_fu_1194_p2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    packet_num_reg_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                packet_num_reg_V <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    packet_num_reg_V <= packet_num_V;
                end if; 
            end if;
        end if;
    end process;


    payload_len_adjusted_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                payload_len_adjusted <= ap_const_lv14_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    payload_len_adjusted <= select_ln899_fu_1296_p3;
                end if; 
            end if;
        end if;
    end process;


    start_reg_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_reg_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    start_reg_V <= start_V;
                end if; 
            end if;
        end if;
    end process;


    status_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                status_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((ret_V_1_fu_457_p2 = ap_const_lv1_1)) then 
                        status_V <= ap_const_lv1_1;
                    elsif (((ap_const_lv1_1 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                        status_V <= ap_const_lv1_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    time_elapse_reg_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                time_elapse_reg_V <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((ret_V_1_fu_457_p2 = ap_const_lv1_1)) then 
                        time_elapse_reg_V <= ap_const_lv64_0;
                    elsif (((ret_V_2_fu_476_p2 = ap_const_lv1_1) and (ret_V_1_fu_457_p2 = ap_const_lv1_0))) then 
                        time_elapse_reg_V <= add_ln700_fu_482_p2;
                    end if;
                end if; 
            end if;
        end if;
    end process;

    axis_reg_data_V(447 downto 0) <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_1_fu_1194_p2 <= std_logic_vector(unsigned(packet_id_V) + unsigned(ap_const_lv32_1));
    add_ln700_2_fu_1218_p2 <= std_logic_vector(unsigned(cnt_V) + unsigned(ap_const_lv32_1));
    add_ln700_fu_482_p2 <= std_logic_vector(unsigned(time_elapse_reg_V) + unsigned(ap_const_lv64_1));
    add_ln701_fu_1170_p2 <= std_logic_vector(unsigned(length_remain_V) + unsigned(ap_const_lv16_FFC0));
    and_ln76_fu_522_p2 <= (ready_V and icmp_ln76_fu_516_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_condition_84_assign_proc : process(ret_V_1_fu_457_p2, and_ln76_fu_522_p2, ret_V_4_fu_528_p2, icmp_ln899_fu_1158_p2)
    begin
                ap_condition_84 <= ((icmp_ln899_fu_1158_p2 = ap_const_lv1_1) and (ret_V_4_fu_528_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln76_fu_522_p2) and (ret_V_1_fu_457_p2 = ap_const_lv1_0));
    end process;

    counter_out_V <= cnt_V;
    done_V <= done_reg_V;
    icmp_ln76_fu_516_p2 <= "1" when (zext_ln76_fu_512_p1 = ret_V_3_fu_502_p2) else "0";
    icmp_ln879_fu_538_p2 <= "1" when (length_remain_V = zext_ln321_fu_467_p1) else "0";
    icmp_ln891_fu_1278_p2 <= "1" when (unsigned(payload_len_V) < unsigned(ap_const_lv16_2556)) else "0";
    icmp_ln899_1_fu_1272_p2 <= "1" when (unsigned(payload_len_V) < unsigned(ap_const_lv16_9)) else "0";
    icmp_ln899_fu_1158_p2 <= "1" when (unsigned(length_remain_V) < unsigned(ap_const_lv16_41)) else "0";
    lhs_V_1_fu_371_p2 <= (done_reg_V xor ap_const_lv1_1);
    lhs_V_fu_451_p2 <= (start_reg_V xor ap_const_lv1_1);
    m_axis_data_V <= 
        axis_reg_data_V when (ret_V_fu_377_p2(0) = '1') else 
        ap_const_lv512_lc_1;
    m_axis_keep_V <= 
        axis_reg_keep_V when (ret_V_fu_377_p2(0) = '1') else 
        ap_const_lv64_0;
    m_axis_last_V <= (ret_V_fu_377_p2 and axis_reg_last_V);
    m_axis_valid_V <= (ret_V_fu_377_p2 and axis_reg_valid_V);
    p_Repl2_10_fu_666_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_A)) else "0";
    p_Repl2_11_fu_672_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_B)) else "0";
    p_Repl2_12_fu_678_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_C)) else "0";
    p_Repl2_13_fu_684_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_D)) else "0";
    p_Repl2_14_fu_690_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_E)) else "0";
    p_Repl2_15_fu_706_p2 <= "0" when (tmp_3_fu_696_p4 = ap_const_lv12_0) else "1";
    p_Repl2_16_fu_712_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_10)) else "0";
    p_Repl2_17_fu_718_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_11)) else "0";
    p_Repl2_18_fu_724_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_12)) else "0";
    p_Repl2_19_fu_730_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_13)) else "0";
    p_Repl2_1_fu_592_p2 <= "0" when (tmp_fu_582_p4 = ap_const_lv15_0) else "1";
    p_Repl2_20_fu_736_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_14)) else "0";
    p_Repl2_21_fu_742_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_15)) else "0";
    p_Repl2_22_fu_748_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_16)) else "0";
    p_Repl2_23_fu_754_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_17)) else "0";
    p_Repl2_24_fu_760_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_18)) else "0";
    p_Repl2_25_fu_766_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_19)) else "0";
    p_Repl2_26_fu_772_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_1A)) else "0";
    p_Repl2_27_fu_778_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_1B)) else "0";
    p_Repl2_28_fu_784_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_1C)) else "0";
    p_Repl2_29_fu_790_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_1D)) else "0";
    p_Repl2_2_fu_598_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_2)) else "0";
    p_Repl2_30_fu_796_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_1E)) else "0";
    p_Repl2_31_fu_812_p2 <= "0" when (tmp_4_fu_802_p4 = ap_const_lv11_0) else "1";
    p_Repl2_32_fu_818_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_20)) else "0";
    p_Repl2_33_fu_824_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_21)) else "0";
    p_Repl2_34_fu_830_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_22)) else "0";
    p_Repl2_35_fu_836_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_23)) else "0";
    p_Repl2_36_fu_842_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_24)) else "0";
    p_Repl2_37_fu_848_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_25)) else "0";
    p_Repl2_38_fu_854_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_26)) else "0";
    p_Repl2_39_fu_860_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_27)) else "0";
    p_Repl2_3_fu_614_p2 <= "0" when (tmp_1_fu_604_p4 = ap_const_lv14_0) else "1";
    p_Repl2_40_fu_866_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_28)) else "0";
    p_Repl2_41_fu_872_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_29)) else "0";
    p_Repl2_42_fu_878_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_2A)) else "0";
    p_Repl2_43_fu_884_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_2B)) else "0";
    p_Repl2_44_fu_890_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_2C)) else "0";
    p_Repl2_45_fu_896_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_2D)) else "0";
    p_Repl2_46_fu_902_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_2E)) else "0";
    p_Repl2_47_fu_908_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_2F)) else "0";
    p_Repl2_48_fu_914_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_30)) else "0";
    p_Repl2_49_fu_920_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_31)) else "0";
    p_Repl2_4_fu_620_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_4)) else "0";
    p_Repl2_50_fu_926_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_32)) else "0";
    p_Repl2_51_fu_932_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_33)) else "0";
    p_Repl2_52_fu_938_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_34)) else "0";
    p_Repl2_53_fu_944_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_35)) else "0";
    p_Repl2_54_fu_950_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_36)) else "0";
    p_Repl2_55_fu_956_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_37)) else "0";
    p_Repl2_56_fu_962_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_38)) else "0";
    p_Repl2_57_fu_968_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_39)) else "0";
    p_Repl2_58_fu_974_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_3A)) else "0";
    p_Repl2_59_fu_980_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_3B)) else "0";
    p_Repl2_5_fu_626_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_5)) else "0";
    p_Repl2_60_fu_986_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_3C)) else "0";
    p_Repl2_61_fu_992_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_3D)) else "0";
    p_Repl2_62_fu_998_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_3E)) else "0";
    p_Repl2_63_fu_1014_p2 <= "0" when (tmp_5_fu_1004_p4 = ap_const_lv10_0) else "1";
    p_Repl2_6_fu_632_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_6)) else "0";
    p_Repl2_7_fu_648_p2 <= "0" when (tmp_2_fu_638_p4 = ap_const_lv13_0) else "1";
    p_Repl2_8_fu_654_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_8)) else "0";
    p_Repl2_9_fu_660_p2 <= "1" when (unsigned(length_remain_V) > unsigned(ap_const_lv16_9)) else "0";
    p_Repl2_s_fu_576_p2 <= "0" when (length_remain_V = ap_const_lv16_0) else "1";
    p_Result_1_fu_1020_p65 <= (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((p_Repl2_s_fu_576_p2 & p_Repl2_1_fu_592_p2) & p_Repl2_2_fu_598_p2) & p_Repl2_3_fu_614_p2) & p_Repl2_4_fu_620_p2) & p_Repl2_5_fu_626_p2) & p_Repl2_6_fu_632_p2) & p_Repl2_7_fu_648_p2) & p_Repl2_8_fu_654_p2) & p_Repl2_9_fu_660_p2) & p_Repl2_10_fu_666_p2) & p_Repl2_11_fu_672_p2) & p_Repl2_12_fu_678_p2) & p_Repl2_13_fu_684_p2) & p_Repl2_14_fu_690_p2) & p_Repl2_15_fu_706_p2) & p_Repl2_16_fu_712_p2) & p_Repl2_17_fu_718_p2) & p_Repl2_18_fu_724_p2) & p_Repl2_19_fu_730_p2) & p_Repl2_20_fu_736_p2) & p_Repl2_21_fu_742_p2) & p_Repl2_22_fu_748_p2) & p_Repl2_23_fu_754_p2) & p_Repl2_24_fu_760_p2) & p_Repl2_25_fu_766_p2) & p_Repl2_26_fu_772_p2) & p_Repl2_27_fu_778_p2) & p_Repl2_28_fu_784_p2) & p_Repl2_29_fu_790_p2) & p_Repl2_30_fu_796_p2) & p_Repl2_31_fu_812_p2) & p_Repl2_32_fu_818_p2) & p_Repl2_33_fu_824_p2) & p_Repl2_34_fu_830_p2) & p_Repl2_35_fu_836_p2) & p_Repl2_36_fu_842_p2) & p_Repl2_37_fu_848_p2) & p_Repl2_38_fu_854_p2) & p_Repl2_39_fu_860_p2) & p_Repl2_40_fu_866_p2) & p_Repl2_41_fu_872_p2) & p_Repl2_42_fu_878_p2) & p_Repl2_43_fu_884_p2) & p_Repl2_44_fu_890_p2) & p_Repl2_45_fu_896_p2) & p_Repl2_46_fu_902_p2) & p_Repl2_47_fu_908_p2) & p_Repl2_48_fu_914_p2) & p_Repl2_49_fu_920_p2) & p_Repl2_50_fu_926_p2) & p_Repl2_51_fu_932_p2) & p_Repl2_52_fu_938_p2) & p_Repl2_53_fu_944_p2) & p_Repl2_54_fu_950_p2) & p_Repl2_55_fu_956_p2) & p_Repl2_56_fu_962_p2) & p_Repl2_57_fu_968_p2) & p_Repl2_58_fu_974_p2) & p_Repl2_59_fu_980_p2) & p_Repl2_60_fu_986_p2) & p_Repl2_61_fu_992_p2) & p_Repl2_62_fu_998_p2) & p_Repl2_63_fu_1014_p2);
    p_Result_s_fu_560_p4 <= ((select_ln81_fu_544_p3 & t_V_1_fu_552_p3) & ap_const_lv448_lc_1);
    ret_V_1_fu_457_p2 <= (start_V and lhs_V_fu_451_p2);
    ret_V_2_fu_476_p2 <= (status_V and lhs_V_1_fu_371_p2);
    ret_V_3_fu_502_p2 <= std_logic_vector(unsigned(zext_ln215_fu_498_p1) + unsigned(ap_const_lv33_1));
    ret_V_4_fu_528_p2 <= (status_V and ready_V);
    ret_V_fu_377_p2 <= (ready_V and lhs_V_1_fu_371_p2);
    rhs_V_load_fu_472_p1 <= status_V;
    select_ln102_fu_1288_p3 <= 
        trunc_ln102_fu_1284_p1 when (icmp_ln891_fu_1278_p2(0) = '1') else 
        ap_const_lv14_2556;
    select_ln81_fu_544_p3 <= 
        packet_id_V when (icmp_ln879_fu_538_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln899_fu_1296_p3 <= 
        ap_const_lv14_8 when (icmp_ln899_1_fu_1272_p2(0) = '1') else 
        select_ln102_fu_1288_p3;
    t_V_1_fu_552_p3 <= 
        cnt_V when (icmp_ln879_fu_538_p2(0) = '1') else 
        ap_const_lv32_0;
    time_elapse_V <= std_logic_vector(unsigned(time_elapse_reg_V) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    tmp_1_fu_604_p4 <= length_remain_V(15 downto 2);
    tmp_2_fu_638_p4 <= length_remain_V(15 downto 3);
    tmp_3_fu_696_p4 <= length_remain_V(15 downto 4);
    tmp_4_fu_802_p4 <= length_remain_V(15 downto 5);
    tmp_5_fu_1004_p4 <= length_remain_V(15 downto 6);
    tmp_fu_582_p4 <= length_remain_V(15 downto 1);
    trunc_ln102_fu_1284_p1 <= payload_len_V(14 - 1 downto 0);
    zext_ln215_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(packet_num_reg_V),33));
    zext_ln321_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(payload_len_adjusted),16));
    zext_ln76_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(packet_id_V),33));
end behav;
