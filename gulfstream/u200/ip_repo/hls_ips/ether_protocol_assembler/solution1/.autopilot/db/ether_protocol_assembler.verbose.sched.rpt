

================================================================
== Vivado HLS Report for 'ether_protocol_assembler'
================================================================
* Date:           Thu Jul 25 00:24:12 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        ether_protocol_assembler
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   3.10|     1.317|        0.39|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.31>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i512 %eth_arp_in_data_V), !map !56"   --->   Operation 2 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %eth_arp_in_keep_V), !map !62"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %eth_arp_in_valid_V), !map !66"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %eth_arp_in_last_V), !map !70"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %arp_ready_V), !map !74"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i512 %eth_ip_in_data_V), !map !78"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %eth_ip_in_keep_V), !map !82"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %eth_ip_in_valid_V), !map !86"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %eth_ip_in_last_V), !map !90"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ip_ready_V), !map !94"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i512* %eth_out_data_V), !map !98"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %eth_out_keep_V), !map !102"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %eth_out_valid_V), !map !106"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %eth_out_last_V), !map !110"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %eth_out_ready_V), !map !114"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([25 x i8]* @ether_protocol_assem) nounwind"   --->   Operation 17 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%eth_out_ready_V_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %eth_out_ready_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 18 'read' 'eth_out_ready_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%eth_ip_in_last_V_rea = call i1 @_ssdm_op_Read.ap_none.i1(i1 %eth_ip_in_last_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 19 'read' 'eth_ip_in_last_V_rea' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%eth_ip_in_valid_V_re = call i1 @_ssdm_op_Read.ap_none.i1(i1 %eth_ip_in_valid_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 20 'read' 'eth_ip_in_valid_V_re' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%eth_ip_in_keep_V_rea = call i64 @_ssdm_op_Read.ap_none.i64(i64 %eth_ip_in_keep_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 21 'read' 'eth_ip_in_keep_V_rea' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%eth_ip_in_data_V_rea = call i512 @_ssdm_op_Read.ap_none.i512(i512 %eth_ip_in_data_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 22 'read' 'eth_ip_in_data_V_rea' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%eth_arp_in_last_V_re = call i1 @_ssdm_op_Read.ap_none.i1(i1 %eth_arp_in_last_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 23 'read' 'eth_arp_in_last_V_re' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%eth_arp_in_valid_V_r = call i1 @_ssdm_op_Read.ap_none.i1(i1 %eth_arp_in_valid_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 24 'read' 'eth_arp_in_valid_V_r' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%eth_arp_in_keep_V_re = call i64 @_ssdm_op_Read.ap_none.i64(i64 %eth_arp_in_keep_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 25 'read' 'eth_arp_in_keep_V_re' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%eth_arp_in_data_V_re = call i512 @_ssdm_op_Read.ap_none.i512(i512 %eth_arp_in_data_V)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:47]   --->   Operation 26 'read' 'eth_arp_in_data_V_re' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:53]   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i512 %eth_arp_in_data_V, i64 %eth_arp_in_keep_V, i1 %eth_arp_in_valid_V, i1 %eth_arp_in_last_V, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:54]   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i512 %eth_ip_in_data_V, i64 %eth_ip_in_keep_V, i1 %eth_ip_in_valid_V, i1 %eth_ip_in_last_V, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:55]   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i512* %eth_out_data_V, i64* %eth_out_keep_V, i1* %eth_out_valid_V, i1* %eth_out_last_V, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:56]   --->   Operation 30 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %arp_ready_V, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:57]   --->   Operation 31 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %ip_ready_V, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:58]   --->   Operation 32 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %eth_out_ready_V, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:59]   --->   Operation 33 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%eth_out_reg_data_V_l = load i512* @eth_out_reg_data_V, align 16" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 34 'load' 'eth_out_reg_data_V_l' <Predicate = (eth_out_ready_V_read)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.57ns)   --->   "%select_ln66 = select i1 %eth_out_ready_V_read, i512 %eth_out_reg_data_V_l, i512 0" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 35 'select' 'select_ln66' <Predicate = true> <Delay = 0.57> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i512P(i512* %eth_out_data_V, i512 %select_ln66)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 36 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%eth_out_reg_keep_V_l = load i64* @eth_out_reg_keep_V, align 8" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 37 'load' 'eth_out_reg_keep_V_l' <Predicate = (eth_out_ready_V_read)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.41ns)   --->   "%select_ln66_1 = select i1 %eth_out_ready_V_read, i64 %eth_out_reg_keep_V_l, i64 0" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 38 'select' 'select_ln66_1' <Predicate = true> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i64P(i64* %eth_out_keep_V, i64 %select_ln66_1)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 39 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%lhs_V = load i1* @eth_out_reg_valid_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 40 'load' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.12ns)   --->   "%and_ln66 = and i1 %lhs_V, %eth_out_ready_V_read" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 41 'and' 'and_ln66' <Predicate = true> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i1P(i1* %eth_out_valid_V, i1 %and_ln66)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 42 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%rhs_V = load i1* @eth_out_reg_last_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 43 'load' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.12ns)   --->   "%and_ln66_1 = and i1 %rhs_V, %eth_out_ready_V_read" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 44 'and' 'and_ln66_1' <Predicate = true> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i1P(i1* %eth_out_last_V, i1 %and_ln66_1)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66]   --->   Operation 45 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%ret_V_5 = and i1 %lhs_V, %rhs_V" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:68]   --->   Operation 46 'and' 'ret_V_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%rhs_V_1 = load i1* @arbiter_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:68]   --->   Operation 47 'load' 'rhs_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.12ns) (out node of the LUT)   --->   "%ret_V = or i1 %rhs_V_1, %ret_V_5" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:68]   --->   Operation 48 'or' 'ret_V' <Predicate = true> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%output_sw_V = load i1* @output_sw_reg_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69]   --->   Operation 49 'load' 'output_sw_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.61ns)   --->   "br i1 %ret_V, label %0, label %3" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:68]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.61>
ST_1 : Operation 51 [1/1] (0.12ns)   --->   "%and_ln69 = and i1 %output_sw_V, %eth_arp_in_valid_V_r" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69]   --->   Operation 51 'and' 'and_ln69' <Predicate = (ret_V)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "br i1 %and_ln69, label %1, label %._crit_edge256" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69]   --->   Operation 52 'br' <Predicate = (ret_V)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node or_ln73)   --->   "%xor_ln73 = xor i1 %eth_ip_in_valid_V_re, true" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:73]   --->   Operation 53 'xor' 'xor_ln73' <Predicate = (ret_V & !and_ln69)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln73 = or i1 %output_sw_V, %xor_ln73" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:73]   --->   Operation 54 'or' 'or_ln73' <Predicate = (ret_V & !and_ln69)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "br i1 %or_ln73, label %._crit_edge258, label %2" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:73]   --->   Operation 55 'br' <Predicate = (ret_V & !and_ln69)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.60ns)   --->   "store i1 false, i1* @arbiter_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:75]   --->   Operation 56 'store' <Predicate = (ret_V & !and_ln69 & !or_ln73)> <Delay = 0.60>
ST_1 : Operation 57 [1/1] (0.60ns)   --->   "store i1 true, i1* @output_sw_reg_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:76]   --->   Operation 57 'store' <Predicate = (ret_V & !and_ln69 & !or_ln73)> <Delay = 0.60>
ST_1 : Operation 58 [1/1] (0.61ns)   --->   "br label %3" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:77]   --->   Operation 58 'br' <Predicate = (ret_V & !and_ln69 & !or_ln73)> <Delay = 0.61>
ST_1 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node xor_ln80)   --->   "%ret_V_2 = or i1 %eth_arp_in_valid_V_r, %eth_ip_in_valid_V_re" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:77]   --->   Operation 59 'or' 'ret_V_2' <Predicate = (ret_V & !and_ln69 & or_ln73)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.12ns) (out node of the LUT)   --->   "%xor_ln80 = xor i1 %ret_V_2, true" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:80]   --->   Operation 60 'xor' 'xor_ln80' <Predicate = (ret_V & !and_ln69 & or_ln73)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.60ns)   --->   "store i1 %xor_ln80, i1* @arbiter_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:79]   --->   Operation 61 'store' <Predicate = (ret_V & !and_ln69 & or_ln73)> <Delay = 0.60>
ST_1 : Operation 62 [1/1] (0.61ns)   --->   "br label %3"   --->   Operation 62 'br' <Predicate = (ret_V & !and_ln69 & or_ln73)> <Delay = 0.61>
ST_1 : Operation 63 [1/1] (0.60ns)   --->   "store i1 false, i1* @arbiter_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:71]   --->   Operation 63 'store' <Predicate = (ret_V & and_ln69)> <Delay = 0.60>
ST_1 : Operation 64 [1/1] (0.60ns)   --->   "store i1 false, i1* @output_sw_reg_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:72]   --->   Operation 64 'store' <Predicate = (ret_V & and_ln69)> <Delay = 0.60>
ST_1 : Operation 65 [1/1] (0.61ns)   --->   "br label %3" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:73]   --->   Operation 65 'br' <Predicate = (ret_V & and_ln69)> <Delay = 0.61>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%lhs_V_3 = phi i1 [ false, %1 ], [ true, %2 ], [ %output_sw_V, %._crit_edge258 ], [ %output_sw_V, %codeRepl ]"   --->   Operation 66 'phi' 'lhs_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "br i1 %eth_out_ready_V_read, label %4, label %._crit_edge260" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:88]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.57ns)   --->   "%eth_ip_in_data_V_eth = select i1 %lhs_V_3, i512 %eth_ip_in_data_V_rea, i512 %eth_arp_in_data_V_re" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69]   --->   Operation 68 'select' 'eth_ip_in_data_V_eth' <Predicate = (eth_out_ready_V_read)> <Delay = 0.57> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.41ns)   --->   "%eth_ip_in_keep_V_eth = select i1 %lhs_V_3, i64 %eth_ip_in_keep_V_rea, i64 %eth_arp_in_keep_V_re" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69]   --->   Operation 69 'select' 'eth_ip_in_keep_V_eth' <Predicate = (eth_out_ready_V_read)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.27ns)   --->   "%eth_ip_in_valid_V_et = select i1 %lhs_V_3, i1 %eth_ip_in_valid_V_re, i1 %eth_arp_in_valid_V_r" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69]   --->   Operation 70 'select' 'eth_ip_in_valid_V_et' <Predicate = (eth_out_ready_V_read)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.27ns)   --->   "%eth_ip_in_last_V_eth = select i1 %lhs_V_3, i1 %eth_ip_in_last_V_rea, i1 %eth_arp_in_last_V_re" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69]   --->   Operation 71 'select' 'eth_ip_in_last_V_eth' <Predicate = (eth_out_ready_V_read)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "store i512 %eth_ip_in_data_V_eth, i512* @eth_out_reg_data_V, align 64" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:92]   --->   Operation 72 'store' <Predicate = (eth_out_ready_V_read)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "store i64 %eth_ip_in_keep_V_eth, i64* @eth_out_reg_keep_V, align 64" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:90]   --->   Operation 73 'store' <Predicate = (eth_out_ready_V_read)> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "store i1 %eth_ip_in_valid_V_et, i1* @eth_out_reg_valid_V, align 8" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:92]   --->   Operation 74 'store' <Predicate = (eth_out_ready_V_read)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "store i1 %eth_ip_in_last_V_eth, i1* @eth_out_reg_last_V, align 1" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:92]   --->   Operation 75 'store' <Predicate = (eth_out_ready_V_read)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "br label %._crit_edge260" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:94]   --->   Operation 76 'br' <Predicate = (eth_out_ready_V_read)> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node ret_V_3)   --->   "%lhs_V_2 = xor i1 %lhs_V_3, true" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:95]   --->   Operation 77 'xor' 'lhs_V_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.12ns) (out node of the LUT)   --->   "%ret_V_3 = and i1 %eth_out_ready_V_read, %lhs_V_2" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:95]   --->   Operation 78 'and' 'ret_V_3' <Predicate = true> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i1P(i1* %arp_ready_V, i1 %ret_V_3)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:95]   --->   Operation 79 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.12ns)   --->   "%ret_V_4 = and i1 %lhs_V_3, %eth_out_ready_V_read" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:96]   --->   Operation 80 'and' 'ret_V_4' <Predicate = true> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i1P(i1* %ip_ready_V, i1 %ret_V_4)" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:96]   --->   Operation 81 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "ret void" [/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:97]   --->   Operation 82 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.1ns, clock uncertainty: 0.388ns.

 <State 1>: 1.32ns
The critical path consists of the following:
	'load' operation ('lhs.V', /home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:35->/home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:66) on static variable 'eth_out_reg_valid_V' [60]  (0 ns)
	'and' operation ('ret.V', /home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:68) [66]  (0 ns)
	'or' operation ('ret.V', /home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:68) [68]  (0.122 ns)
	multiplexor before 'phi' operation ('output_sw.V') with incoming values : ('output_sw.V', /home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69) [92]  (0.617 ns)
	'phi' operation ('output_sw.V') with incoming values : ('output_sw.V', /home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69) [92]  (0 ns)
	'select' operation ('eth_ip_in_data_V_eth', /home/kevinliu/Documents/GULF-Stream/src/ether_protocol_assembler/ether_protocol_assembler.cpp:69) [95]  (0.578 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
