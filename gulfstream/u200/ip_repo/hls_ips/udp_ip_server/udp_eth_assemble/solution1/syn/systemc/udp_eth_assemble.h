// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _udp_eth_assemble_HH_
#define _udp_eth_assemble_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct udp_eth_assemble : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<48> > myMac_V;
    sc_in< sc_lv<32> > myIP_V;
    sc_in< sc_lv<161> > action;
    sc_in< sc_lv<1> > action_valid_V;
    sc_in< sc_lv<1> > action_empty_V;
    sc_out< sc_lv<1> > action_re_V;
    sc_in< sc_lv<512> > payload_in_data_V;
    sc_in< sc_lv<64> > payload_in_keep_V;
    sc_in< sc_lv<1> > payload_in_valid_V;
    sc_in< sc_lv<1> > payload_in_last_V;
    sc_out< sc_lv<1> > payload_ready_V;
    sc_out< sc_lv<512> > packet_out_data_V;
    sc_out< sc_lv<64> > packet_out_keep_V;
    sc_out< sc_lv<1> > packet_out_valid_V;
    sc_out< sc_lv<1> > packet_out_last_V;
    sc_in< sc_lv<1> > packet_out_ready_V;


    // Module declarations
    udp_eth_assemble(sc_module_name name);
    SC_HAS_PROCESS(udp_eth_assemble);

    ~udp_eth_assemble();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<512> > packet_out_reg_data_s;
    sc_signal< sc_lv<64> > packet_out_reg_keep_s;
    sc_signal< sc_lv<1> > packet_out_reg_valid;
    sc_signal< sc_lv<1> > packet_out_reg_last_s;
    sc_signal< sc_lv<1> > payloadin_pause_V;
    sc_signal< sc_lv<1> > IN_PACKET_V;
    sc_signal< sc_lv<48> > myMac_reg_V;
    sc_signal< sc_lv<32> > myIP_reg_V;
    sc_signal< sc_lv<512> > payload_in_reg_data_s;
    sc_signal< sc_lv<1> > payload_in_reg_last_s;
    sc_signal< sc_lv<64> > payload_in_reg_keep_s;
    sc_signal< sc_lv<1> > payload_in_reg_valid;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > packet_out_ready_V_r_read_fu_170_p2;
    sc_signal< sc_lv<1> > ret_V_5_fu_402_p2;
    sc_signal< sc_lv<1> > IN_PACKET_V_load_load_fu_392_p1;
    sc_signal< sc_lv<512> > p_Result_4_fu_464_p3;
    sc_signal< sc_lv<512> > p_Result_s_8_fu_650_p14;
    sc_signal< sc_lv<64> > p_Result_5_fu_494_p3;
    sc_signal< sc_lv<64> > p_Result_2_fu_692_p3;
    sc_signal< sc_lv<1> > ret_V_8_fu_508_p2;
    sc_signal< sc_lv<1> > ret_V_15_fu_332_p2;
    sc_signal< sc_lv<1> > rhs_V_1_load_fu_344_p1;
    sc_signal< sc_lv<1> > ret_V_11_fu_762_p2;
    sc_signal< sc_lv<1> > ret_V_9_fu_530_p2;
    sc_signal< sc_lv<1> > action_valid_V_read_read_fu_206_p2;
    sc_signal< sc_lv<1> > ret_V_7_fu_450_p2;
    sc_signal< sc_lv<1> > tmp_fu_318_p3;
    sc_signal< sc_lv<1> > xor_ln1355_fu_326_p2;
    sc_signal< sc_lv<1> > ret_V_12_fu_338_p2;
    sc_signal< sc_lv<1> > ret_V_13_fu_348_p2;
    sc_signal< sc_lv<1> > rhs_V_fu_312_p2;
    sc_signal< sc_lv<1> > and_ln1355_2_fu_354_p2;
    sc_signal< sc_lv<1> > rhs_V_3_fu_367_p2;
    sc_signal< sc_lv<1> > and_ln1355_4_fu_373_p2;
    sc_signal< sc_lv<1> > ret_V_14_fu_386_p2;
    sc_signal< sc_lv<1> > rhs_V_4_fu_396_p2;
    sc_signal< sc_lv<1> > lhs_V_fu_444_p2;
    sc_signal< sc_lv<176> > grp_fu_272_p4;
    sc_signal< sc_lv<336> > trunc_ln647_fu_436_p1;
    sc_signal< sc_lv<176> > select_ln1355_fu_456_p3;
    sc_signal< sc_lv<22> > grp_fu_282_p4;
    sc_signal< sc_lv<42> > trunc_ln647_1_fu_482_p1;
    sc_signal< sc_lv<22> > select_ln1355_1_fu_486_p3;
    sc_signal< sc_lv<16> > action_payload_lengt_fu_556_p4;
    sc_signal< sc_lv<1> > tmp_1_fu_626_p3;
    sc_signal< sc_lv<16> > zext_ln215_fu_634_p1;
    sc_signal< sc_lv<16> > p_Result_s_fu_616_p4;
    sc_signal< sc_lv<16> > add_ln215_2_fu_638_p2;
    sc_signal< sc_lv<48> > action_dst_mac_V_loa_fu_542_p4;
    sc_signal< sc_lv<16> > add_ln215_fu_566_p2;
    sc_signal< sc_lv<16> > action_ip_cksum_V_lo_fu_572_p4;
    sc_signal< sc_lv<32> > trunc_ln215_fu_586_p1;
    sc_signal< sc_lv<16> > action_src_port_V_lo_fu_590_p4;
    sc_signal< sc_lv<16> > action_dst_port_V_lo_fu_600_p4;
    sc_signal< sc_lv<16> > add_ln215_1_fu_610_p2;
    sc_signal< sc_lv<16> > xor_ln215_fu_644_p2;
    sc_signal< sc_lv<22> > or_ln1356_fu_686_p2;
    sc_signal< sc_lv<1> > and_ln1355_fu_756_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_condition_354;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<48> ap_const_lv48_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_150;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<176> ap_const_lv176_lc_1;
    static const sc_lv<22> ap_const_lv22_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<32> ap_const_lv32_91;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<16> ap_const_lv16_1C;
    static const sc_lv<32> ap_const_lv32_81;
    static const sc_lv<32> ap_const_lv32_90;
    static const sc_lv<32> ap_const_lv32_50;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<16> ap_const_lv16_8;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<32> ap_const_lv32_8004500;
    static const sc_lv<48> ap_const_lv48_40004011;
    static const sc_lv<22> ap_const_lv22_3FFFF0;
    static const sc_lv<42> ap_const_lv42_3FFFFFFFFFF;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_IN_PACKET_V_load_load_fu_392_p1();
    void thread_action_dst_mac_V_loa_fu_542_p4();
    void thread_action_dst_port_V_lo_fu_600_p4();
    void thread_action_ip_cksum_V_lo_fu_572_p4();
    void thread_action_payload_lengt_fu_556_p4();
    void thread_action_re_V();
    void thread_action_src_port_V_lo_fu_590_p4();
    void thread_action_valid_V_read_read_fu_206_p2();
    void thread_add_ln215_1_fu_610_p2();
    void thread_add_ln215_2_fu_638_p2();
    void thread_add_ln215_fu_566_p2();
    void thread_and_ln1355_2_fu_354_p2();
    void thread_and_ln1355_4_fu_373_p2();
    void thread_and_ln1355_fu_756_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_condition_354();
    void thread_grp_fu_272_p4();
    void thread_grp_fu_282_p4();
    void thread_lhs_V_fu_444_p2();
    void thread_or_ln1356_fu_686_p2();
    void thread_p_Result_2_fu_692_p3();
    void thread_p_Result_4_fu_464_p3();
    void thread_p_Result_5_fu_494_p3();
    void thread_p_Result_s_8_fu_650_p14();
    void thread_p_Result_s_fu_616_p4();
    void thread_packet_out_data_V();
    void thread_packet_out_keep_V();
    void thread_packet_out_last_V();
    void thread_packet_out_ready_V_r_read_fu_170_p2();
    void thread_packet_out_valid_V();
    void thread_payload_ready_V();
    void thread_ret_V_11_fu_762_p2();
    void thread_ret_V_12_fu_338_p2();
    void thread_ret_V_13_fu_348_p2();
    void thread_ret_V_14_fu_386_p2();
    void thread_ret_V_15_fu_332_p2();
    void thread_ret_V_5_fu_402_p2();
    void thread_ret_V_7_fu_450_p2();
    void thread_ret_V_8_fu_508_p2();
    void thread_ret_V_9_fu_530_p2();
    void thread_rhs_V_1_load_fu_344_p1();
    void thread_rhs_V_3_fu_367_p2();
    void thread_rhs_V_4_fu_396_p2();
    void thread_rhs_V_fu_312_p2();
    void thread_select_ln1355_1_fu_486_p3();
    void thread_select_ln1355_fu_456_p3();
    void thread_tmp_1_fu_626_p3();
    void thread_tmp_fu_318_p3();
    void thread_trunc_ln215_fu_586_p1();
    void thread_trunc_ln647_1_fu_482_p1();
    void thread_trunc_ln647_fu_436_p1();
    void thread_xor_ln1355_fu_326_p2();
    void thread_xor_ln215_fu_644_p2();
    void thread_zext_ln215_fu_634_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
