-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lbus_fifo_read is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    lbus_fifo : IN STD_LOGIC_VECTOR (543 downto 0);
    lbus_fifo_pkt_end : IN STD_LOGIC_VECTOR (407 downto 0);
    lbus_fifo_empty_V : IN STD_LOGIC_VECTOR (0 downto 0);
    lbus_fifo_pkt_end_empty_V : IN STD_LOGIC_VECTOR (0 downto 0);
    lbus_fifo_valid_V : IN STD_LOGIC_VECTOR (0 downto 0);
    lbus_fifo_pkt_end_valid_V : IN STD_LOGIC_VECTOR (0 downto 0);
    lbus_fifo_re_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    lbus_fifo_pkt_end_re_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    error_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_data_V : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axis_keep_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_last_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_valid_V : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of lbus_fifo_read is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lbus_fifo_read,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=3.103000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.701500,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1521,HLS_SYN_LUT=986,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_107 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000111";
    constant ap_const_lv32_108 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001000";
    constant ap_const_lv32_10A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001010";
    constant ap_const_lv32_10C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001100";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_192 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010010";
    constant ap_const_lv32_194 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010100";
    constant ap_const_lv32_197 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010111";
    constant ap_const_lv32_198 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011000";
    constant ap_const_lv32_217 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000010111";
    constant ap_const_lv32_218 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011000";
    constant ap_const_lv32_21A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011010";
    constant ap_const_lv32_21C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011100";
    constant ap_const_lv32_21F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011111";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal m_axis_databuf_V : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal m_axis_keepbuf_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal keep1mask_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_axis_keepbuf_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal keep2mask_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_axis_keepbuf_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal keep3mask_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_axis_keepbuf_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal m_axis_lastbuf_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_axis_validbuf_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outbuf_data_V_3 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal outbuf_data_V_2 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal outbuf_data_V_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal outbuf_data_V_0 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal outbuf_mty_V_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal outbuf_ena_V_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outbuf_mty_V_1 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal outbuf_ena_V_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outbuf_mty_V_2 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal outbuf_ena_V_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outbuf_mty_V_3 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal outbuf_ena_V_3 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outbuf_eop_V_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outbuf_eop_V_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outbuf_eop_V_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outbuf_eop_V_3 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal output_valid_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal out_pktendbuf_ena_V_s : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal out_pktendbuf_data_V : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal out_pktendbuf_eop_V_s : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal out_pktendbuf_mty_V_s : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal out_pktendbuf_data_V_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal out_pktendbuf_ena_V_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal out_pktendbuf_eop_V_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal out_pktendbuf_mty_V_1 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal out_pktendbuf_data_V_2 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal out_pktendbuf_ena_V_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal out_pktendbuf_eop_V_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal out_pktendbuf_mty_V_2 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal call_ret_mty2keep_fu_318_ap_ready : STD_LOGIC;
    signal call_ret_mty2keep_fu_318_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_mty2keep_fu_324_ap_ready : STD_LOGIC;
    signal call_ret1_mty2keep_fu_324_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_mty2keep_fu_330_ap_ready : STD_LOGIC;
    signal call_ret2_mty2keep_fu_330_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_mty2keep_fu_336_ap_ready : STD_LOGIC;
    signal call_ret3_mty2keep_fu_336_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_empty_phi_fu_294_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out_pktendbuf_ena_V_1_load_fu_631_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln133_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_storemerge482_phi_fu_307_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_463_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal xor_ln113_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln114_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln115_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_20_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_fu_641_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln321_1_fu_875_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal xor_ln146_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_fu_362_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_14_fu_384_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_15_fu_406_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_21_fu_370_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_22_fu_392_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_23_fu_414_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_24_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_25_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln146_fu_1268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln146_1_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);

    component mty2keep IS
    port (
        ap_ready : OUT STD_LOGIC;
        mty_V : IN STD_LOGIC_VECTOR (3 downto 0);
        ena_V : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    call_ret_mty2keep_fu_318 : component mty2keep
    port map (
        ap_ready => call_ret_mty2keep_fu_318_ap_ready,
        mty_V => outbuf_mty_V_0,
        ena_V => outbuf_ena_V_0,
        ap_return => call_ret_mty2keep_fu_318_ap_return);

    call_ret1_mty2keep_fu_324 : component mty2keep
    port map (
        ap_ready => call_ret1_mty2keep_fu_324_ap_ready,
        mty_V => outbuf_mty_V_1,
        ena_V => outbuf_ena_V_1,
        ap_return => call_ret1_mty2keep_fu_324_ap_return);

    call_ret2_mty2keep_fu_330 : component mty2keep
    port map (
        ap_ready => call_ret2_mty2keep_fu_330_ap_ready,
        mty_V => outbuf_mty_V_2,
        ena_V => outbuf_ena_V_2,
        ap_return => call_ret2_mty2keep_fu_330_ap_return);

    call_ret3_mty2keep_fu_336 : component mty2keep
    port map (
        ap_ready => call_ret3_mty2keep_fu_336_ap_ready,
        mty_V => outbuf_mty_V_3,
        ena_V => outbuf_ena_V_3,
        ap_return => call_ret3_mty2keep_fu_336_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    keep1mask_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                keep1mask_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    keep1mask_V <= xor_ln113_fu_549_p2;
                end if; 
            end if;
        end if;
    end process;


    keep2mask_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                keep2mask_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    keep2mask_V <= xor_ln114_fu_571_p2;
                end if; 
            end if;
        end if;
    end process;


    keep3mask_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                keep3mask_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    keep3mask_V <= xor_ln115_fu_593_p2;
                end if; 
            end if;
        end if;
    end process;


    m_axis_databuf_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_databuf_V <= ap_const_lv512_lc_1;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    m_axis_databuf_V <= p_Result_1_fu_463_p5;
                end if; 
            end if;
        end if;
    end process;


    m_axis_keepbuf_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_keepbuf_V_0 <= ap_const_lv16_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    m_axis_keepbuf_V_0 <= call_ret_mty2keep_fu_318_ap_return;
                end if; 
            end if;
        end if;
    end process;


    m_axis_keepbuf_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_keepbuf_V_1 <= ap_const_lv16_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    m_axis_keepbuf_V_1 <= call_ret1_mty2keep_fu_324_ap_return;
                end if; 
            end if;
        end if;
    end process;


    m_axis_keepbuf_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_keepbuf_V_2 <= ap_const_lv16_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    m_axis_keepbuf_V_2 <= call_ret2_mty2keep_fu_330_ap_return;
                end if; 
            end if;
        end if;
    end process;


    m_axis_keepbuf_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_keepbuf_V_3 <= ap_const_lv16_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    m_axis_keepbuf_V_3 <= call_ret3_mty2keep_fu_336_ap_return;
                end if; 
            end if;
        end if;
    end process;


    m_axis_lastbuf_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_lastbuf_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    m_axis_lastbuf_V <= ret_V_20_fu_609_p2;
                end if; 
            end if;
        end if;
    end process;


    m_axis_validbuf_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_validbuf_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    m_axis_validbuf_V <= output_valid_V;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_data_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_data_V <= ap_const_lv128_lc_1;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_data_V <= ap_const_lv128_lc_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_data_V <= trunc_ln321_1_fu_875_p1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_data_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_data_V_1 <= ap_const_lv128_lc_1;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_data_V_1 <= ap_const_lv128_lc_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_data_V_1 <= lbus_fifo_pkt_end(263 downto 136);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_data_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_data_V_2 <= ap_const_lv128_lc_1;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_data_V_2 <= ap_const_lv128_lc_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_data_V_2 <= lbus_fifo_pkt_end(399 downto 272);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_ena_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_ena_V_1 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_ena_V_1 <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_ena_V_1 <= lbus_fifo_pkt_end(264 downto 264);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_ena_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_ena_V_2 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_ena_V_2 <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_ena_V_2 <= lbus_fifo_pkt_end(400 downto 400);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_ena_V_s_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_ena_V_s <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_ena_V_s <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_ena_V_s <= lbus_fifo_pkt_end(128 downto 128);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_eop_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_eop_V_1 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_eop_V_1 <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_eop_V_1 <= lbus_fifo_pkt_end(266 downto 266);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_eop_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_eop_V_2 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_eop_V_2 <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_eop_V_2 <= lbus_fifo_pkt_end(402 downto 402);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_eop_V_s_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_eop_V_s <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_eop_V_s <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_eop_V_s <= lbus_fifo_pkt_end(130 downto 130);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_mty_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_mty_V_1 <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_mty_V_1 <= ap_const_lv4_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_mty_V_1 <= lbus_fifo_pkt_end(271 downto 268);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_mty_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_mty_V_2 <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_mty_V_2 <= ap_const_lv4_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_mty_V_2 <= lbus_fifo_pkt_end(407 downto 404);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    out_pktendbuf_mty_V_s_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_pktendbuf_mty_V_s <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        out_pktendbuf_mty_V_s <= ap_const_lv4_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        out_pktendbuf_mty_V_s <= lbus_fifo_pkt_end(135 downto 132);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_data_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_data_V_0 <= ap_const_lv128_lc_1;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_data_V_0 <= out_pktendbuf_data_V;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_data_V_0 <= trunc_ln321_fu_641_p1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_data_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_data_V_1 <= ap_const_lv128_lc_1;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_data_V_1 <= out_pktendbuf_data_V_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_data_V_1 <= lbus_fifo(263 downto 136);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_data_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_data_V_2 <= ap_const_lv128_lc_1;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_data_V_2 <= out_pktendbuf_data_V_2;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_data_V_2 <= lbus_fifo(399 downto 272);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_data_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_data_V_3 <= ap_const_lv128_lc_1;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_data_V_3 <= ap_const_lv128_lc_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_data_V_3 <= lbus_fifo(535 downto 408);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_ena_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_ena_V_0 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_ena_V_0 <= ap_const_lv1_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_ena_V_0 <= lbus_fifo(128 downto 128);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_ena_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_ena_V_1 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_ena_V_1 <= out_pktendbuf_ena_V_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_ena_V_1 <= lbus_fifo(264 downto 264);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_ena_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_ena_V_2 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_ena_V_2 <= out_pktendbuf_ena_V_2;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_ena_V_2 <= lbus_fifo(400 downto 400);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_ena_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_ena_V_3 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_ena_V_3 <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_ena_V_3 <= lbus_fifo(536 downto 536);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_eop_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_eop_V_0 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_eop_V_0 <= out_pktendbuf_eop_V_s;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_eop_V_0 <= lbus_fifo(130 downto 130);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_eop_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_eop_V_1 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_eop_V_1 <= out_pktendbuf_eop_V_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_eop_V_1 <= lbus_fifo(266 downto 266);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_eop_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_eop_V_2 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_eop_V_2 <= out_pktendbuf_eop_V_2;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_eop_V_2 <= lbus_fifo(402 downto 402);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_eop_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_eop_V_3 <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_eop_V_3 <= ap_const_lv1_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_eop_V_3 <= lbus_fifo(538 downto 538);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_mty_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_mty_V_0 <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_mty_V_0 <= out_pktendbuf_mty_V_s;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_mty_V_0 <= lbus_fifo(135 downto 132);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_mty_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_mty_V_1 <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_mty_V_1 <= out_pktendbuf_mty_V_1;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_mty_V_1 <= lbus_fifo(271 downto 268);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_mty_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_mty_V_2 <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_mty_V_2 <= out_pktendbuf_mty_V_2;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_mty_V_2 <= lbus_fifo(407 downto 404);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    outbuf_mty_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                outbuf_mty_V_3 <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1)) then 
                        outbuf_mty_V_3 <= ap_const_lv4_0;
                    elsif (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0))) then 
                        outbuf_mty_V_3 <= lbus_fifo(543 downto 540);
                    end if;
                end if; 
            end if;
        end if;
    end process;


    output_valid_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_valid_V <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    output_valid_V <= ap_phi_mux_storemerge482_phi_fu_307_p6;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln133_fu_635_p2 <= (lbus_fifo_valid_V and lbus_fifo_pkt_end_valid_V);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_phi_mux_empty_phi_fu_294_p6_assign_proc : process(lbus_fifo_pkt_end, ap_CS_fsm_state1, out_pktendbuf_ena_V_1_load_fu_631_p1, and_ln133_fu_635_p2)
    begin
        if (((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_phi_mux_empty_phi_fu_294_p6 <= lbus_fifo_pkt_end(128 downto 128);
        elsif ((((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln133_fu_635_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_phi_mux_empty_phi_fu_294_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_empty_phi_fu_294_p6 <= "X";
        end if; 
    end process;


    ap_phi_mux_storemerge482_phi_fu_307_p6_assign_proc : process(ap_CS_fsm_state1, out_pktendbuf_ena_V_1_load_fu_631_p1, and_ln133_fu_635_p2)
    begin
        if (((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln133_fu_635_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_phi_mux_storemerge482_phi_fu_307_p6 <= ap_const_lv1_0;
        elsif ((((out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv1_1 = and_ln133_fu_635_p2) and (out_pktendbuf_ena_V_1_load_fu_631_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_phi_mux_storemerge482_phi_fu_307_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_storemerge482_phi_fu_307_p6 <= "X";
        end if; 
    end process;

    error_V <= (lbus_fifo_pkt_end_empty_V xor lbus_fifo_empty_V);
    lbus_fifo_pkt_end_re_V <= xor_ln146_fu_1280_p2;
    lbus_fifo_re_V <= xor_ln146_fu_1280_p2;
    m_axis_data_V <= m_axis_databuf_V;
    m_axis_keep_V <= (((m_axis_keepbuf_V_0 & ret_V_21_fu_370_p2) & ret_V_22_fu_392_p2) & ret_V_23_fu_414_p2);
    m_axis_last_V <= m_axis_lastbuf_V;
    m_axis_valid_V <= m_axis_validbuf_V;
    or_ln146_1_fu_1274_p2 <= (or_ln146_fu_1268_p2 or lbus_fifo_empty_V);
    or_ln146_fu_1268_p2 <= (lbus_fifo_pkt_end_empty_V or ap_phi_mux_empty_phi_fu_294_p6);
    out_pktendbuf_ena_V_1_load_fu_631_p1 <= out_pktendbuf_ena_V_s;
    p_Result_1_fu_463_p5 <= (((outbuf_data_V_0 & outbuf_data_V_1) & outbuf_data_V_2) & outbuf_data_V_3);
    ret_V_20_fu_609_p2 <= (ret_V_25_fu_587_p2 or outbuf_eop_V_3);
    ret_V_21_fu_370_p2 <= (rhs_V_fu_362_p3 and m_axis_keepbuf_V_1);
    ret_V_22_fu_392_p2 <= (rhs_V_14_fu_384_p3 and m_axis_keepbuf_V_2);
    ret_V_23_fu_414_p2 <= (rhs_V_15_fu_406_p3 and m_axis_keepbuf_V_3);
    ret_V_24_fu_565_p2 <= (outbuf_eop_V_1 or outbuf_eop_V_0);
    ret_V_25_fu_587_p2 <= (ret_V_24_fu_565_p2 or outbuf_eop_V_2);
    rhs_V_14_fu_384_p3 <= 
        ap_const_lv16_FFFF when (keep2mask_V(0) = '1') else 
        ap_const_lv16_0;
    rhs_V_15_fu_406_p3 <= 
        ap_const_lv16_FFFF when (keep3mask_V(0) = '1') else 
        ap_const_lv16_0;
    rhs_V_fu_362_p3 <= 
        ap_const_lv16_FFFF when (keep1mask_V(0) = '1') else 
        ap_const_lv16_0;
    trunc_ln321_1_fu_875_p1 <= lbus_fifo_pkt_end(128 - 1 downto 0);
    trunc_ln321_fu_641_p1 <= lbus_fifo(128 - 1 downto 0);
    xor_ln113_fu_549_p2 <= (outbuf_eop_V_0 xor ap_const_lv1_1);
    xor_ln114_fu_571_p2 <= (ret_V_24_fu_565_p2 xor ap_const_lv1_1);
    xor_ln115_fu_593_p2 <= (ret_V_25_fu_587_p2 xor ap_const_lv1_1);
    xor_ln146_fu_1280_p2 <= (or_ln146_1_fu_1274_p2 xor ap_const_lv1_1);
end behav;
