// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MatMul (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        in_r_TDATA,
        in_r_TID,
        in_r_TDEST,
        in_r_TUSER,
        in_r_TLAST,
        c_V_data_V_din,
        c_V_data_V_full_n,
        c_V_data_V_write,
        c_V_id_V_din,
        c_V_id_V_full_n,
        c_V_id_V_write,
        c_V_dest_V_din,
        c_V_dest_V_full_n,
        c_V_dest_V_write,
        c_V_user_V_din,
        c_V_user_V_full_n,
        c_V_user_V_write,
        c_V_last_V_din,
        c_V_last_V_full_n,
        c_V_last_V_write,
        ap_clk,
        ap_rst,
        in_r_TVALID,
        in_r_TREADY,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [511:0] in_r_TDATA;
input  [7:0] in_r_TID;
input  [7:0] in_r_TDEST;
input  [15:0] in_r_TUSER;
input  [0:0] in_r_TLAST;
output  [511:0] c_V_data_V_din;
input   c_V_data_V_full_n;
output   c_V_data_V_write;
output  [7:0] c_V_id_V_din;
input   c_V_id_V_full_n;
output   c_V_id_V_write;
output  [7:0] c_V_dest_V_din;
input   c_V_dest_V_full_n;
output   c_V_dest_V_write;
output  [15:0] c_V_user_V_din;
input   c_V_user_V_full_n;
output   c_V_user_V_write;
output  [0:0] c_V_last_V_din;
input   c_V_last_V_full_n;
output   c_V_last_V_write;
input   ap_clk;
input   ap_rst;
input   in_r_TVALID;
output   in_r_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    ReadB_U0_ap_start;
wire    ReadB_U0_start_full_n;
wire    ReadB_U0_ap_done;
wire    ReadB_U0_ap_continue;
wire    ReadB_U0_ap_idle;
wire    ReadB_U0_ap_ready;
wire    ReadB_U0_start_out;
wire    ReadB_U0_start_write;
wire    ReadB_U0_in_r_TREADY;
wire   [255:0] ReadB_U0_b_pipes_1_V_V_din;
wire    ReadB_U0_b_pipes_1_V_V_write;
wire   [255:0] ReadB_U0_b_pipes_2_V_V_din;
wire    ReadB_U0_b_pipes_2_V_V_write;
wire   [31:0] ReadB_U0_N_pipes_0_V_V_din;
wire    ReadB_U0_N_pipes_0_V_V_write;
wire   [31:0] ReadB_U0_N_pipes_1_V_V_din;
wire    ReadB_U0_N_pipes_1_V_V_write;
wire   [31:0] ReadB_U0_N_pipes_2_V_V_din;
wire    ReadB_U0_N_pipes_2_V_V_write;
wire    TILE125_U0_N_in_V_V2_read;
wire    TILE125_U0_b_in_1_V_V_read;
wire    TILE125_U0_b_in_2_V_V_read;
wire   [31:0] TILE125_U0_c_out_1_V_V_din;
wire    TILE125_U0_c_out_1_V_V_write;
wire   [31:0] TILE125_U0_c_out_2_V_V7_din;
wire    TILE125_U0_c_out_2_V_V7_write;
wire    TILE125_U0_ap_start;
wire    TILE125_U0_ap_done;
wire    TILE125_U0_ap_ready;
wire    TILE125_U0_ap_idle;
wire    TILE125_U0_ap_continue;
wire    ConvertWidthC_U0_ap_start;
wire    ConvertWidthC_U0_ap_done;
wire    ConvertWidthC_U0_ap_continue;
wire    ConvertWidthC_U0_ap_idle;
wire    ConvertWidthC_U0_ap_ready;
wire    ConvertWidthC_U0_N_pipe_0_V_V_read;
wire    ConvertWidthC_U0_c_pipes_0_V_V_read;
wire    ConvertWidthC_U0_c_pipes_1_V_V_read;
wire   [63:0] ConvertWidthC_U0_out_V_V_din;
wire    ConvertWidthC_U0_out_V_V_write;
wire    WriteC126_U0_ap_start;
wire    WriteC126_U0_ap_done;
wire    WriteC126_U0_ap_continue;
wire    WriteC126_U0_ap_idle;
wire    WriteC126_U0_ap_ready;
wire    WriteC126_U0_N_pipe_V_V1_read;
wire    WriteC126_U0_in_V_V_read;
wire   [511:0] WriteC126_U0_out_V_data_V_din;
wire    WriteC126_U0_out_V_data_V_write;
wire   [7:0] WriteC126_U0_out_V_id_V_din;
wire    WriteC126_U0_out_V_id_V_write;
wire   [7:0] WriteC126_U0_out_V_dest_V_din;
wire    WriteC126_U0_out_V_dest_V_write;
wire   [15:0] WriteC126_U0_out_V_user_V_din;
wire    WriteC126_U0_out_V_user_V_write;
wire   [0:0] WriteC126_U0_out_V_last_V_din;
wire    WriteC126_U0_out_V_last_V_write;
wire    ap_sync_continue;
wire    b_pipes_1_0_V_V_full_n;
wire   [255:0] b_pipes_1_0_V_V_dout;
wire    b_pipes_1_0_V_V_empty_n;
wire    b_pipes_2_0_V_V_full_n;
wire   [255:0] b_pipes_2_0_V_V_dout;
wire    b_pipes_2_0_V_V_empty_n;
wire    N_pipes_0_V_V_full_n;
wire   [31:0] N_pipes_0_V_V_dout;
wire    N_pipes_0_V_V_empty_n;
wire    N_pipes_1_V_V_full_n;
wire   [31:0] N_pipes_1_V_V_dout;
wire    N_pipes_1_V_V_empty_n;
wire    N_pipes_2_V_V_full_n;
wire   [31:0] N_pipes_2_V_V_dout;
wire    N_pipes_2_V_V_empty_n;
wire    c_pipes_0_0_V_V_full_n;
wire   [31:0] c_pipes_0_0_V_V_dout;
wire    c_pipes_0_0_V_V_empty_n;
wire    c_pipes_0_1_V_V_full_n;
wire   [31:0] c_pipes_0_1_V_V_dout;
wire    c_pipes_0_1_V_V_empty_n;
wire    conv_pipe_V_V_full_n;
wire   [63:0] conv_pipe_V_V_dout;
wire    conv_pipe_V_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_TILE125_U0_din;
wire    start_for_TILE125_U0_full_n;
wire   [0:0] start_for_TILE125_U0_dout;
wire    start_for_TILE125_U0_empty_n;
wire   [0:0] start_for_ConvertWidthC_U0_din;
wire    start_for_ConvertWidthC_U0_full_n;
wire   [0:0] start_for_ConvertWidthC_U0_dout;
wire    start_for_ConvertWidthC_U0_empty_n;
wire   [0:0] start_for_WriteC126_U0_din;
wire    start_for_WriteC126_U0_full_n;
wire   [0:0] start_for_WriteC126_U0_dout;
wire    start_for_WriteC126_U0_empty_n;
wire    TILE125_U0_start_full_n;
wire    TILE125_U0_start_write;
wire    ConvertWidthC_U0_start_full_n;
wire    ConvertWidthC_U0_start_write;
wire    WriteC126_U0_start_full_n;
wire    WriteC126_U0_start_write;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
end

ReadB ReadB_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ReadB_U0_ap_start),
    .start_full_n(ReadB_U0_start_full_n),
    .ap_done(ReadB_U0_ap_done),
    .ap_continue(ReadB_U0_ap_continue),
    .ap_idle(ReadB_U0_ap_idle),
    .ap_ready(ReadB_U0_ap_ready),
    .start_out(ReadB_U0_start_out),
    .start_write(ReadB_U0_start_write),
    .in_r_TDATA(in_r_TDATA),
    .in_r_TVALID(in_r_TVALID),
    .in_r_TREADY(ReadB_U0_in_r_TREADY),
    .in_r_TID(in_r_TID),
    .in_r_TDEST(in_r_TDEST),
    .in_r_TUSER(in_r_TUSER),
    .in_r_TLAST(in_r_TLAST),
    .b_pipes_1_V_V_din(ReadB_U0_b_pipes_1_V_V_din),
    .b_pipes_1_V_V_full_n(b_pipes_1_0_V_V_full_n),
    .b_pipes_1_V_V_write(ReadB_U0_b_pipes_1_V_V_write),
    .b_pipes_2_V_V_din(ReadB_U0_b_pipes_2_V_V_din),
    .b_pipes_2_V_V_full_n(b_pipes_2_0_V_V_full_n),
    .b_pipes_2_V_V_write(ReadB_U0_b_pipes_2_V_V_write),
    .N_pipes_0_V_V_din(ReadB_U0_N_pipes_0_V_V_din),
    .N_pipes_0_V_V_full_n(N_pipes_0_V_V_full_n),
    .N_pipes_0_V_V_write(ReadB_U0_N_pipes_0_V_V_write),
    .N_pipes_1_V_V_din(ReadB_U0_N_pipes_1_V_V_din),
    .N_pipes_1_V_V_full_n(N_pipes_1_V_V_full_n),
    .N_pipes_1_V_V_write(ReadB_U0_N_pipes_1_V_V_write),
    .N_pipes_2_V_V_din(ReadB_U0_N_pipes_2_V_V_din),
    .N_pipes_2_V_V_full_n(N_pipes_2_V_V_full_n),
    .N_pipes_2_V_V_write(ReadB_U0_N_pipes_2_V_V_write)
);

TILE125 TILE125_U0(
    .N_in_V_V2_dout(N_pipes_2_V_V_dout),
    .N_in_V_V2_empty_n(N_pipes_2_V_V_empty_n),
    .N_in_V_V2_read(TILE125_U0_N_in_V_V2_read),
    .b_in_1_V_V_dout(b_pipes_1_0_V_V_dout),
    .b_in_1_V_V_empty_n(b_pipes_1_0_V_V_empty_n),
    .b_in_1_V_V_read(TILE125_U0_b_in_1_V_V_read),
    .b_in_2_V_V_dout(b_pipes_2_0_V_V_dout),
    .b_in_2_V_V_empty_n(b_pipes_2_0_V_V_empty_n),
    .b_in_2_V_V_read(TILE125_U0_b_in_2_V_V_read),
    .c_out_1_V_V_din(TILE125_U0_c_out_1_V_V_din),
    .c_out_1_V_V_full_n(c_pipes_0_0_V_V_full_n),
    .c_out_1_V_V_write(TILE125_U0_c_out_1_V_V_write),
    .c_out_2_V_V7_din(TILE125_U0_c_out_2_V_V7_din),
    .c_out_2_V_V7_full_n(c_pipes_0_1_V_V_full_n),
    .c_out_2_V_V7_write(TILE125_U0_c_out_2_V_V7_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(TILE125_U0_ap_start),
    .ap_done(TILE125_U0_ap_done),
    .ap_ready(TILE125_U0_ap_ready),
    .ap_idle(TILE125_U0_ap_idle),
    .ap_continue(TILE125_U0_ap_continue)
);

ConvertWidthC ConvertWidthC_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ConvertWidthC_U0_ap_start),
    .ap_done(ConvertWidthC_U0_ap_done),
    .ap_continue(ConvertWidthC_U0_ap_continue),
    .ap_idle(ConvertWidthC_U0_ap_idle),
    .ap_ready(ConvertWidthC_U0_ap_ready),
    .N_pipe_0_V_V_dout(N_pipes_0_V_V_dout),
    .N_pipe_0_V_V_empty_n(N_pipes_0_V_V_empty_n),
    .N_pipe_0_V_V_read(ConvertWidthC_U0_N_pipe_0_V_V_read),
    .c_pipes_0_V_V_dout(c_pipes_0_0_V_V_dout),
    .c_pipes_0_V_V_empty_n(c_pipes_0_0_V_V_empty_n),
    .c_pipes_0_V_V_read(ConvertWidthC_U0_c_pipes_0_V_V_read),
    .c_pipes_1_V_V_dout(c_pipes_0_1_V_V_dout),
    .c_pipes_1_V_V_empty_n(c_pipes_0_1_V_V_empty_n),
    .c_pipes_1_V_V_read(ConvertWidthC_U0_c_pipes_1_V_V_read),
    .out_V_V_din(ConvertWidthC_U0_out_V_V_din),
    .out_V_V_full_n(conv_pipe_V_V_full_n),
    .out_V_V_write(ConvertWidthC_U0_out_V_V_write)
);

WriteC126 WriteC126_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(WriteC126_U0_ap_start),
    .ap_done(WriteC126_U0_ap_done),
    .ap_continue(WriteC126_U0_ap_continue),
    .ap_idle(WriteC126_U0_ap_idle),
    .ap_ready(WriteC126_U0_ap_ready),
    .N_pipe_V_V1_dout(N_pipes_1_V_V_dout),
    .N_pipe_V_V1_empty_n(N_pipes_1_V_V_empty_n),
    .N_pipe_V_V1_read(WriteC126_U0_N_pipe_V_V1_read),
    .in_V_V_dout(conv_pipe_V_V_dout),
    .in_V_V_empty_n(conv_pipe_V_V_empty_n),
    .in_V_V_read(WriteC126_U0_in_V_V_read),
    .out_V_data_V_din(WriteC126_U0_out_V_data_V_din),
    .out_V_data_V_full_n(c_V_data_V_full_n),
    .out_V_data_V_write(WriteC126_U0_out_V_data_V_write),
    .out_V_id_V_din(WriteC126_U0_out_V_id_V_din),
    .out_V_id_V_full_n(c_V_id_V_full_n),
    .out_V_id_V_write(WriteC126_U0_out_V_id_V_write),
    .out_V_dest_V_din(WriteC126_U0_out_V_dest_V_din),
    .out_V_dest_V_full_n(c_V_dest_V_full_n),
    .out_V_dest_V_write(WriteC126_U0_out_V_dest_V_write),
    .out_V_user_V_din(WriteC126_U0_out_V_user_V_din),
    .out_V_user_V_full_n(c_V_user_V_full_n),
    .out_V_user_V_write(WriteC126_U0_out_V_user_V_write),
    .out_V_last_V_din(WriteC126_U0_out_V_last_V_din),
    .out_V_last_V_full_n(c_V_last_V_full_n),
    .out_V_last_V_write(WriteC126_U0_out_V_last_V_write)
);

fifo_w256_d2_A_x b_pipes_1_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ReadB_U0_b_pipes_1_V_V_din),
    .if_full_n(b_pipes_1_0_V_V_full_n),
    .if_write(ReadB_U0_b_pipes_1_V_V_write),
    .if_dout(b_pipes_1_0_V_V_dout),
    .if_empty_n(b_pipes_1_0_V_V_empty_n),
    .if_read(TILE125_U0_b_in_1_V_V_read)
);

fifo_w256_d2_A_x b_pipes_2_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ReadB_U0_b_pipes_2_V_V_din),
    .if_full_n(b_pipes_2_0_V_V_full_n),
    .if_write(ReadB_U0_b_pipes_2_V_V_write),
    .if_dout(b_pipes_2_0_V_V_dout),
    .if_empty_n(b_pipes_2_0_V_V_empty_n),
    .if_read(TILE125_U0_b_in_2_V_V_read)
);

fifo_w32_d2_A_x N_pipes_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ReadB_U0_N_pipes_0_V_V_din),
    .if_full_n(N_pipes_0_V_V_full_n),
    .if_write(ReadB_U0_N_pipes_0_V_V_write),
    .if_dout(N_pipes_0_V_V_dout),
    .if_empty_n(N_pipes_0_V_V_empty_n),
    .if_read(ConvertWidthC_U0_N_pipe_0_V_V_read)
);

fifo_w32_d2_A_x N_pipes_1_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ReadB_U0_N_pipes_1_V_V_din),
    .if_full_n(N_pipes_1_V_V_full_n),
    .if_write(ReadB_U0_N_pipes_1_V_V_write),
    .if_dout(N_pipes_1_V_V_dout),
    .if_empty_n(N_pipes_1_V_V_empty_n),
    .if_read(WriteC126_U0_N_pipe_V_V1_read)
);

fifo_w32_d2_A_x N_pipes_2_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ReadB_U0_N_pipes_2_V_V_din),
    .if_full_n(N_pipes_2_V_V_full_n),
    .if_write(ReadB_U0_N_pipes_2_V_V_write),
    .if_dout(N_pipes_2_V_V_dout),
    .if_empty_n(N_pipes_2_V_V_empty_n),
    .if_read(TILE125_U0_N_in_V_V2_read)
);

fifo_w32_d2_A_x c_pipes_0_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(TILE125_U0_c_out_1_V_V_din),
    .if_full_n(c_pipes_0_0_V_V_full_n),
    .if_write(TILE125_U0_c_out_1_V_V_write),
    .if_dout(c_pipes_0_0_V_V_dout),
    .if_empty_n(c_pipes_0_0_V_V_empty_n),
    .if_read(ConvertWidthC_U0_c_pipes_0_V_V_read)
);

fifo_w32_d2_A_x c_pipes_0_1_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(TILE125_U0_c_out_2_V_V7_din),
    .if_full_n(c_pipes_0_1_V_V_full_n),
    .if_write(TILE125_U0_c_out_2_V_V7_write),
    .if_dout(c_pipes_0_1_V_V_dout),
    .if_empty_n(c_pipes_0_1_V_V_empty_n),
    .if_read(ConvertWidthC_U0_c_pipes_1_V_V_read)
);

fifo_w64_d2_A conv_pipe_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ConvertWidthC_U0_out_V_V_din),
    .if_full_n(conv_pipe_V_V_full_n),
    .if_write(ConvertWidthC_U0_out_V_V_write),
    .if_dout(conv_pipe_V_V_dout),
    .if_empty_n(conv_pipe_V_V_empty_n),
    .if_read(WriteC126_U0_in_V_V_read)
);

start_for_TILE125_U0 start_for_TILE125_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_TILE125_U0_din),
    .if_full_n(start_for_TILE125_U0_full_n),
    .if_write(ReadB_U0_start_write),
    .if_dout(start_for_TILE125_U0_dout),
    .if_empty_n(start_for_TILE125_U0_empty_n),
    .if_read(TILE125_U0_ap_ready)
);

start_for_ConvertWidthC_U0 start_for_ConvertWidthC_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ConvertWidthC_U0_din),
    .if_full_n(start_for_ConvertWidthC_U0_full_n),
    .if_write(ReadB_U0_start_write),
    .if_dout(start_for_ConvertWidthC_U0_dout),
    .if_empty_n(start_for_ConvertWidthC_U0_empty_n),
    .if_read(ConvertWidthC_U0_ap_ready)
);

start_for_WriteC126_U0 start_for_WriteC126_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_WriteC126_U0_din),
    .if_full_n(start_for_WriteC126_U0_full_n),
    .if_write(ReadB_U0_start_write),
    .if_dout(start_for_WriteC126_U0_dout),
    .if_empty_n(start_for_WriteC126_U0_empty_n),
    .if_read(WriteC126_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign ConvertWidthC_U0_ap_continue = 1'b1;

assign ConvertWidthC_U0_ap_start = start_for_ConvertWidthC_U0_empty_n;

assign ConvertWidthC_U0_start_full_n = 1'b1;

assign ConvertWidthC_U0_start_write = 1'b0;

assign ReadB_U0_ap_continue = 1'b1;

assign ReadB_U0_ap_start = real_start;

assign ReadB_U0_start_full_n = (start_for_WriteC126_U0_full_n & start_for_TILE125_U0_full_n & start_for_ConvertWidthC_U0_full_n);

assign TILE125_U0_ap_continue = 1'b1;

assign TILE125_U0_ap_start = start_for_TILE125_U0_empty_n;

assign TILE125_U0_start_full_n = 1'b1;

assign TILE125_U0_start_write = 1'b0;

assign WriteC126_U0_ap_continue = ap_continue;

assign WriteC126_U0_ap_start = start_for_WriteC126_U0_empty_n;

assign WriteC126_U0_start_full_n = 1'b1;

assign WriteC126_U0_start_write = 1'b0;

assign ap_done = WriteC126_U0_ap_done;

assign ap_idle = (WriteC126_U0_ap_idle & TILE125_U0_ap_idle & ReadB_U0_ap_idle & ConvertWidthC_U0_ap_idle);

assign ap_ready = internal_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = WriteC126_U0_ap_done;

assign ap_sync_ready = ReadB_U0_ap_ready;

assign c_V_data_V_din = WriteC126_U0_out_V_data_V_din;

assign c_V_data_V_write = WriteC126_U0_out_V_data_V_write;

assign c_V_dest_V_din = WriteC126_U0_out_V_dest_V_din;

assign c_V_dest_V_write = WriteC126_U0_out_V_dest_V_write;

assign c_V_id_V_din = WriteC126_U0_out_V_id_V_din;

assign c_V_id_V_write = WriteC126_U0_out_V_id_V_write;

assign c_V_last_V_din = WriteC126_U0_out_V_last_V_din;

assign c_V_last_V_write = WriteC126_U0_out_V_last_V_write;

assign c_V_user_V_din = WriteC126_U0_out_V_user_V_din;

assign c_V_user_V_write = WriteC126_U0_out_V_user_V_write;

assign in_r_TREADY = ReadB_U0_in_r_TREADY;

assign internal_ap_ready = ap_sync_ready;

assign start_for_ConvertWidthC_U0_din = 1'b1;

assign start_for_TILE125_U0_din = 1'b1;

assign start_for_WriteC126_U0_din = 1'b1;

assign start_out = real_start;

endmodule //MatMul
