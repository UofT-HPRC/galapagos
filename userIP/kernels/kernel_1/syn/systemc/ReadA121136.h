// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ReadA121136_HH_
#define _ReadA121136_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ReadA121136_weights_0_4_0.h"
#include "ReadA121136_weights_0_4_1.h"
#include "ReadA121136_weights_0_4_2.h"
#include "ReadA121136_weights_0_4_3.h"
#include "ReadA121136_weights_0_4_4.h"
#include "ReadA121136_weights_0_4_5.h"
#include "ReadA121136_weights_0_4_6.h"
#include "ReadA121136_weights_0_4_7.h"
#include "ReadA121136_weights_0_4_8.h"
#include "ReadA121136_weights_0_4_9.h"
#include "ReadA121136_weights_0_4_10.h"
#include "ReadA121136_weights_0_4_11.h"
#include "ReadA121136_weights_0_4_12.h"
#include "ReadA121136_weights_0_4_13.h"
#include "ReadA121136_weights_0_4_14.h"
#include "ReadA121136_weights_0_4_15.h"
#include "ReadA121136_weights_0_4_16.h"
#include "ReadA121136_weights_0_4_17.h"
#include "ReadA121136_weights_0_4_18.h"
#include "ReadA121136_weights_0_4_19.h"
#include "ReadA121136_weights_0_4_20.h"
#include "ReadA121136_weights_0_4_21.h"
#include "ReadA121136_weights_0_4_22.h"
#include "ReadA121136_weights_0_4_23.h"
#include "ReadA121136_weights_0_4_24.h"
#include "ReadA121136_weights_0_4_25.h"
#include "ReadA121136_weights_0_4_26.h"
#include "ReadA121136_weights_0_4_27.h"
#include "ReadA121136_weights_0_4_28.h"
#include "ReadA121136_weights_0_4_29.h"
#include "ReadA121136_weights_0_4_30.h"
#include "ReadA121136_weights_0_4_31.h"

namespace ap_rtl {

struct ReadA121136 : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > N_pipe_in_V_V4_dout;
    sc_in< sc_logic > N_pipe_in_V_V4_empty_n;
    sc_out< sc_logic > N_pipe_in_V_V4_read;
    sc_out< sc_lv<32> > N_pipe_out_V_V11_din;
    sc_in< sc_logic > N_pipe_out_V_V11_full_n;
    sc_out< sc_logic > N_pipe_out_V_V11_write;
    sc_out< sc_lv<256> > a_pipes_1_V_V16_din;
    sc_in< sc_logic > a_pipes_1_V_V16_full_n;
    sc_out< sc_logic > a_pipes_1_V_V16_write;
    sc_out< sc_lv<256> > a_pipes_2_V_V21_din;
    sc_in< sc_logic > a_pipes_2_V_V21_full_n;
    sc_out< sc_logic > a_pipes_2_V_V21_write;
    sc_out< sc_lv<256> > a_pipes_3_V_V26_din;
    sc_in< sc_logic > a_pipes_3_V_V26_full_n;
    sc_out< sc_logic > a_pipes_3_V_V26_write;
    sc_out< sc_lv<256> > a_pipes_4_V_V31_din;
    sc_in< sc_logic > a_pipes_4_V_V31_full_n;
    sc_out< sc_logic > a_pipes_4_V_V31_write;


    // Module declarations
    ReadA121136(sc_module_name name);
    SC_HAS_PROCESS(ReadA121136);

    ~ReadA121136();

    sc_trace_file* mVcdFile;

    ReadA121136_weights_0_4_0* weights_0_4_0_U;
    ReadA121136_weights_0_4_1* weights_0_4_1_U;
    ReadA121136_weights_0_4_2* weights_0_4_2_U;
    ReadA121136_weights_0_4_3* weights_0_4_3_U;
    ReadA121136_weights_0_4_4* weights_0_4_4_U;
    ReadA121136_weights_0_4_5* weights_0_4_5_U;
    ReadA121136_weights_0_4_6* weights_0_4_6_U;
    ReadA121136_weights_0_4_7* weights_0_4_7_U;
    ReadA121136_weights_0_4_8* weights_0_4_8_U;
    ReadA121136_weights_0_4_9* weights_0_4_9_U;
    ReadA121136_weights_0_4_10* weights_0_4_10_U;
    ReadA121136_weights_0_4_11* weights_0_4_11_U;
    ReadA121136_weights_0_4_12* weights_0_4_12_U;
    ReadA121136_weights_0_4_13* weights_0_4_13_U;
    ReadA121136_weights_0_4_14* weights_0_4_14_U;
    ReadA121136_weights_0_4_15* weights_0_4_15_U;
    ReadA121136_weights_0_4_16* weights_0_4_16_U;
    ReadA121136_weights_0_4_17* weights_0_4_17_U;
    ReadA121136_weights_0_4_18* weights_0_4_18_U;
    ReadA121136_weights_0_4_19* weights_0_4_19_U;
    ReadA121136_weights_0_4_20* weights_0_4_20_U;
    ReadA121136_weights_0_4_21* weights_0_4_21_U;
    ReadA121136_weights_0_4_22* weights_0_4_22_U;
    ReadA121136_weights_0_4_23* weights_0_4_23_U;
    ReadA121136_weights_0_4_24* weights_0_4_24_U;
    ReadA121136_weights_0_4_25* weights_0_4_25_U;
    ReadA121136_weights_0_4_26* weights_0_4_26_U;
    ReadA121136_weights_0_4_27* weights_0_4_27_U;
    ReadA121136_weights_0_4_28* weights_0_4_28_U;
    ReadA121136_weights_0_4_29* weights_0_4_29_U;
    ReadA121136_weights_0_4_30* weights_0_4_30_U;
    ReadA121136_weights_0_4_31* weights_0_4_31_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<10> > weights_0_4_0_address0;
    sc_signal< sc_logic > weights_0_4_0_ce0;
    sc_signal< sc_lv<32> > weights_0_4_0_q0;
    sc_signal< sc_lv<10> > weights_0_4_1_address0;
    sc_signal< sc_logic > weights_0_4_1_ce0;
    sc_signal< sc_lv<32> > weights_0_4_1_q0;
    sc_signal< sc_lv<10> > weights_0_4_2_address0;
    sc_signal< sc_logic > weights_0_4_2_ce0;
    sc_signal< sc_lv<32> > weights_0_4_2_q0;
    sc_signal< sc_lv<10> > weights_0_4_3_address0;
    sc_signal< sc_logic > weights_0_4_3_ce0;
    sc_signal< sc_lv<32> > weights_0_4_3_q0;
    sc_signal< sc_lv<10> > weights_0_4_4_address0;
    sc_signal< sc_logic > weights_0_4_4_ce0;
    sc_signal< sc_lv<32> > weights_0_4_4_q0;
    sc_signal< sc_lv<10> > weights_0_4_5_address0;
    sc_signal< sc_logic > weights_0_4_5_ce0;
    sc_signal< sc_lv<32> > weights_0_4_5_q0;
    sc_signal< sc_lv<10> > weights_0_4_6_address0;
    sc_signal< sc_logic > weights_0_4_6_ce0;
    sc_signal< sc_lv<32> > weights_0_4_6_q0;
    sc_signal< sc_lv<10> > weights_0_4_7_address0;
    sc_signal< sc_logic > weights_0_4_7_ce0;
    sc_signal< sc_lv<32> > weights_0_4_7_q0;
    sc_signal< sc_lv<10> > weights_0_4_8_address0;
    sc_signal< sc_logic > weights_0_4_8_ce0;
    sc_signal< sc_lv<32> > weights_0_4_8_q0;
    sc_signal< sc_lv<10> > weights_0_4_9_address0;
    sc_signal< sc_logic > weights_0_4_9_ce0;
    sc_signal< sc_lv<32> > weights_0_4_9_q0;
    sc_signal< sc_lv<10> > weights_0_4_10_address0;
    sc_signal< sc_logic > weights_0_4_10_ce0;
    sc_signal< sc_lv<32> > weights_0_4_10_q0;
    sc_signal< sc_lv<10> > weights_0_4_11_address0;
    sc_signal< sc_logic > weights_0_4_11_ce0;
    sc_signal< sc_lv<32> > weights_0_4_11_q0;
    sc_signal< sc_lv<10> > weights_0_4_12_address0;
    sc_signal< sc_logic > weights_0_4_12_ce0;
    sc_signal< sc_lv<32> > weights_0_4_12_q0;
    sc_signal< sc_lv<10> > weights_0_4_13_address0;
    sc_signal< sc_logic > weights_0_4_13_ce0;
    sc_signal< sc_lv<32> > weights_0_4_13_q0;
    sc_signal< sc_lv<10> > weights_0_4_14_address0;
    sc_signal< sc_logic > weights_0_4_14_ce0;
    sc_signal< sc_lv<32> > weights_0_4_14_q0;
    sc_signal< sc_lv<10> > weights_0_4_15_address0;
    sc_signal< sc_logic > weights_0_4_15_ce0;
    sc_signal< sc_lv<32> > weights_0_4_15_q0;
    sc_signal< sc_lv<10> > weights_0_4_16_address0;
    sc_signal< sc_logic > weights_0_4_16_ce0;
    sc_signal< sc_lv<32> > weights_0_4_16_q0;
    sc_signal< sc_lv<10> > weights_0_4_17_address0;
    sc_signal< sc_logic > weights_0_4_17_ce0;
    sc_signal< sc_lv<32> > weights_0_4_17_q0;
    sc_signal< sc_lv<10> > weights_0_4_18_address0;
    sc_signal< sc_logic > weights_0_4_18_ce0;
    sc_signal< sc_lv<32> > weights_0_4_18_q0;
    sc_signal< sc_lv<10> > weights_0_4_19_address0;
    sc_signal< sc_logic > weights_0_4_19_ce0;
    sc_signal< sc_lv<32> > weights_0_4_19_q0;
    sc_signal< sc_lv<10> > weights_0_4_20_address0;
    sc_signal< sc_logic > weights_0_4_20_ce0;
    sc_signal< sc_lv<32> > weights_0_4_20_q0;
    sc_signal< sc_lv<10> > weights_0_4_21_address0;
    sc_signal< sc_logic > weights_0_4_21_ce0;
    sc_signal< sc_lv<32> > weights_0_4_21_q0;
    sc_signal< sc_lv<10> > weights_0_4_22_address0;
    sc_signal< sc_logic > weights_0_4_22_ce0;
    sc_signal< sc_lv<32> > weights_0_4_22_q0;
    sc_signal< sc_lv<10> > weights_0_4_23_address0;
    sc_signal< sc_logic > weights_0_4_23_ce0;
    sc_signal< sc_lv<32> > weights_0_4_23_q0;
    sc_signal< sc_lv<10> > weights_0_4_24_address0;
    sc_signal< sc_logic > weights_0_4_24_ce0;
    sc_signal< sc_lv<32> > weights_0_4_24_q0;
    sc_signal< sc_lv<10> > weights_0_4_25_address0;
    sc_signal< sc_logic > weights_0_4_25_ce0;
    sc_signal< sc_lv<32> > weights_0_4_25_q0;
    sc_signal< sc_lv<10> > weights_0_4_26_address0;
    sc_signal< sc_logic > weights_0_4_26_ce0;
    sc_signal< sc_lv<32> > weights_0_4_26_q0;
    sc_signal< sc_lv<10> > weights_0_4_27_address0;
    sc_signal< sc_logic > weights_0_4_27_ce0;
    sc_signal< sc_lv<32> > weights_0_4_27_q0;
    sc_signal< sc_lv<10> > weights_0_4_28_address0;
    sc_signal< sc_logic > weights_0_4_28_ce0;
    sc_signal< sc_lv<32> > weights_0_4_28_q0;
    sc_signal< sc_lv<10> > weights_0_4_29_address0;
    sc_signal< sc_logic > weights_0_4_29_ce0;
    sc_signal< sc_lv<32> > weights_0_4_29_q0;
    sc_signal< sc_lv<10> > weights_0_4_30_address0;
    sc_signal< sc_logic > weights_0_4_30_ce0;
    sc_signal< sc_lv<32> > weights_0_4_30_q0;
    sc_signal< sc_lv<10> > weights_0_4_31_address0;
    sc_signal< sc_logic > weights_0_4_31_ce0;
    sc_signal< sc_lv<32> > weights_0_4_31_q0;
    sc_signal< sc_logic > N_pipe_in_V_V4_blk_n;
    sc_signal< sc_logic > N_pipe_out_V_V11_blk_n;
    sc_signal< sc_logic > a_pipes_1_V_V16_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln25_reg_872;
    sc_signal< sc_logic > a_pipes_2_V_V21_blk_n;
    sc_signal< sc_logic > a_pipes_3_V_V26_blk_n;
    sc_signal< sc_logic > a_pipes_4_V_V31_blk_n;
    sc_signal< sc_lv<42> > indvar_flatten_reg_668;
    sc_signal< sc_lv<10> > n_0_reg_679;
    sc_signal< sc_lv<42> > bound_fu_710_p2;
    sc_signal< sc_lv<42> > bound_reg_867;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln25_fu_716_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<42> > add_ln25_fu_721_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<10> > n_fu_777_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<64> > zext_ln32_fu_741_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<40> > tmp_fu_698_p3;
    sc_signal< sc_lv<42> > p_shl_fu_690_p3;
    sc_signal< sc_lv<42> > p_shl190_fu_706_p1;
    sc_signal< sc_lv<1> > icmp_ln27_fu_727_p2;
    sc_signal< sc_lv<10> > select_ln27_fu_733_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<42> ap_const_lv42_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<42> ap_const_lv42_1;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_N_pipe_in_V_V4_blk_n();
    void thread_N_pipe_in_V_V4_read();
    void thread_N_pipe_out_V_V11_blk_n();
    void thread_N_pipe_out_V_V11_din();
    void thread_N_pipe_out_V_V11_write();
    void thread_a_pipes_1_V_V16_blk_n();
    void thread_a_pipes_1_V_V16_din();
    void thread_a_pipes_1_V_V16_write();
    void thread_a_pipes_2_V_V21_blk_n();
    void thread_a_pipes_2_V_V21_din();
    void thread_a_pipes_2_V_V21_write();
    void thread_a_pipes_3_V_V26_blk_n();
    void thread_a_pipes_3_V_V26_din();
    void thread_a_pipes_3_V_V26_write();
    void thread_a_pipes_4_V_V31_blk_n();
    void thread_a_pipes_4_V_V31_din();
    void thread_a_pipes_4_V_V31_write();
    void thread_add_ln25_fu_721_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_710_p2();
    void thread_icmp_ln25_fu_716_p2();
    void thread_icmp_ln27_fu_727_p2();
    void thread_internal_ap_ready();
    void thread_n_fu_777_p2();
    void thread_p_shl190_fu_706_p1();
    void thread_p_shl_fu_690_p3();
    void thread_real_start();
    void thread_select_ln27_fu_733_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_fu_698_p3();
    void thread_weights_0_4_0_address0();
    void thread_weights_0_4_0_ce0();
    void thread_weights_0_4_10_address0();
    void thread_weights_0_4_10_ce0();
    void thread_weights_0_4_11_address0();
    void thread_weights_0_4_11_ce0();
    void thread_weights_0_4_12_address0();
    void thread_weights_0_4_12_ce0();
    void thread_weights_0_4_13_address0();
    void thread_weights_0_4_13_ce0();
    void thread_weights_0_4_14_address0();
    void thread_weights_0_4_14_ce0();
    void thread_weights_0_4_15_address0();
    void thread_weights_0_4_15_ce0();
    void thread_weights_0_4_16_address0();
    void thread_weights_0_4_16_ce0();
    void thread_weights_0_4_17_address0();
    void thread_weights_0_4_17_ce0();
    void thread_weights_0_4_18_address0();
    void thread_weights_0_4_18_ce0();
    void thread_weights_0_4_19_address0();
    void thread_weights_0_4_19_ce0();
    void thread_weights_0_4_1_address0();
    void thread_weights_0_4_1_ce0();
    void thread_weights_0_4_20_address0();
    void thread_weights_0_4_20_ce0();
    void thread_weights_0_4_21_address0();
    void thread_weights_0_4_21_ce0();
    void thread_weights_0_4_22_address0();
    void thread_weights_0_4_22_ce0();
    void thread_weights_0_4_23_address0();
    void thread_weights_0_4_23_ce0();
    void thread_weights_0_4_24_address0();
    void thread_weights_0_4_24_ce0();
    void thread_weights_0_4_25_address0();
    void thread_weights_0_4_25_ce0();
    void thread_weights_0_4_26_address0();
    void thread_weights_0_4_26_ce0();
    void thread_weights_0_4_27_address0();
    void thread_weights_0_4_27_ce0();
    void thread_weights_0_4_28_address0();
    void thread_weights_0_4_28_ce0();
    void thread_weights_0_4_29_address0();
    void thread_weights_0_4_29_ce0();
    void thread_weights_0_4_2_address0();
    void thread_weights_0_4_2_ce0();
    void thread_weights_0_4_30_address0();
    void thread_weights_0_4_30_ce0();
    void thread_weights_0_4_31_address0();
    void thread_weights_0_4_31_ce0();
    void thread_weights_0_4_3_address0();
    void thread_weights_0_4_3_ce0();
    void thread_weights_0_4_4_address0();
    void thread_weights_0_4_4_ce0();
    void thread_weights_0_4_5_address0();
    void thread_weights_0_4_5_ce0();
    void thread_weights_0_4_6_address0();
    void thread_weights_0_4_6_ce0();
    void thread_weights_0_4_7_address0();
    void thread_weights_0_4_7_ce0();
    void thread_weights_0_4_8_address0();
    void thread_weights_0_4_8_ce0();
    void thread_weights_0_4_9_address0();
    void thread_weights_0_4_9_ce0();
    void thread_zext_ln32_fu_741_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
