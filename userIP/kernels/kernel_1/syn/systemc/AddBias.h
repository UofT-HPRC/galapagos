// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AddBias_HH_
#define _AddBias_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AddBias_bias_0.h"
#include "AddBias_bias_1.h"
#include "AddBias_bias_2.h"
#include "AddBias_bias_3.h"
#include "AddBias_bias_4.h"
#include "AddBias_bias_5.h"
#include "AddBias_bias_6.h"
#include "AddBias_bias_7.h"
#include "AddBias_bias_8.h"
#include "AddBias_bias_9.h"
#include "AddBias_bias_10.h"
#include "AddBias_bias_11.h"
#include "AddBias_bias_12.h"
#include "AddBias_bias_13.h"
#include "AddBias_bias_14.h"
#include "AddBias_bias_15.h"

namespace ap_rtl {

struct AddBias : public sc_module {
    // Port declarations 37
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > in_V_data_V_dout;
    sc_in< sc_logic > in_V_data_V_empty_n;
    sc_out< sc_logic > in_V_data_V_read;
    sc_in< sc_lv<8> > in_V_id_V_dout;
    sc_in< sc_logic > in_V_id_V_empty_n;
    sc_out< sc_logic > in_V_id_V_read;
    sc_in< sc_lv<8> > in_V_dest_V_dout;
    sc_in< sc_logic > in_V_dest_V_empty_n;
    sc_out< sc_logic > in_V_dest_V_read;
    sc_in< sc_lv<16> > in_V_user_V_dout;
    sc_in< sc_logic > in_V_user_V_empty_n;
    sc_out< sc_logic > in_V_user_V_read;
    sc_in< sc_lv<1> > in_V_last_V_dout;
    sc_in< sc_logic > in_V_last_V_empty_n;
    sc_out< sc_logic > in_V_last_V_read;
    sc_out< sc_lv<512> > out_V_data_V_din;
    sc_in< sc_logic > out_V_data_V_full_n;
    sc_out< sc_logic > out_V_data_V_write;
    sc_out< sc_lv<8> > out_V_id_V_din;
    sc_in< sc_logic > out_V_id_V_full_n;
    sc_out< sc_logic > out_V_id_V_write;
    sc_out< sc_lv<8> > out_V_dest_V_din;
    sc_in< sc_logic > out_V_dest_V_full_n;
    sc_out< sc_logic > out_V_dest_V_write;
    sc_out< sc_lv<16> > out_V_user_V_din;
    sc_in< sc_logic > out_V_user_V_full_n;
    sc_out< sc_logic > out_V_user_V_write;
    sc_out< sc_lv<1> > out_V_last_V_din;
    sc_in< sc_logic > out_V_last_V_full_n;
    sc_out< sc_logic > out_V_last_V_write;


    // Module declarations
    AddBias(sc_module_name name);
    SC_HAS_PROCESS(AddBias);

    ~AddBias();

    sc_trace_file* mVcdFile;

    AddBias_bias_0* bias_0_U;
    AddBias_bias_1* bias_1_U;
    AddBias_bias_2* bias_2_U;
    AddBias_bias_3* bias_3_U;
    AddBias_bias_4* bias_4_U;
    AddBias_bias_5* bias_5_U;
    AddBias_bias_6* bias_6_U;
    AddBias_bias_7* bias_7_U;
    AddBias_bias_8* bias_8_U;
    AddBias_bias_9* bias_9_U;
    AddBias_bias_10* bias_10_U;
    AddBias_bias_11* bias_11_U;
    AddBias_bias_12* bias_12_U;
    AddBias_bias_13* bias_13_U;
    AddBias_bias_14* bias_14_U;
    AddBias_bias_15* bias_15_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > bias_0_address0;
    sc_signal< sc_logic > bias_0_ce0;
    sc_signal< sc_lv<14> > bias_0_q0;
    sc_signal< sc_lv<6> > bias_1_address0;
    sc_signal< sc_logic > bias_1_ce0;
    sc_signal< sc_lv<14> > bias_1_q0;
    sc_signal< sc_lv<6> > bias_2_address0;
    sc_signal< sc_logic > bias_2_ce0;
    sc_signal< sc_lv<14> > bias_2_q0;
    sc_signal< sc_lv<6> > bias_3_address0;
    sc_signal< sc_logic > bias_3_ce0;
    sc_signal< sc_lv<14> > bias_3_q0;
    sc_signal< sc_lv<6> > bias_4_address0;
    sc_signal< sc_logic > bias_4_ce0;
    sc_signal< sc_lv<14> > bias_4_q0;
    sc_signal< sc_lv<6> > bias_5_address0;
    sc_signal< sc_logic > bias_5_ce0;
    sc_signal< sc_lv<14> > bias_5_q0;
    sc_signal< sc_lv<6> > bias_6_address0;
    sc_signal< sc_logic > bias_6_ce0;
    sc_signal< sc_lv<14> > bias_6_q0;
    sc_signal< sc_lv<6> > bias_7_address0;
    sc_signal< sc_logic > bias_7_ce0;
    sc_signal< sc_lv<14> > bias_7_q0;
    sc_signal< sc_lv<6> > bias_8_address0;
    sc_signal< sc_logic > bias_8_ce0;
    sc_signal< sc_lv<14> > bias_8_q0;
    sc_signal< sc_lv<6> > bias_9_address0;
    sc_signal< sc_logic > bias_9_ce0;
    sc_signal< sc_lv<14> > bias_9_q0;
    sc_signal< sc_lv<6> > bias_10_address0;
    sc_signal< sc_logic > bias_10_ce0;
    sc_signal< sc_lv<14> > bias_10_q0;
    sc_signal< sc_lv<6> > bias_11_address0;
    sc_signal< sc_logic > bias_11_ce0;
    sc_signal< sc_lv<14> > bias_11_q0;
    sc_signal< sc_lv<6> > bias_12_address0;
    sc_signal< sc_logic > bias_12_ce0;
    sc_signal< sc_lv<14> > bias_12_q0;
    sc_signal< sc_lv<6> > bias_13_address0;
    sc_signal< sc_logic > bias_13_ce0;
    sc_signal< sc_lv<14> > bias_13_q0;
    sc_signal< sc_lv<6> > bias_14_address0;
    sc_signal< sc_logic > bias_14_ce0;
    sc_signal< sc_lv<14> > bias_14_q0;
    sc_signal< sc_lv<6> > bias_15_address0;
    sc_signal< sc_logic > bias_15_ce0;
    sc_signal< sc_lv<14> > bias_15_q0;
    sc_signal< sc_logic > in_V_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln525_reg_1004;
    sc_signal< sc_logic > in_V_id_V_blk_n;
    sc_signal< sc_logic > in_V_dest_V_blk_n;
    sc_signal< sc_logic > in_V_user_V_blk_n;
    sc_signal< sc_logic > in_V_last_V_blk_n;
    sc_signal< sc_logic > out_V_data_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln525_reg_1004_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_id_V_blk_n;
    sc_signal< sc_logic > out_V_dest_V_blk_n;
    sc_signal< sc_logic > out_V_user_V_blk_n;
    sc_signal< sc_logic > out_V_last_V_blk_n;
    sc_signal< sc_lv<38> > indvar_flatten_reg_545;
    sc_signal< sc_lv<6> > i_0_reg_556;
    sc_signal< sc_lv<38> > bound_fu_601_p2;
    sc_signal< sc_lv<38> > bound_reg_999;
    sc_signal< sc_logic > io_acc_block_signal_op16;
    sc_signal< sc_logic > io_acc_block_signal_op20;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln525_fu_607_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op33;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op138;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<38> > add_ln525_fu_612_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > select_ln527_fu_624_p3;
    sc_signal< sc_lv<6> > select_ln527_reg_1013;
    sc_signal< sc_lv<32> > trunc_ln647_fu_652_p1;
    sc_signal< sc_lv<32> > trunc_ln647_reg_1018;
    sc_signal< sc_lv<32> > p_Result_1_reg_1028;
    sc_signal< sc_lv<32> > p_Result_2_reg_1038;
    sc_signal< sc_lv<32> > p_Result_3_reg_1048;
    sc_signal< sc_lv<32> > p_Result_4_reg_1058;
    sc_signal< sc_lv<32> > p_Result_5_reg_1068;
    sc_signal< sc_lv<32> > p_Result_6_reg_1078;
    sc_signal< sc_lv<32> > p_Result_7_reg_1088;
    sc_signal< sc_lv<32> > p_Result_8_reg_1098;
    sc_signal< sc_lv<32> > p_Result_9_reg_1108;
    sc_signal< sc_lv<32> > p_Result_s_reg_1118;
    sc_signal< sc_lv<32> > p_Result_10_reg_1128;
    sc_signal< sc_lv<32> > p_Result_11_reg_1138;
    sc_signal< sc_lv<32> > p_Result_12_reg_1148;
    sc_signal< sc_lv<32> > p_Result_13_reg_1158;
    sc_signal< sc_lv<32> > p_Result_14_reg_1168;
    sc_signal< sc_lv<6> > i_fu_806_p2;
    sc_signal< sc_lv<6> > i_reg_1178;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<6> > ap_phi_mux_i_0_phi_fu_560_p4;
    sc_signal< sc_lv<64> > zext_ln533_fu_632_p1;
    sc_signal< sc_lv<512> > out_data_data_V_fu_576_p1;
    sc_signal< sc_lv<512> > tmp_data_V_9_fu_956_p17;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > out_data_last_V_fu_993_p2;
    sc_signal< sc_lv<32> > N_fu_572_p1;
    sc_signal< sc_lv<36> > tmp_1_fu_589_p3;
    sc_signal< sc_lv<38> > p_shl_fu_581_p3;
    sc_signal< sc_lv<38> > p_shl94_fu_597_p1;
    sc_signal< sc_lv<1> > icmp_ln527_fu_618_p2;
    sc_signal< sc_lv<32> > sext_ln215_fu_812_p1;
    sc_signal< sc_lv<32> > sext_ln215_509_fu_821_p1;
    sc_signal< sc_lv<32> > sext_ln215_510_fu_830_p1;
    sc_signal< sc_lv<32> > sext_ln215_511_fu_839_p1;
    sc_signal< sc_lv<32> > sext_ln215_512_fu_848_p1;
    sc_signal< sc_lv<32> > sext_ln215_513_fu_857_p1;
    sc_signal< sc_lv<32> > sext_ln215_514_fu_866_p1;
    sc_signal< sc_lv<32> > sext_ln215_515_fu_875_p1;
    sc_signal< sc_lv<32> > sext_ln215_516_fu_884_p1;
    sc_signal< sc_lv<32> > sext_ln215_517_fu_893_p1;
    sc_signal< sc_lv<32> > sext_ln215_518_fu_902_p1;
    sc_signal< sc_lv<32> > sext_ln215_519_fu_911_p1;
    sc_signal< sc_lv<32> > sext_ln215_520_fu_920_p1;
    sc_signal< sc_lv<32> > sext_ln215_521_fu_929_p1;
    sc_signal< sc_lv<32> > sext_ln215_522_fu_938_p1;
    sc_signal< sc_lv<32> > sext_ln215_523_fu_947_p1;
    sc_signal< sc_lv<32> > add_ln215_15_fu_951_p2;
    sc_signal< sc_lv<32> > add_ln215_14_fu_942_p2;
    sc_signal< sc_lv<32> > add_ln215_13_fu_933_p2;
    sc_signal< sc_lv<32> > add_ln215_12_fu_924_p2;
    sc_signal< sc_lv<32> > add_ln215_11_fu_915_p2;
    sc_signal< sc_lv<32> > add_ln215_10_fu_906_p2;
    sc_signal< sc_lv<32> > add_ln215_9_fu_897_p2;
    sc_signal< sc_lv<32> > add_ln215_8_fu_888_p2;
    sc_signal< sc_lv<32> > add_ln215_7_fu_879_p2;
    sc_signal< sc_lv<32> > add_ln215_6_fu_870_p2;
    sc_signal< sc_lv<32> > add_ln215_5_fu_861_p2;
    sc_signal< sc_lv<32> > add_ln215_4_fu_852_p2;
    sc_signal< sc_lv<32> > add_ln215_3_fu_843_p2;
    sc_signal< sc_lv<32> > add_ln215_2_fu_834_p2;
    sc_signal< sc_lv<32> > add_ln215_1_fu_825_p2;
    sc_signal< sc_lv<32> > add_ln215_fu_816_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<38> ap_const_lv38_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_28;
    static const sc_lv<16> ap_const_lv16_31;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<38> ap_const_lv38_1;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_120;
    static const sc_lv<32> ap_const_lv32_13F;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<32> ap_const_lv32_15F;
    static const sc_lv<32> ap_const_lv32_160;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<32> ap_const_lv32_1A0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_2F;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_N_fu_572_p1();
    void thread_add_ln215_10_fu_906_p2();
    void thread_add_ln215_11_fu_915_p2();
    void thread_add_ln215_12_fu_924_p2();
    void thread_add_ln215_13_fu_933_p2();
    void thread_add_ln215_14_fu_942_p2();
    void thread_add_ln215_15_fu_951_p2();
    void thread_add_ln215_1_fu_825_p2();
    void thread_add_ln215_2_fu_834_p2();
    void thread_add_ln215_3_fu_843_p2();
    void thread_add_ln215_4_fu_852_p2();
    void thread_add_ln215_5_fu_861_p2();
    void thread_add_ln215_6_fu_870_p2();
    void thread_add_ln215_7_fu_879_p2();
    void thread_add_ln215_8_fu_888_p2();
    void thread_add_ln215_9_fu_897_p2();
    void thread_add_ln215_fu_816_p2();
    void thread_add_ln525_fu_612_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_560_p4();
    void thread_ap_ready();
    void thread_bias_0_address0();
    void thread_bias_0_ce0();
    void thread_bias_10_address0();
    void thread_bias_10_ce0();
    void thread_bias_11_address0();
    void thread_bias_11_ce0();
    void thread_bias_12_address0();
    void thread_bias_12_ce0();
    void thread_bias_13_address0();
    void thread_bias_13_ce0();
    void thread_bias_14_address0();
    void thread_bias_14_ce0();
    void thread_bias_15_address0();
    void thread_bias_15_ce0();
    void thread_bias_1_address0();
    void thread_bias_1_ce0();
    void thread_bias_2_address0();
    void thread_bias_2_ce0();
    void thread_bias_3_address0();
    void thread_bias_3_ce0();
    void thread_bias_4_address0();
    void thread_bias_4_ce0();
    void thread_bias_5_address0();
    void thread_bias_5_ce0();
    void thread_bias_6_address0();
    void thread_bias_6_ce0();
    void thread_bias_7_address0();
    void thread_bias_7_ce0();
    void thread_bias_8_address0();
    void thread_bias_8_ce0();
    void thread_bias_9_address0();
    void thread_bias_9_ce0();
    void thread_bound_fu_601_p2();
    void thread_i_fu_806_p2();
    void thread_icmp_ln525_fu_607_p2();
    void thread_icmp_ln527_fu_618_p2();
    void thread_in_V_data_V_blk_n();
    void thread_in_V_data_V_read();
    void thread_in_V_dest_V_blk_n();
    void thread_in_V_dest_V_read();
    void thread_in_V_id_V_blk_n();
    void thread_in_V_id_V_read();
    void thread_in_V_last_V_blk_n();
    void thread_in_V_last_V_read();
    void thread_in_V_user_V_blk_n();
    void thread_in_V_user_V_read();
    void thread_io_acc_block_signal_op138();
    void thread_io_acc_block_signal_op16();
    void thread_io_acc_block_signal_op20();
    void thread_io_acc_block_signal_op33();
    void thread_out_V_data_V_blk_n();
    void thread_out_V_data_V_din();
    void thread_out_V_data_V_write();
    void thread_out_V_dest_V_blk_n();
    void thread_out_V_dest_V_din();
    void thread_out_V_dest_V_write();
    void thread_out_V_id_V_blk_n();
    void thread_out_V_id_V_din();
    void thread_out_V_id_V_write();
    void thread_out_V_last_V_blk_n();
    void thread_out_V_last_V_din();
    void thread_out_V_last_V_write();
    void thread_out_V_user_V_blk_n();
    void thread_out_V_user_V_din();
    void thread_out_V_user_V_write();
    void thread_out_data_data_V_fu_576_p1();
    void thread_out_data_last_V_fu_993_p2();
    void thread_p_shl94_fu_597_p1();
    void thread_p_shl_fu_581_p3();
    void thread_select_ln527_fu_624_p3();
    void thread_sext_ln215_509_fu_821_p1();
    void thread_sext_ln215_510_fu_830_p1();
    void thread_sext_ln215_511_fu_839_p1();
    void thread_sext_ln215_512_fu_848_p1();
    void thread_sext_ln215_513_fu_857_p1();
    void thread_sext_ln215_514_fu_866_p1();
    void thread_sext_ln215_515_fu_875_p1();
    void thread_sext_ln215_516_fu_884_p1();
    void thread_sext_ln215_517_fu_893_p1();
    void thread_sext_ln215_518_fu_902_p1();
    void thread_sext_ln215_519_fu_911_p1();
    void thread_sext_ln215_520_fu_920_p1();
    void thread_sext_ln215_521_fu_929_p1();
    void thread_sext_ln215_522_fu_938_p1();
    void thread_sext_ln215_523_fu_947_p1();
    void thread_sext_ln215_fu_812_p1();
    void thread_tmp_1_fu_589_p3();
    void thread_tmp_data_V_9_fu_956_p17();
    void thread_trunc_ln647_fu_652_p1();
    void thread_zext_ln533_fu_632_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
