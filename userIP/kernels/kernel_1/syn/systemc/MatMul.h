// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _MatMul_HH_
#define _MatMul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ReadB.h"
#include "TILE125.h"
#include "ConvertWidthC.h"
#include "WriteC126.h"
#include "fifo_w256_d2_A_x.h"
#include "fifo_w32_d2_A_x.h"
#include "fifo_w64_d2_A.h"
#include "start_for_TILE125_U0.h"
#include "start_for_ConvertWidthC_U0.h"
#include "start_for_WriteC126_U0.h"

namespace ap_rtl {

struct MatMul : public sc_module {
    // Port declarations 32
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<512> > in_r_TDATA;
    sc_in< sc_lv<8> > in_r_TID;
    sc_in< sc_lv<8> > in_r_TDEST;
    sc_in< sc_lv<16> > in_r_TUSER;
    sc_in< sc_lv<1> > in_r_TLAST;
    sc_out< sc_lv<512> > c_V_data_V_din;
    sc_in< sc_logic > c_V_data_V_full_n;
    sc_out< sc_logic > c_V_data_V_write;
    sc_out< sc_lv<8> > c_V_id_V_din;
    sc_in< sc_logic > c_V_id_V_full_n;
    sc_out< sc_logic > c_V_id_V_write;
    sc_out< sc_lv<8> > c_V_dest_V_din;
    sc_in< sc_logic > c_V_dest_V_full_n;
    sc_out< sc_logic > c_V_dest_V_write;
    sc_out< sc_lv<16> > c_V_user_V_din;
    sc_in< sc_logic > c_V_user_V_full_n;
    sc_out< sc_logic > c_V_user_V_write;
    sc_out< sc_lv<1> > c_V_last_V_din;
    sc_in< sc_logic > c_V_last_V_full_n;
    sc_out< sc_logic > c_V_last_V_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > in_r_TVALID;
    sc_out< sc_logic > in_r_TREADY;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    MatMul(sc_module_name name);
    SC_HAS_PROCESS(MatMul);

    ~MatMul();

    sc_trace_file* mVcdFile;

    ReadB* ReadB_U0;
    TILE125* TILE125_U0;
    ConvertWidthC* ConvertWidthC_U0;
    WriteC126* WriteC126_U0;
    fifo_w256_d2_A_x* b_pipes_1_0_V_V_U;
    fifo_w256_d2_A_x* b_pipes_2_0_V_V_U;
    fifo_w32_d2_A_x* N_pipes_0_V_V_U;
    fifo_w32_d2_A_x* N_pipes_1_V_V_U;
    fifo_w32_d2_A_x* N_pipes_2_V_V_U;
    fifo_w32_d2_A_x* c_pipes_0_0_V_V_U;
    fifo_w32_d2_A_x* c_pipes_0_1_V_V_U;
    fifo_w64_d2_A* conv_pipe_V_V_U;
    start_for_TILE125_U0* start_for_TILE125_U0_U;
    start_for_ConvertWidthC_U0* start_for_ConvertWidthC_U0_U;
    start_for_WriteC126_U0* start_for_WriteC126_U0_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > ReadB_U0_ap_start;
    sc_signal< sc_logic > ReadB_U0_start_full_n;
    sc_signal< sc_logic > ReadB_U0_ap_done;
    sc_signal< sc_logic > ReadB_U0_ap_continue;
    sc_signal< sc_logic > ReadB_U0_ap_idle;
    sc_signal< sc_logic > ReadB_U0_ap_ready;
    sc_signal< sc_logic > ReadB_U0_start_out;
    sc_signal< sc_logic > ReadB_U0_start_write;
    sc_signal< sc_logic > ReadB_U0_in_r_TREADY;
    sc_signal< sc_lv<256> > ReadB_U0_b_pipes_1_V_V_din;
    sc_signal< sc_logic > ReadB_U0_b_pipes_1_V_V_write;
    sc_signal< sc_lv<256> > ReadB_U0_b_pipes_2_V_V_din;
    sc_signal< sc_logic > ReadB_U0_b_pipes_2_V_V_write;
    sc_signal< sc_lv<32> > ReadB_U0_N_pipes_0_V_V_din;
    sc_signal< sc_logic > ReadB_U0_N_pipes_0_V_V_write;
    sc_signal< sc_lv<32> > ReadB_U0_N_pipes_1_V_V_din;
    sc_signal< sc_logic > ReadB_U0_N_pipes_1_V_V_write;
    sc_signal< sc_lv<32> > ReadB_U0_N_pipes_2_V_V_din;
    sc_signal< sc_logic > ReadB_U0_N_pipes_2_V_V_write;
    sc_signal< sc_logic > TILE125_U0_N_in_V_V2_read;
    sc_signal< sc_logic > TILE125_U0_b_in_1_V_V_read;
    sc_signal< sc_logic > TILE125_U0_b_in_2_V_V_read;
    sc_signal< sc_lv<32> > TILE125_U0_c_out_1_V_V_din;
    sc_signal< sc_logic > TILE125_U0_c_out_1_V_V_write;
    sc_signal< sc_lv<32> > TILE125_U0_c_out_2_V_V7_din;
    sc_signal< sc_logic > TILE125_U0_c_out_2_V_V7_write;
    sc_signal< sc_logic > TILE125_U0_ap_start;
    sc_signal< sc_logic > TILE125_U0_ap_done;
    sc_signal< sc_logic > TILE125_U0_ap_ready;
    sc_signal< sc_logic > TILE125_U0_ap_idle;
    sc_signal< sc_logic > TILE125_U0_ap_continue;
    sc_signal< sc_logic > ConvertWidthC_U0_ap_start;
    sc_signal< sc_logic > ConvertWidthC_U0_ap_done;
    sc_signal< sc_logic > ConvertWidthC_U0_ap_continue;
    sc_signal< sc_logic > ConvertWidthC_U0_ap_idle;
    sc_signal< sc_logic > ConvertWidthC_U0_ap_ready;
    sc_signal< sc_logic > ConvertWidthC_U0_N_pipe_0_V_V_read;
    sc_signal< sc_logic > ConvertWidthC_U0_c_pipes_0_V_V_read;
    sc_signal< sc_logic > ConvertWidthC_U0_c_pipes_1_V_V_read;
    sc_signal< sc_lv<64> > ConvertWidthC_U0_out_V_V_din;
    sc_signal< sc_logic > ConvertWidthC_U0_out_V_V_write;
    sc_signal< sc_logic > WriteC126_U0_ap_start;
    sc_signal< sc_logic > WriteC126_U0_ap_done;
    sc_signal< sc_logic > WriteC126_U0_ap_continue;
    sc_signal< sc_logic > WriteC126_U0_ap_idle;
    sc_signal< sc_logic > WriteC126_U0_ap_ready;
    sc_signal< sc_logic > WriteC126_U0_N_pipe_V_V1_read;
    sc_signal< sc_logic > WriteC126_U0_in_V_V_read;
    sc_signal< sc_lv<512> > WriteC126_U0_out_V_data_V_din;
    sc_signal< sc_logic > WriteC126_U0_out_V_data_V_write;
    sc_signal< sc_lv<8> > WriteC126_U0_out_V_id_V_din;
    sc_signal< sc_logic > WriteC126_U0_out_V_id_V_write;
    sc_signal< sc_lv<8> > WriteC126_U0_out_V_dest_V_din;
    sc_signal< sc_logic > WriteC126_U0_out_V_dest_V_write;
    sc_signal< sc_lv<16> > WriteC126_U0_out_V_user_V_din;
    sc_signal< sc_logic > WriteC126_U0_out_V_user_V_write;
    sc_signal< sc_lv<1> > WriteC126_U0_out_V_last_V_din;
    sc_signal< sc_logic > WriteC126_U0_out_V_last_V_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > b_pipes_1_0_V_V_full_n;
    sc_signal< sc_lv<256> > b_pipes_1_0_V_V_dout;
    sc_signal< sc_logic > b_pipes_1_0_V_V_empty_n;
    sc_signal< sc_logic > b_pipes_2_0_V_V_full_n;
    sc_signal< sc_lv<256> > b_pipes_2_0_V_V_dout;
    sc_signal< sc_logic > b_pipes_2_0_V_V_empty_n;
    sc_signal< sc_logic > N_pipes_0_V_V_full_n;
    sc_signal< sc_lv<32> > N_pipes_0_V_V_dout;
    sc_signal< sc_logic > N_pipes_0_V_V_empty_n;
    sc_signal< sc_logic > N_pipes_1_V_V_full_n;
    sc_signal< sc_lv<32> > N_pipes_1_V_V_dout;
    sc_signal< sc_logic > N_pipes_1_V_V_empty_n;
    sc_signal< sc_logic > N_pipes_2_V_V_full_n;
    sc_signal< sc_lv<32> > N_pipes_2_V_V_dout;
    sc_signal< sc_logic > N_pipes_2_V_V_empty_n;
    sc_signal< sc_logic > c_pipes_0_0_V_V_full_n;
    sc_signal< sc_lv<32> > c_pipes_0_0_V_V_dout;
    sc_signal< sc_logic > c_pipes_0_0_V_V_empty_n;
    sc_signal< sc_logic > c_pipes_0_1_V_V_full_n;
    sc_signal< sc_lv<32> > c_pipes_0_1_V_V_dout;
    sc_signal< sc_logic > c_pipes_0_1_V_V_empty_n;
    sc_signal< sc_logic > conv_pipe_V_V_full_n;
    sc_signal< sc_lv<64> > conv_pipe_V_V_dout;
    sc_signal< sc_logic > conv_pipe_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_TILE125_U0_din;
    sc_signal< sc_logic > start_for_TILE125_U0_full_n;
    sc_signal< sc_lv<1> > start_for_TILE125_U0_dout;
    sc_signal< sc_logic > start_for_TILE125_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_ConvertWidthC_U0_din;
    sc_signal< sc_logic > start_for_ConvertWidthC_U0_full_n;
    sc_signal< sc_lv<1> > start_for_ConvertWidthC_U0_dout;
    sc_signal< sc_logic > start_for_ConvertWidthC_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_WriteC126_U0_din;
    sc_signal< sc_logic > start_for_WriteC126_U0_full_n;
    sc_signal< sc_lv<1> > start_for_WriteC126_U0_dout;
    sc_signal< sc_logic > start_for_WriteC126_U0_empty_n;
    sc_signal< sc_logic > TILE125_U0_start_full_n;
    sc_signal< sc_logic > TILE125_U0_start_write;
    sc_signal< sc_logic > ConvertWidthC_U0_start_full_n;
    sc_signal< sc_logic > ConvertWidthC_U0_start_write;
    sc_signal< sc_logic > WriteC126_U0_start_full_n;
    sc_signal< sc_logic > WriteC126_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<512> ap_const_lv512_lc_2;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<1> ap_const_lv1_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ConvertWidthC_U0_ap_continue();
    void thread_ConvertWidthC_U0_ap_start();
    void thread_ConvertWidthC_U0_start_full_n();
    void thread_ConvertWidthC_U0_start_write();
    void thread_ReadB_U0_ap_continue();
    void thread_ReadB_U0_ap_start();
    void thread_ReadB_U0_start_full_n();
    void thread_TILE125_U0_ap_continue();
    void thread_TILE125_U0_ap_start();
    void thread_TILE125_U0_start_full_n();
    void thread_TILE125_U0_start_write();
    void thread_WriteC126_U0_ap_continue();
    void thread_WriteC126_U0_ap_start();
    void thread_WriteC126_U0_start_full_n();
    void thread_WriteC126_U0_start_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_c_V_data_V_din();
    void thread_c_V_data_V_write();
    void thread_c_V_dest_V_din();
    void thread_c_V_dest_V_write();
    void thread_c_V_id_V_din();
    void thread_c_V_id_V_write();
    void thread_c_V_last_V_din();
    void thread_c_V_last_V_write();
    void thread_c_V_user_V_din();
    void thread_c_V_user_V_write();
    void thread_in_r_TREADY();
    void thread_internal_ap_ready();
    void thread_real_start();
    void thread_start_for_ConvertWidthC_U0_din();
    void thread_start_for_TILE125_U0_din();
    void thread_start_for_WriteC126_U0_din();
    void thread_start_out();
    void thread_start_write();
};

}

using namespace ap_rtl;

#endif
