// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _WriteC126_HH_
#define _WriteC126_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct WriteC126 : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > N_pipe_V_V1_dout;
    sc_in< sc_logic > N_pipe_V_V1_empty_n;
    sc_out< sc_logic > N_pipe_V_V1_read;
    sc_in< sc_lv<64> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<512> > out_V_data_V_din;
    sc_in< sc_logic > out_V_data_V_full_n;
    sc_out< sc_logic > out_V_data_V_write;
    sc_out< sc_lv<8> > out_V_id_V_din;
    sc_in< sc_logic > out_V_id_V_full_n;
    sc_out< sc_logic > out_V_id_V_write;
    sc_out< sc_lv<8> > out_V_dest_V_din;
    sc_in< sc_logic > out_V_dest_V_full_n;
    sc_out< sc_logic > out_V_dest_V_write;
    sc_out< sc_lv<16> > out_V_user_V_din;
    sc_in< sc_logic > out_V_user_V_full_n;
    sc_out< sc_logic > out_V_user_V_write;
    sc_out< sc_lv<1> > out_V_last_V_din;
    sc_in< sc_logic > out_V_last_V_full_n;
    sc_out< sc_logic > out_V_last_V_write;


    // Module declarations
    WriteC126(sc_module_name name);
    SC_HAS_PROCESS(WriteC126);

    ~WriteC126();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > N_pipe_V_V1_blk_n;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln437_reg_639;
    sc_signal< sc_logic > out_V_data_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln440_1_reg_686;
    sc_signal< sc_logic > out_V_id_V_blk_n;
    sc_signal< sc_logic > out_V_dest_V_blk_n;
    sc_signal< sc_logic > out_V_user_V_blk_n;
    sc_signal< sc_logic > out_V_last_V_blk_n;
    sc_signal< sc_lv<41> > indvar_flatten13_reg_225;
    sc_signal< sc_lv<32> > i_0_reg_236;
    sc_signal< sc_lv<10> > indvar_flatten_reg_247;
    sc_signal< sc_lv<6> > n_0_reg_258;
    sc_signal< sc_lv<512> > tmp_data_V_1_reg_269;
    sc_signal< sc_lv<4> > j_0_reg_279;
    sc_signal< sc_lv<512> > out_data_data_V_fu_290_p1;
    sc_signal< sc_logic > io_acc_block_signal_op15;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<41> > bound4_fu_315_p2;
    sc_signal< sc_lv<41> > bound4_reg_634;
    sc_signal< sc_lv<1> > icmp_ln437_fu_335_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op84;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln437_reg_639_pp0_iter1_reg;
    sc_signal< sc_lv<41> > add_ln437_fu_340_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > tmp_user_V_1_fu_380_p3;
    sc_signal< sc_lv<5> > tmp_user_V_1_reg_648;
    sc_signal< sc_lv<5> > tmp_user_V_1_reg_648_pp0_iter1_reg;
    sc_signal< sc_lv<32> > select_ln437_fu_406_p3;
    sc_signal< sc_lv<6> > select_ln439_fu_434_p3;
    sc_signal< sc_lv<6> > select_ln439_reg_658;
    sc_signal< sc_lv<3> > trunc_ln442_fu_442_p1;
    sc_signal< sc_lv<3> > trunc_ln442_reg_664;
    sc_signal< sc_lv<4> > j_fu_446_p2;
    sc_signal< sc_lv<4> > j_reg_669;
    sc_signal< sc_lv<10> > select_ln439_1_fu_458_p3;
    sc_signal< sc_lv<512> > tmp_data_V_2_fu_605_p2;
    sc_signal< sc_lv<512> > tmp_data_V_2_reg_680;
    sc_signal< sc_lv<1> > icmp_ln440_1_fu_611_p2;
    sc_signal< sc_lv<1> > out_data_last_V_fu_616_p2;
    sc_signal< sc_lv<1> > out_data_last_V_reg_690;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<6> > ap_phi_mux_n_0_phi_fu_262_p4;
    sc_signal< sc_lv<512> > ap_phi_mux_tmp_data_V_1_phi_fu_272_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_j_0_phi_fu_283_p4;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<16> > zext_ln448_fu_624_p1;
    sc_signal< sc_lv<39> > tmp_fu_303_p3;
    sc_signal< sc_lv<41> > p_shl_fu_295_p3;
    sc_signal< sc_lv<41> > p_shl16_fu_311_p1;
    sc_signal< sc_lv<1> > icmp_ln448_fu_321_p2;
    sc_signal< sc_lv<1> > icmp_ln439_fu_346_p2;
    sc_signal< sc_lv<32> > add_ln437_1_fu_360_p2;
    sc_signal< sc_lv<1> > icmp_ln448_1_fu_366_p2;
    sc_signal< sc_lv<5> > select_ln302_1_fu_372_p3;
    sc_signal< sc_lv<5> > tmp_user_V_fu_327_p3;
    sc_signal< sc_lv<1> > icmp_ln440_fu_394_p2;
    sc_signal< sc_lv<1> > xor_ln448_fu_388_p2;
    sc_signal< sc_lv<6> > select_ln448_fu_352_p3;
    sc_signal< sc_lv<1> > and_ln448_fu_400_p2;
    sc_signal< sc_lv<1> > or_ln440_fu_420_p2;
    sc_signal< sc_lv<6> > n_fu_414_p2;
    sc_signal< sc_lv<4> > select_ln440_fu_426_p3;
    sc_signal< sc_lv<10> > add_ln439_fu_452_p2;
    sc_signal< sc_lv<9> > Lo_assign_fu_466_p3;
    sc_signal< sc_lv<9> > or_ln442_fu_473_p2;
    sc_signal< sc_lv<10> > zext_ln414_fu_489_p1;
    sc_signal< sc_lv<1> > icmp_ln414_fu_483_p2;
    sc_signal< sc_lv<10> > zext_ln414_1_fu_493_p1;
    sc_signal< sc_lv<10> > xor_ln414_fu_497_p2;
    sc_signal< sc_lv<10> > select_ln414_fu_503_p3;
    sc_signal< sc_lv<10> > select_ln414_2_fu_519_p3;
    sc_signal< sc_lv<10> > select_ln414_1_fu_511_p3;
    sc_signal< sc_lv<10> > xor_ln414_1_fu_527_p2;
    sc_signal< sc_lv<512> > tmp_V_3_fu_479_p1;
    sc_signal< sc_lv<512> > zext_ln414_2_fu_533_p1;
    sc_signal< sc_lv<512> > shl_ln414_fu_545_p2;
    sc_signal< sc_lv<512> > tmp_2_fu_551_p4;
    sc_signal< sc_lv<512> > zext_ln414_3_fu_537_p1;
    sc_signal< sc_lv<512> > zext_ln414_4_fu_541_p1;
    sc_signal< sc_lv<512> > shl_ln414_1_fu_569_p2;
    sc_signal< sc_lv<512> > lshr_ln414_fu_575_p2;
    sc_signal< sc_lv<512> > and_ln414_fu_581_p2;
    sc_signal< sc_lv<512> > xor_ln414_2_fu_587_p2;
    sc_signal< sc_lv<512> > select_ln414_3_fu_561_p3;
    sc_signal< sc_lv<512> > and_ln414_1_fu_593_p2;
    sc_signal< sc_lv<512> > and_ln414_2_fu_599_p2;
    sc_signal< sc_lv<6> > sext_ln448_fu_621_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<41> ap_const_lv41_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_28;
    static const sc_lv<16> ap_const_lv16_31;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<41> ap_const_lv41_1;
    static const sc_lv<10> ap_const_lv10_180;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<9> ap_const_lv9_3F;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<6> ap_const_lv6_2F;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Lo_assign_fu_466_p3();
    void thread_N_pipe_V_V1_blk_n();
    void thread_N_pipe_V_V1_read();
    void thread_add_ln437_1_fu_360_p2();
    void thread_add_ln437_fu_340_p2();
    void thread_add_ln439_fu_452_p2();
    void thread_and_ln414_1_fu_593_p2();
    void thread_and_ln414_2_fu_599_p2();
    void thread_and_ln414_fu_581_p2();
    void thread_and_ln448_fu_400_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_j_0_phi_fu_283_p4();
    void thread_ap_phi_mux_n_0_phi_fu_262_p4();
    void thread_ap_phi_mux_tmp_data_V_1_phi_fu_272_p4();
    void thread_ap_ready();
    void thread_bound4_fu_315_p2();
    void thread_icmp_ln414_fu_483_p2();
    void thread_icmp_ln437_fu_335_p2();
    void thread_icmp_ln439_fu_346_p2();
    void thread_icmp_ln440_1_fu_611_p2();
    void thread_icmp_ln440_fu_394_p2();
    void thread_icmp_ln448_1_fu_366_p2();
    void thread_icmp_ln448_fu_321_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_io_acc_block_signal_op15();
    void thread_io_acc_block_signal_op84();
    void thread_j_fu_446_p2();
    void thread_lshr_ln414_fu_575_p2();
    void thread_n_fu_414_p2();
    void thread_or_ln440_fu_420_p2();
    void thread_or_ln442_fu_473_p2();
    void thread_out_V_data_V_blk_n();
    void thread_out_V_data_V_din();
    void thread_out_V_data_V_write();
    void thread_out_V_dest_V_blk_n();
    void thread_out_V_dest_V_din();
    void thread_out_V_dest_V_write();
    void thread_out_V_id_V_blk_n();
    void thread_out_V_id_V_din();
    void thread_out_V_id_V_write();
    void thread_out_V_last_V_blk_n();
    void thread_out_V_last_V_din();
    void thread_out_V_last_V_write();
    void thread_out_V_user_V_blk_n();
    void thread_out_V_user_V_din();
    void thread_out_V_user_V_write();
    void thread_out_data_data_V_fu_290_p1();
    void thread_out_data_last_V_fu_616_p2();
    void thread_p_shl16_fu_311_p1();
    void thread_p_shl_fu_295_p3();
    void thread_select_ln302_1_fu_372_p3();
    void thread_select_ln414_1_fu_511_p3();
    void thread_select_ln414_2_fu_519_p3();
    void thread_select_ln414_3_fu_561_p3();
    void thread_select_ln414_fu_503_p3();
    void thread_select_ln437_fu_406_p3();
    void thread_select_ln439_1_fu_458_p3();
    void thread_select_ln439_fu_434_p3();
    void thread_select_ln440_fu_426_p3();
    void thread_select_ln448_fu_352_p3();
    void thread_sext_ln448_fu_621_p1();
    void thread_shl_ln414_1_fu_569_p2();
    void thread_shl_ln414_fu_545_p2();
    void thread_tmp_2_fu_551_p4();
    void thread_tmp_V_3_fu_479_p1();
    void thread_tmp_data_V_2_fu_605_p2();
    void thread_tmp_fu_303_p3();
    void thread_tmp_user_V_1_fu_380_p3();
    void thread_tmp_user_V_fu_327_p3();
    void thread_trunc_ln442_fu_442_p1();
    void thread_xor_ln414_1_fu_527_p2();
    void thread_xor_ln414_2_fu_587_p2();
    void thread_xor_ln414_fu_497_p2();
    void thread_xor_ln448_fu_388_p2();
    void thread_zext_ln414_1_fu_493_p1();
    void thread_zext_ln414_2_fu_533_p1();
    void thread_zext_ln414_3_fu_537_p1();
    void thread_zext_ln414_4_fu_541_p1();
    void thread_zext_ln414_fu_489_p1();
    void thread_zext_ln448_fu_624_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
