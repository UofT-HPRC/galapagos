// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module udpAppMux_appMuxRxPath (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxDataIn_V_data_V_dout,
        rxDataIn_V_data_V_empty_n,
        rxDataIn_V_data_V_read,
        rxDataIn_V_keep_V_dout,
        rxDataIn_V_keep_V_empty_n,
        rxDataIn_V_keep_V_read,
        rxDataIn_V_last_V_dout,
        rxDataIn_V_last_V_empty_n,
        rxDataIn_V_last_V_read,
        rxMetadataIn_V_dout,
        rxMetadataIn_V_empty_n,
        rxMetadataIn_V_read,
        rxDataOutDhcp_V_data_V_din,
        rxDataOutDhcp_V_data_V_full_n,
        rxDataOutDhcp_V_data_V_write,
        rxDataOutDhcp_V_keep_V_din,
        rxDataOutDhcp_V_keep_V_full_n,
        rxDataOutDhcp_V_keep_V_write,
        rxDataOutDhcp_V_last_V_din,
        rxDataOutDhcp_V_last_V_full_n,
        rxDataOutDhcp_V_last_V_write,
        rxMetadataOutDhcp_V_din,
        rxMetadataOutDhcp_V_full_n,
        rxMetadataOutDhcp_V_write,
        rxDataOutApp_V_data_V_din,
        rxDataOutApp_V_data_V_full_n,
        rxDataOutApp_V_data_V_write,
        rxDataOutApp_V_keep_V_din,
        rxDataOutApp_V_keep_V_full_n,
        rxDataOutApp_V_keep_V_write,
        rxDataOutApp_V_last_V_din,
        rxDataOutApp_V_last_V_full_n,
        rxDataOutApp_V_last_V_write,
        rxMetadataOutApp_V_din,
        rxMetadataOutApp_V_full_n,
        rxMetadataOutApp_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv16_44 = 16'b1000100;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] rxDataIn_V_data_V_dout;
input   rxDataIn_V_data_V_empty_n;
output   rxDataIn_V_data_V_read;
input  [7:0] rxDataIn_V_keep_V_dout;
input   rxDataIn_V_keep_V_empty_n;
output   rxDataIn_V_keep_V_read;
input  [0:0] rxDataIn_V_last_V_dout;
input   rxDataIn_V_last_V_empty_n;
output   rxDataIn_V_last_V_read;
input  [95:0] rxMetadataIn_V_dout;
input   rxMetadataIn_V_empty_n;
output   rxMetadataIn_V_read;
output  [63:0] rxDataOutDhcp_V_data_V_din;
input   rxDataOutDhcp_V_data_V_full_n;
output   rxDataOutDhcp_V_data_V_write;
output  [7:0] rxDataOutDhcp_V_keep_V_din;
input   rxDataOutDhcp_V_keep_V_full_n;
output   rxDataOutDhcp_V_keep_V_write;
output  [0:0] rxDataOutDhcp_V_last_V_din;
input   rxDataOutDhcp_V_last_V_full_n;
output   rxDataOutDhcp_V_last_V_write;
output  [95:0] rxMetadataOutDhcp_V_din;
input   rxMetadataOutDhcp_V_full_n;
output   rxMetadataOutDhcp_V_write;
output  [63:0] rxDataOutApp_V_data_V_din;
input   rxDataOutApp_V_data_V_full_n;
output   rxDataOutApp_V_data_V_write;
output  [7:0] rxDataOutApp_V_keep_V_din;
input   rxDataOutApp_V_keep_V_full_n;
output   rxDataOutApp_V_keep_V_write;
output  [0:0] rxDataOutApp_V_last_V_din;
input   rxDataOutApp_V_last_V_full_n;
output   rxDataOutApp_V_last_V_write;
output  [95:0] rxMetadataOutApp_V_din;
input   rxMetadataOutApp_V_full_n;
output   rxMetadataOutApp_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxMetadataIn_V_read;
reg rxMetadataOutDhcp_V_write;
reg rxMetadataOutApp_V_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_20;
reg   [1:0] shimState = 2'b00;
reg   [0:0] streamSourceRx_V = 1'b0;
reg   [0:0] storemerge_phi_fu_294_p4;
wire    rxDataIn_V_data_V0_status;
wire   [0:0] grp_nbreadreq_fu_182_p5;
wire   [0:0] grp_nbwritereq_fu_194_p5;
wire    rxDataOutDhcp_V_data_V1_status;
wire   [0:0] grp_nbwritereq_fu_229_p5;
wire    rxDataOutApp_V_data_V1_status;
wire   [0:0] tmp_nbreadreq_fu_254_p3;
wire   [0:0] tmp_1_nbwritereq_fu_262_p3;
wire   [0:0] tmp_6_fu_359_p2;
reg    ap_sig_bdd_157;
reg    rxDataIn_V_data_V0_update;
reg    rxDataOutDhcp_V_data_V1_update;
wire   [0:0] grp_fu_315_p1;
reg    rxDataOutApp_V_data_V1_update;
wire   [1:0] grp_fu_327_p3;
wire   [15:0] tmp_destinationSocket_port_V_fu_349_p4;
wire   [31:0] tmp_destinationSocket_addr_V_fu_365_p4;
wire   [47:0] tmp_10_fu_375_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_bdd_266;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_157)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// shimState assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_shimState
    if (ap_rst == 1'b1) begin
        shimState <= ap_const_lv2_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3) & ~ap_sig_bdd_157)) begin
            shimState <= ap_const_lv2_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & (shimState == ap_const_lv2_1) & ~ap_sig_bdd_157) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & (shimState == ap_const_lv2_1) & ~ap_sig_bdd_157))) begin
            shimState <= grp_fu_327_p3;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & ~ap_sig_bdd_157 & ~(ap_const_lv1_0 == grp_fu_315_p1)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & ~ap_sig_bdd_157 & ~(ap_const_lv1_0 == grp_fu_315_p1)))) begin
            shimState <= ap_const_lv2_0;
        end
    end
end

/// streamSourceRx_V assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_streamSourceRx_V
    if (ap_rst == 1'b1) begin
        streamSourceRx_V <= ap_const_lv1_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3) & ~ap_sig_bdd_157)) begin
            streamSourceRx_V <= storemerge_phi_fu_294_p4;
        end
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_157)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_157))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_157)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_157)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_20)
begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// rxDataIn_V_data_V0_update assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or shimState or streamSourceRx_V or grp_nbreadreq_fu_182_p5 or grp_nbwritereq_fu_194_p5 or grp_nbwritereq_fu_229_p5 or ap_sig_bdd_157)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & ~ap_sig_bdd_157) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & ~ap_sig_bdd_157) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & (shimState == ap_const_lv2_1) & ~ap_sig_bdd_157) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & (shimState == ap_const_lv2_1) & ~ap_sig_bdd_157))) begin
        rxDataIn_V_data_V0_update = ap_const_logic_1;
    end else begin
        rxDataIn_V_data_V0_update = ap_const_logic_0;
    end
end

/// rxDataOutApp_V_data_V1_update assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or shimState or streamSourceRx_V or grp_nbreadreq_fu_182_p5 or grp_nbwritereq_fu_229_p5 or ap_sig_bdd_157)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & ~ap_sig_bdd_157) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & (shimState == ap_const_lv2_1) & ~ap_sig_bdd_157))) begin
        rxDataOutApp_V_data_V1_update = ap_const_logic_1;
    end else begin
        rxDataOutApp_V_data_V1_update = ap_const_logic_0;
    end
end

/// rxDataOutDhcp_V_data_V1_update assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or shimState or streamSourceRx_V or grp_nbreadreq_fu_182_p5 or grp_nbwritereq_fu_194_p5 or ap_sig_bdd_157)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & ~ap_sig_bdd_157) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & (shimState == ap_const_lv2_1) & ~ap_sig_bdd_157))) begin
        rxDataOutDhcp_V_data_V1_update = ap_const_logic_1;
    end else begin
        rxDataOutDhcp_V_data_V1_update = ap_const_logic_0;
    end
end

/// rxMetadataIn_V_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or shimState or tmp_nbreadreq_fu_254_p3 or tmp_1_nbwritereq_fu_262_p3 or ap_sig_bdd_157)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3) & ~ap_sig_bdd_157)) begin
        rxMetadataIn_V_read = ap_const_logic_1;
    end else begin
        rxMetadataIn_V_read = ap_const_logic_0;
    end
end

/// rxMetadataOutApp_V_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or shimState or tmp_nbreadreq_fu_254_p3 or tmp_1_nbwritereq_fu_262_p3 or tmp_6_fu_359_p2 or ap_sig_bdd_157)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3) & (ap_const_lv1_0 == tmp_6_fu_359_p2) & ~ap_sig_bdd_157)) begin
        rxMetadataOutApp_V_write = ap_const_logic_1;
    end else begin
        rxMetadataOutApp_V_write = ap_const_logic_0;
    end
end

/// rxMetadataOutDhcp_V_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or shimState or tmp_nbreadreq_fu_254_p3 or tmp_1_nbwritereq_fu_262_p3 or tmp_6_fu_359_p2 or ap_sig_bdd_157)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3) & ~(ap_const_lv1_0 == tmp_6_fu_359_p2) & ~ap_sig_bdd_157)) begin
        rxMetadataOutDhcp_V_write = ap_const_logic_1;
    end else begin
        rxMetadataOutDhcp_V_write = ap_const_logic_0;
    end
end

/// storemerge_phi_fu_294_p4 assign process. ///
always @ (tmp_6_fu_359_p2 or ap_sig_bdd_266)
begin
    if (ap_sig_bdd_266) begin
        if (~(ap_const_lv1_0 == tmp_6_fu_359_p2)) begin
            storemerge_phi_fu_294_p4 = ap_const_lv1_0;
        end else if ((ap_const_lv1_0 == tmp_6_fu_359_p2)) begin
            storemerge_phi_fu_294_p4 = ap_const_lv1_1;
        end else begin
            storemerge_phi_fu_294_p4 = 'bx;
        end
    end else begin
        storemerge_phi_fu_294_p4 = 'bx;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_157)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_157 assign process. ///
always @ (ap_start or ap_done_reg or rxMetadataIn_V_empty_n or rxMetadataOutDhcp_V_full_n or rxMetadataOutApp_V_full_n or shimState or streamSourceRx_V or rxDataIn_V_data_V0_status or grp_nbreadreq_fu_182_p5 or grp_nbwritereq_fu_194_p5 or rxDataOutDhcp_V_data_V1_status or grp_nbwritereq_fu_229_p5 or rxDataOutApp_V_data_V1_status or tmp_nbreadreq_fu_254_p3 or tmp_1_nbwritereq_fu_262_p3 or tmp_6_fu_359_p2)
begin
    ap_sig_bdd_157 = (((rxDataIn_V_data_V0_status == ap_const_logic_0) & (shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5)) | ((shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & (rxDataOutDhcp_V_data_V1_status == ap_const_logic_0)) | ((rxDataIn_V_data_V0_status == ap_const_logic_0) & (shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5)) | ((shimState == ap_const_lv2_2) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & (rxDataOutApp_V_data_V1_status == ap_const_logic_0)) | ((rxDataIn_V_data_V0_status == ap_const_logic_0) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & (shimState == ap_const_lv2_1)) | (~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & (ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_194_p5) & (rxDataOutDhcp_V_data_V1_status == ap_const_logic_0) & (shimState == ap_const_lv2_1)) | ((rxDataIn_V_data_V0_status == ap_const_logic_0) & ~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & (shimState == ap_const_lv2_1)) | (~(ap_const_lv1_0 == grp_nbreadreq_fu_182_p5) & ~(ap_const_lv1_0 == streamSourceRx_V) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_229_p5) & (rxDataOutApp_V_data_V1_status == ap_const_logic_0) & (shimState == ap_const_lv2_1)) | ((rxMetadataIn_V_empty_n == ap_const_logic_0) & (ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3)) | ((ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3) & (rxMetadataOutApp_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == tmp_6_fu_359_p2)) | ((ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3) & (rxMetadataOutDhcp_V_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_6_fu_359_p2)) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_20 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_266 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or shimState or tmp_nbreadreq_fu_254_p3 or tmp_1_nbwritereq_fu_262_p3)
begin
    ap_sig_bdd_266 = ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv2_0 == shimState) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_254_p3) & ~(ap_const_lv1_0 == tmp_1_nbwritereq_fu_262_p3));
end
assign grp_fu_315_p1 = rxDataIn_V_last_V_dout;
assign grp_fu_327_p3 = ((rxDataIn_V_last_V_dout[0:0]===1'b1)? ap_const_lv2_0: ap_const_lv2_2);
assign grp_nbreadreq_fu_182_p5 = (rxDataIn_V_data_V_empty_n & rxDataIn_V_keep_V_empty_n & rxDataIn_V_last_V_empty_n);
assign grp_nbwritereq_fu_194_p5 = (rxDataOutDhcp_V_data_V_full_n & rxDataOutDhcp_V_keep_V_full_n & rxDataOutDhcp_V_last_V_full_n);
assign grp_nbwritereq_fu_229_p5 = (rxDataOutApp_V_data_V_full_n & rxDataOutApp_V_keep_V_full_n & rxDataOutApp_V_last_V_full_n);
assign rxDataIn_V_data_V0_status = (rxDataIn_V_data_V_empty_n & rxDataIn_V_keep_V_empty_n & rxDataIn_V_last_V_empty_n);
assign rxDataIn_V_data_V_read = rxDataIn_V_data_V0_update;
assign rxDataIn_V_keep_V_read = rxDataIn_V_data_V0_update;
assign rxDataIn_V_last_V_read = rxDataIn_V_data_V0_update;
assign rxDataOutApp_V_data_V1_status = (rxDataOutApp_V_data_V_full_n & rxDataOutApp_V_keep_V_full_n & rxDataOutApp_V_last_V_full_n);
assign rxDataOutApp_V_data_V_din = rxDataIn_V_data_V_dout;
assign rxDataOutApp_V_data_V_write = rxDataOutApp_V_data_V1_update;
assign rxDataOutApp_V_keep_V_din = rxDataIn_V_keep_V_dout;
assign rxDataOutApp_V_keep_V_write = rxDataOutApp_V_data_V1_update;
assign rxDataOutApp_V_last_V_din = rxDataIn_V_last_V_dout;
assign rxDataOutApp_V_last_V_write = rxDataOutApp_V_data_V1_update;
assign rxDataOutDhcp_V_data_V1_status = (rxDataOutDhcp_V_data_V_full_n & rxDataOutDhcp_V_keep_V_full_n & rxDataOutDhcp_V_last_V_full_n);
assign rxDataOutDhcp_V_data_V_din = rxDataIn_V_data_V_dout;
assign rxDataOutDhcp_V_data_V_write = rxDataOutDhcp_V_data_V1_update;
assign rxDataOutDhcp_V_keep_V_din = rxDataIn_V_keep_V_dout;
assign rxDataOutDhcp_V_keep_V_write = rxDataOutDhcp_V_data_V1_update;
assign rxDataOutDhcp_V_last_V_din = rxDataIn_V_last_V_dout;
assign rxDataOutDhcp_V_last_V_write = rxDataOutDhcp_V_data_V1_update;
assign rxMetadataOutApp_V_din = rxMetadataIn_V_dout;
assign rxMetadataOutDhcp_V_din = {{{tmp_destinationSocket_addr_V_fu_365_p4}, {ap_const_lv16_44}}, {tmp_10_fu_375_p1}};
assign tmp_10_fu_375_p1 = rxMetadataIn_V_dout[47:0];
assign tmp_1_nbwritereq_fu_262_p3 = rxMetadataOutDhcp_V_full_n;
assign tmp_6_fu_359_p2 = (tmp_destinationSocket_port_V_fu_349_p4 == ap_const_lv16_44? 1'b1: 1'b0);
assign tmp_destinationSocket_addr_V_fu_365_p4 = {{rxMetadataIn_V_dout[ap_const_lv32_5F : ap_const_lv32_40]}};
assign tmp_destinationSocket_port_V_fu_349_p4 = {{rxMetadataIn_V_dout[ap_const_lv32_3F : ap_const_lv32_30]}};
assign tmp_nbreadreq_fu_254_p3 = rxMetadataIn_V_empty_n;


endmodule //udpAppMux_appMuxRxPath

