// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module toe_Block_codeRepl13931441_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxEng_metaHandlerEventFifo_V_dout,
        rxEng_metaHandlerEventFifo_V_empty_n,
        rxEng_metaHandlerEventFifo_V_read,
        rxEng2eventEng_setEvent_V_din,
        rxEng2eventEng_setEvent_V_full_n,
        rxEng2eventEng_setEvent_V_write,
        rxEng_fsmEventFifo_V_dout,
        rxEng_fsmEventFifo_V_empty_n,
        rxEng_fsmEventFifo_V_read
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv150_lc_1 = 150'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [149:0] rxEng_metaHandlerEventFifo_V_dout;
input   rxEng_metaHandlerEventFifo_V_empty_n;
output   rxEng_metaHandlerEventFifo_V_read;
output  [149:0] rxEng2eventEng_setEvent_V_din;
input   rxEng2eventEng_setEvent_V_full_n;
output   rxEng2eventEng_setEvent_V_write;
input  [53:0] rxEng_fsmEventFifo_V_dout;
input   rxEng_fsmEventFifo_V_empty_n;
output   rxEng_fsmEventFifo_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxEng_metaHandlerEventFifo_V_read;
reg[149:0] rxEng2eventEng_setEvent_V_din;
reg rxEng2eventEng_setEvent_V_write;
reg rxEng_fsmEventFifo_V_read;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_20;
wire   [0:0] tmp_nbreadreq_fu_46_p3;
wire   [0:0] tmp_168_nbreadreq_fu_54_p3;
reg    ap_sig_bdd_62;
wire   [149:0] tmp_3_fu_83_p5;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_bdd_48;
reg    ap_sig_bdd_65;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_62)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_62)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_62))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_62)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_62)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_20)
begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// rxEng2eventEng_setEvent_V_din assign process. ///
always @ (rxEng_metaHandlerEventFifo_V_dout or tmp_nbreadreq_fu_46_p3 or tmp_3_fu_83_p5 or ap_sig_bdd_48 or ap_sig_bdd_65)
begin
    if (ap_sig_bdd_65) begin
        if (~(tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0)) begin
            rxEng2eventEng_setEvent_V_din = rxEng_metaHandlerEventFifo_V_dout;
        end else if (ap_sig_bdd_48) begin
            rxEng2eventEng_setEvent_V_din = tmp_3_fu_83_p5;
        end else begin
            rxEng2eventEng_setEvent_V_din = 'bx;
        end
    end else begin
        rxEng2eventEng_setEvent_V_din = 'bx;
    end
end

/// rxEng2eventEng_setEvent_V_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or tmp_nbreadreq_fu_46_p3 or tmp_168_nbreadreq_fu_54_p3 or ap_sig_bdd_62)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0) & ~(tmp_168_nbreadreq_fu_54_p3 == ap_const_lv1_0) & ~ap_sig_bdd_62) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0) & ~ap_sig_bdd_62))) begin
        rxEng2eventEng_setEvent_V_write = ap_const_logic_1;
    end else begin
        rxEng2eventEng_setEvent_V_write = ap_const_logic_0;
    end
end

/// rxEng_fsmEventFifo_V_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or tmp_nbreadreq_fu_46_p3 or tmp_168_nbreadreq_fu_54_p3 or ap_sig_bdd_62)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0) & ~(tmp_168_nbreadreq_fu_54_p3 == ap_const_lv1_0) & ~ap_sig_bdd_62)) begin
        rxEng_fsmEventFifo_V_read = ap_const_logic_1;
    end else begin
        rxEng_fsmEventFifo_V_read = ap_const_logic_0;
    end
end

/// rxEng_metaHandlerEventFifo_V_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or tmp_nbreadreq_fu_46_p3 or ap_sig_bdd_62)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0) & ~ap_sig_bdd_62)) begin
        rxEng_metaHandlerEventFifo_V_read = ap_const_logic_1;
    end else begin
        rxEng_metaHandlerEventFifo_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_62)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_20 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_48 assign process. ///
always @ (tmp_nbreadreq_fu_46_p3 or tmp_168_nbreadreq_fu_54_p3)
begin
    ap_sig_bdd_48 = ((tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0) & ~(tmp_168_nbreadreq_fu_54_p3 == ap_const_lv1_0));
end

/// ap_sig_bdd_62 assign process. ///
always @ (ap_start or ap_done_reg or rxEng_metaHandlerEventFifo_V_empty_n or rxEng2eventEng_setEvent_V_full_n or rxEng_fsmEventFifo_V_empty_n or tmp_nbreadreq_fu_46_p3 or tmp_168_nbreadreq_fu_54_p3)
begin
    ap_sig_bdd_62 = (((rxEng_fsmEventFifo_V_empty_n == ap_const_logic_0) & (tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0) & ~(tmp_168_nbreadreq_fu_54_p3 == ap_const_lv1_0)) | ((tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0) & ~(tmp_168_nbreadreq_fu_54_p3 == ap_const_lv1_0) & (rxEng2eventEng_setEvent_V_full_n == ap_const_logic_0)) | ((rxEng_metaHandlerEventFifo_V_empty_n == ap_const_logic_0) & ~(tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0)) | ((rxEng2eventEng_setEvent_V_full_n == ap_const_logic_0) & ~(tmp_nbreadreq_fu_46_p3 == ap_const_lv1_0)) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_65 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_62)
begin
    ap_sig_bdd_65 = ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_62);
end
assign tmp_168_nbreadreq_fu_54_p3 = rxEng_fsmEventFifo_V_empty_n;
assign tmp_3_fu_83_p5 = {{ap_const_lv150_lc_1[32'd149 : 32'd54]}, {rxEng_fsmEventFifo_V_dout}};
assign tmp_nbreadreq_fu_46_p3 = rxEng_metaHandlerEventFifo_V_empty_n;


endmodule //toe_Block_codeRepl13931441_proc

