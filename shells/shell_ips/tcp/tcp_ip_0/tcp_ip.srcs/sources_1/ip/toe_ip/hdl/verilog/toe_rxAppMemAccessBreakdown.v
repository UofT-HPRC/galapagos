// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module toe_rxAppMemAccessBreakdown (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        outputMemAccess_V_din,
        outputMemAccess_V_full_n,
        outputMemAccess_V_write,
        rxAppStreamIf2memAccessBreakdo_dout,
        rxAppStreamIf2memAccessBreakdo_empty_n,
        rxAppStreamIf2memAccessBreakdo_read,
        rxAppStreamIf2memAccessBreakdo_1_dout,
        rxAppStreamIf2memAccessBreakdo_1_empty_n,
        rxAppStreamIf2memAccessBreakdo_1_read,
        rxAppStreamIf2memAccessBreakdo_2_dout,
        rxAppStreamIf2memAccessBreakdo_2_empty_n,
        rxAppStreamIf2memAccessBreakdo_2_read,
        rxAppStreamIf2memAccessBreakdo_3_dout,
        rxAppStreamIf2memAccessBreakdo_3_empty_n,
        rxAppStreamIf2memAccessBreakdo_3_read,
        rxAppStreamIf2memAccessBreakdo_4_dout,
        rxAppStreamIf2memAccessBreakdo_4_empty_n,
        rxAppStreamIf2memAccessBreakdo_4_read,
        rxAppStreamIf2memAccessBreakdo_5_dout,
        rxAppStreamIf2memAccessBreakdo_5_empty_n,
        rxAppStreamIf2memAccessBreakdo_5_read,
        rxAppStreamIf2memAccessBreakdo_6_dout,
        rxAppStreamIf2memAccessBreakdo_6_empty_n,
        rxAppStreamIf2memAccessBreakdo_6_read,
        rxAppStreamIf2memAccessBreakdo_7_dout,
        rxAppStreamIf2memAccessBreakdo_7_empty_n,
        rxAppStreamIf2memAccessBreakdo_7_read,
        rxAppDoubleAccess_V_V_din,
        rxAppDoubleAccess_V_V_full_n,
        rxAppDoubleAccess_V_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv24_10000 = 24'b10000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [71:0] outputMemAccess_V_din;
input   outputMemAccess_V_full_n;
output   outputMemAccess_V_write;
input  [22:0] rxAppStreamIf2memAccessBreakdo_dout;
input   rxAppStreamIf2memAccessBreakdo_empty_n;
output   rxAppStreamIf2memAccessBreakdo_read;
input  [0:0] rxAppStreamIf2memAccessBreakdo_1_dout;
input   rxAppStreamIf2memAccessBreakdo_1_empty_n;
output   rxAppStreamIf2memAccessBreakdo_1_read;
input  [5:0] rxAppStreamIf2memAccessBreakdo_2_dout;
input   rxAppStreamIf2memAccessBreakdo_2_empty_n;
output   rxAppStreamIf2memAccessBreakdo_2_read;
input  [0:0] rxAppStreamIf2memAccessBreakdo_3_dout;
input   rxAppStreamIf2memAccessBreakdo_3_empty_n;
output   rxAppStreamIf2memAccessBreakdo_3_read;
input  [0:0] rxAppStreamIf2memAccessBreakdo_4_dout;
input   rxAppStreamIf2memAccessBreakdo_4_empty_n;
output   rxAppStreamIf2memAccessBreakdo_4_read;
input  [31:0] rxAppStreamIf2memAccessBreakdo_5_dout;
input   rxAppStreamIf2memAccessBreakdo_5_empty_n;
output   rxAppStreamIf2memAccessBreakdo_5_read;
input  [3:0] rxAppStreamIf2memAccessBreakdo_6_dout;
input   rxAppStreamIf2memAccessBreakdo_6_empty_n;
output   rxAppStreamIf2memAccessBreakdo_6_read;
input  [3:0] rxAppStreamIf2memAccessBreakdo_7_dout;
input   rxAppStreamIf2memAccessBreakdo_7_empty_n;
output   rxAppStreamIf2memAccessBreakdo_7_read;
output  [0:0] rxAppDoubleAccess_V_V_din;
input   rxAppDoubleAccess_V_V_full_n;
output   rxAppDoubleAccess_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[71:0] outputMemAccess_V_din;
reg outputMemAccess_V_write;
reg rxAppDoubleAccess_V_V_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_20;
reg   [0:0] rxAppBreakdown = 1'b0;
reg   [22:0] rxAppTempCmd_bbt_V = 23'b00000000000000000000000;
reg   [31:0] rxAppTempCmd_saddr_V = 32'b00000000000000000000000000000000;
reg   [15:0] rxAppAccLength_V = 16'b0000000000000000;
reg   [0:0] tmp_V_phi_fu_217_p4;
wire    rxAppStreamIf2memAccessBreakdo0_status;
wire   [0:0] tmp_164_nbreadreq_fu_150_p10;
wire   [0:0] grp_nbwritereq_fu_172_p3;
wire   [0:0] tmp_206_fu_293_p2;
reg    ap_sig_bdd_110;
reg    rxAppStreamIf2memAccessBreakdo0_update;
wire   [71:0] tmp_1_fu_299_p9;
wire   [71:0] tmp1_fu_336_p5;
wire   [71:0] tmp_2_fu_405_p5;
wire   [31:0] p_Result_s_fu_359_p5;
wire   [15:0] tmp_207_fu_320_p2;
wire   [15:0] tmp_s_fu_389_p2;
wire   [15:0] tmp_629_fu_275_p1;
wire   [23:0] lhs_V_cast_fu_279_p1;
wire   [23:0] rhs_V_cast_fu_283_p1;
wire   [23:0] r_V_fu_287_p2;
wire   [22:0] tmp_bbt_V_5_fu_332_p1;
wire   [15:0] tmp_628_fu_381_p1;
wire   [22:0] tmp_bbt_V_fu_401_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_bdd_310;
reg    ap_sig_bdd_312;
reg    ap_sig_bdd_309;
reg    ap_sig_bdd_84;
reg    ap_sig_bdd_318;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_110)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_309) begin
        if (~(ap_const_lv1_0 == rxAppBreakdown)) begin
            rxAppAccLength_V <= tmp_s_fu_389_p2;
        end else if (ap_sig_bdd_312) begin
            rxAppAccLength_V <= tmp_207_fu_320_p2;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_309) begin
        if (~(ap_const_lv1_0 == rxAppBreakdown)) begin
            rxAppBreakdown <= ap_const_lv1_0;
        end else if (ap_sig_bdd_312) begin
            rxAppBreakdown <= ap_const_lv1_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_309) begin
        if (~(ap_const_lv1_0 == rxAppBreakdown)) begin
            rxAppTempCmd_saddr_V <= p_Result_s_fu_359_p5;
        end else if (ap_sig_bdd_84) begin
            rxAppTempCmd_saddr_V <= rxAppStreamIf2memAccessBreakdo_5_dout;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & ~ap_sig_bdd_110)) begin
        rxAppTempCmd_bbt_V <= rxAppStreamIf2memAccessBreakdo_dout;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_110)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_110))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_110)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_110)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_20)
begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// outputMemAccess_V_din assign process. ///
always @ (rxAppBreakdown or tmp_1_fu_299_p9 or tmp1_fu_336_p5 or tmp_2_fu_405_p5 or ap_sig_bdd_310 or ap_sig_bdd_312 or ap_sig_bdd_309)
begin
    if (ap_sig_bdd_309) begin
        if (~(ap_const_lv1_0 == rxAppBreakdown)) begin
            outputMemAccess_V_din = tmp_2_fu_405_p5;
        end else if (ap_sig_bdd_312) begin
            outputMemAccess_V_din = tmp1_fu_336_p5;
        end else if (ap_sig_bdd_310) begin
            outputMemAccess_V_din = tmp_1_fu_299_p9;
        end else begin
            outputMemAccess_V_din = 'bx;
        end
    end else begin
        outputMemAccess_V_din = 'bx;
    end
end

/// outputMemAccess_V_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or rxAppBreakdown or tmp_164_nbreadreq_fu_150_p10 or grp_nbwritereq_fu_172_p3 or tmp_206_fu_293_p2 or ap_sig_bdd_110)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & (ap_const_lv1_0 == tmp_206_fu_293_p2) & ~ap_sig_bdd_110) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & ~(ap_const_lv1_0 == tmp_206_fu_293_p2) & ~ap_sig_bdd_110) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & ~(ap_const_lv1_0 == rxAppBreakdown) & ~ap_sig_bdd_110))) begin
        outputMemAccess_V_write = ap_const_logic_1;
    end else begin
        outputMemAccess_V_write = ap_const_logic_0;
    end
end

/// rxAppDoubleAccess_V_V_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or rxAppBreakdown or tmp_164_nbreadreq_fu_150_p10 or grp_nbwritereq_fu_172_p3 or ap_sig_bdd_110)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & ~ap_sig_bdd_110)) begin
        rxAppDoubleAccess_V_V_write = ap_const_logic_1;
    end else begin
        rxAppDoubleAccess_V_V_write = ap_const_logic_0;
    end
end

/// rxAppStreamIf2memAccessBreakdo0_update assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or rxAppBreakdown or tmp_164_nbreadreq_fu_150_p10 or grp_nbwritereq_fu_172_p3 or ap_sig_bdd_110)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & ~ap_sig_bdd_110)) begin
        rxAppStreamIf2memAccessBreakdo0_update = ap_const_logic_1;
    end else begin
        rxAppStreamIf2memAccessBreakdo0_update = ap_const_logic_0;
    end
end

/// tmp_V_phi_fu_217_p4 assign process. ///
always @ (tmp_206_fu_293_p2 or ap_sig_bdd_318)
begin
    if (ap_sig_bdd_318) begin
        if (~(ap_const_lv1_0 == tmp_206_fu_293_p2)) begin
            tmp_V_phi_fu_217_p4 = ap_const_lv1_1;
        end else if ((ap_const_lv1_0 == tmp_206_fu_293_p2)) begin
            tmp_V_phi_fu_217_p4 = ap_const_lv1_0;
        end else begin
            tmp_V_phi_fu_217_p4 = 'bx;
        end
    end else begin
        tmp_V_phi_fu_217_p4 = 'bx;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_110)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_110 assign process. ///
always @ (ap_start or ap_done_reg or outputMemAccess_V_full_n or rxAppBreakdown or rxAppDoubleAccess_V_V_full_n or rxAppStreamIf2memAccessBreakdo0_status or tmp_164_nbreadreq_fu_150_p10 or grp_nbwritereq_fu_172_p3 or tmp_206_fu_293_p2)
begin
    ap_sig_bdd_110 = (((rxAppStreamIf2memAccessBreakdo0_status == ap_const_logic_0) & (ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3)) | ((ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & (outputMemAccess_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == tmp_206_fu_293_p2)) | ((ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & (outputMemAccess_V_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_206_fu_293_p2)) | ((ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & (rxAppDoubleAccess_V_V_full_n == ap_const_logic_0)) | (~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & (outputMemAccess_V_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == rxAppBreakdown)) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_20 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_309 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or grp_nbwritereq_fu_172_p3 or ap_sig_bdd_110)
begin
    ap_sig_bdd_309 = ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3) & ~ap_sig_bdd_110);
end

/// ap_sig_bdd_310 assign process. ///
always @ (rxAppBreakdown or tmp_164_nbreadreq_fu_150_p10 or tmp_206_fu_293_p2)
begin
    ap_sig_bdd_310 = ((ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & (ap_const_lv1_0 == tmp_206_fu_293_p2));
end

/// ap_sig_bdd_312 assign process. ///
always @ (rxAppBreakdown or tmp_164_nbreadreq_fu_150_p10 or tmp_206_fu_293_p2)
begin
    ap_sig_bdd_312 = ((ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == tmp_206_fu_293_p2));
end

/// ap_sig_bdd_318 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or rxAppBreakdown or tmp_164_nbreadreq_fu_150_p10 or grp_nbwritereq_fu_172_p3)
begin
    ap_sig_bdd_318 = ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10) & ~(ap_const_lv1_0 == grp_nbwritereq_fu_172_p3));
end

/// ap_sig_bdd_84 assign process. ///
always @ (rxAppBreakdown or tmp_164_nbreadreq_fu_150_p10)
begin
    ap_sig_bdd_84 = ((ap_const_lv1_0 == rxAppBreakdown) & ~(ap_const_lv1_0 == tmp_164_nbreadreq_fu_150_p10));
end
assign grp_nbwritereq_fu_172_p3 = outputMemAccess_V_full_n;
assign lhs_V_cast_fu_279_p1 = tmp_629_fu_275_p1;
assign p_Result_s_fu_359_p5 = {{rxAppTempCmd_saddr_V[32'd31 : 32'd16]}, {ap_const_lv16_0}};
assign r_V_fu_287_p2 = (lhs_V_cast_fu_279_p1 + rhs_V_cast_fu_283_p1);
assign rhs_V_cast_fu_283_p1 = rxAppStreamIf2memAccessBreakdo_dout;
assign rxAppDoubleAccess_V_V_din = tmp_V_phi_fu_217_p4;
assign rxAppStreamIf2memAccessBreakdo0_status = (rxAppStreamIf2memAccessBreakdo_empty_n & rxAppStreamIf2memAccessBreakdo_1_empty_n & rxAppStreamIf2memAccessBreakdo_2_empty_n & rxAppStreamIf2memAccessBreakdo_3_empty_n & rxAppStreamIf2memAccessBreakdo_4_empty_n & rxAppStreamIf2memAccessBreakdo_5_empty_n & rxAppStreamIf2memAccessBreakdo_6_empty_n & rxAppStreamIf2memAccessBreakdo_7_empty_n);
assign rxAppStreamIf2memAccessBreakdo_1_read = rxAppStreamIf2memAccessBreakdo0_update;
assign rxAppStreamIf2memAccessBreakdo_2_read = rxAppStreamIf2memAccessBreakdo0_update;
assign rxAppStreamIf2memAccessBreakdo_3_read = rxAppStreamIf2memAccessBreakdo0_update;
assign rxAppStreamIf2memAccessBreakdo_4_read = rxAppStreamIf2memAccessBreakdo0_update;
assign rxAppStreamIf2memAccessBreakdo_5_read = rxAppStreamIf2memAccessBreakdo0_update;
assign rxAppStreamIf2memAccessBreakdo_6_read = rxAppStreamIf2memAccessBreakdo0_update;
assign rxAppStreamIf2memAccessBreakdo_7_read = rxAppStreamIf2memAccessBreakdo0_update;
assign rxAppStreamIf2memAccessBreakdo_read = rxAppStreamIf2memAccessBreakdo0_update;
assign tmp1_fu_336_p5 = {{{{{{ap_const_lv8_0}, {rxAppStreamIf2memAccessBreakdo_5_dout}}}, {ap_const_lv9_181}}}, {tmp_bbt_V_5_fu_332_p1}};
assign tmp_164_nbreadreq_fu_150_p10 = (rxAppStreamIf2memAccessBreakdo_empty_n & rxAppStreamIf2memAccessBreakdo_1_empty_n & rxAppStreamIf2memAccessBreakdo_2_empty_n & rxAppStreamIf2memAccessBreakdo_3_empty_n & rxAppStreamIf2memAccessBreakdo_4_empty_n & rxAppStreamIf2memAccessBreakdo_5_empty_n & rxAppStreamIf2memAccessBreakdo_6_empty_n & rxAppStreamIf2memAccessBreakdo_7_empty_n);
assign tmp_1_fu_299_p9 = {{{{{{{{rxAppStreamIf2memAccessBreakdo_7_dout}, {rxAppStreamIf2memAccessBreakdo_6_dout}}, {rxAppStreamIf2memAccessBreakdo_5_dout}}, {rxAppStreamIf2memAccessBreakdo_4_dout}}, {rxAppStreamIf2memAccessBreakdo_3_dout}}, {rxAppStreamIf2memAccessBreakdo_2_dout}}, {rxAppStreamIf2memAccessBreakdo_1_dout}}, {rxAppStreamIf2memAccessBreakdo_dout}};
assign tmp_206_fu_293_p2 = (r_V_fu_287_p2 > ap_const_lv24_10000? 1'b1: 1'b0);
assign tmp_207_fu_320_p2 = (ap_const_lv16_0 - tmp_629_fu_275_p1);
assign tmp_2_fu_405_p5 = {{{{{{ap_const_lv8_0}, {p_Result_s_fu_359_p5}}}, {ap_const_lv9_181}}}, {tmp_bbt_V_fu_401_p1}};
assign tmp_628_fu_381_p1 = rxAppTempCmd_bbt_V[15:0];
assign tmp_629_fu_275_p1 = rxAppStreamIf2memAccessBreakdo_5_dout[15:0];
assign tmp_bbt_V_5_fu_332_p1 = tmp_207_fu_320_p2;
assign tmp_bbt_V_fu_401_p1 = tmp_s_fu_389_p2;
assign tmp_s_fu_389_p2 = (tmp_628_fu_381_p1 - rxAppAccLength_V);


endmodule //toe_rxAppMemAccessBreakdown

