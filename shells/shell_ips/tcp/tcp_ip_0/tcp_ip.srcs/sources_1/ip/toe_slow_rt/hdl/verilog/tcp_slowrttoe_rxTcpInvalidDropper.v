// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tcp_slowrttoe_rxTcpInvalidDropper (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxEng_tcpValidFifo_V_dout,
        rxEng_tcpValidFifo_V_empty_n,
        rxEng_tcpValidFifo_V_read,
        rxEng_dataBuffer2_V_dout,
        rxEng_dataBuffer2_V_empty_n,
        rxEng_dataBuffer2_V_read,
        rxEng_dataBuffer3_V_din,
        rxEng_dataBuffer3_V_full_n,
        rxEng_dataBuffer3_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [0:0] rxEng_tcpValidFifo_V_dout;
input   rxEng_tcpValidFifo_V_empty_n;
output   rxEng_tcpValidFifo_V_read;
input  [72:0] rxEng_dataBuffer2_V_dout;
input   rxEng_dataBuffer2_V_empty_n;
output   rxEng_dataBuffer2_V_read;
output  [72:0] rxEng_dataBuffer3_V_din;
input   rxEng_dataBuffer3_V_full_n;
output   rxEng_dataBuffer3_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxEng_tcpValidFifo_V_read;
reg rxEng_dataBuffer2_V_read;
reg rxEng_dataBuffer3_V_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_20;
reg   [1:0] rtid_state = 2'b00;
wire   [0:0] grp_nbreadreq_fu_68_p3;
wire   [0:0] tmp_94_nbwritereq_fu_82_p3;
wire   [0:0] tmp_nbreadreq_fu_98_p3;
reg    ap_sig_bdd_76;
wire   [0:0] grp_fu_113_p3;
wire   [1:0] storemerge_fu_131_p3;
reg   [0:0] ap_NS_fsm;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_76)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv2_0 == rtid_state) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_98_p3) & ~ap_sig_bdd_76)) begin
        rtid_state <= storemerge_fu_131_p3;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (rtid_state == ap_const_lv2_2) & ~(grp_nbreadreq_fu_68_p3 == ap_const_lv1_0) & ~ap_sig_bdd_76 & ~(ap_const_lv1_0 == grp_fu_113_p3)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(grp_nbreadreq_fu_68_p3 == ap_const_lv1_0) & (rtid_state == ap_const_lv2_1) & ~(ap_const_lv1_0 == tmp_94_nbwritereq_fu_82_p3) & ~ap_sig_bdd_76 & ~(ap_const_lv1_0 == grp_fu_113_p3)))) begin
        rtid_state <= ap_const_lv2_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_76)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_76))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_76)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_76)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_20)
begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// rxEng_dataBuffer2_V_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or rtid_state or grp_nbreadreq_fu_68_p3 or tmp_94_nbwritereq_fu_82_p3 or ap_sig_bdd_76)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (rtid_state == ap_const_lv2_2) & ~(grp_nbreadreq_fu_68_p3 == ap_const_lv1_0) & ~ap_sig_bdd_76) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(grp_nbreadreq_fu_68_p3 == ap_const_lv1_0) & (rtid_state == ap_const_lv2_1) & ~(ap_const_lv1_0 == tmp_94_nbwritereq_fu_82_p3) & ~ap_sig_bdd_76))) begin
        rxEng_dataBuffer2_V_read = ap_const_logic_1;
    end else begin
        rxEng_dataBuffer2_V_read = ap_const_logic_0;
    end
end

/// rxEng_dataBuffer3_V_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or rtid_state or grp_nbreadreq_fu_68_p3 or tmp_94_nbwritereq_fu_82_p3 or ap_sig_bdd_76)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(grp_nbreadreq_fu_68_p3 == ap_const_lv1_0) & (rtid_state == ap_const_lv2_1) & ~(ap_const_lv1_0 == tmp_94_nbwritereq_fu_82_p3) & ~ap_sig_bdd_76)) begin
        rxEng_dataBuffer3_V_write = ap_const_logic_1;
    end else begin
        rxEng_dataBuffer3_V_write = ap_const_logic_0;
    end
end

/// rxEng_tcpValidFifo_V_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or rtid_state or tmp_nbreadreq_fu_98_p3 or ap_sig_bdd_76)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (ap_const_lv2_0 == rtid_state) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_98_p3) & ~ap_sig_bdd_76)) begin
        rxEng_tcpValidFifo_V_read = ap_const_logic_1;
    end else begin
        rxEng_tcpValidFifo_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_76)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_20 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_76 assign process. ///
always @ (ap_start or ap_done_reg or rtid_state or rxEng_tcpValidFifo_V_empty_n or rxEng_dataBuffer2_V_empty_n or rxEng_dataBuffer3_V_full_n or grp_nbreadreq_fu_68_p3 or tmp_94_nbwritereq_fu_82_p3 or tmp_nbreadreq_fu_98_p3)
begin
    ap_sig_bdd_76 = (((rxEng_dataBuffer2_V_empty_n == ap_const_logic_0) & (rtid_state == ap_const_lv2_2) & ~(grp_nbreadreq_fu_68_p3 == ap_const_lv1_0)) | ((rxEng_dataBuffer2_V_empty_n == ap_const_logic_0) & ~(grp_nbreadreq_fu_68_p3 == ap_const_lv1_0) & (rtid_state == ap_const_lv2_1) & ~(ap_const_lv1_0 == tmp_94_nbwritereq_fu_82_p3)) | (~(grp_nbreadreq_fu_68_p3 == ap_const_lv1_0) & (rtid_state == ap_const_lv2_1) & ~(ap_const_lv1_0 == tmp_94_nbwritereq_fu_82_p3) & (rxEng_dataBuffer3_V_full_n == ap_const_logic_0)) | ((rxEng_tcpValidFifo_V_empty_n == ap_const_logic_0) & (ap_const_lv2_0 == rtid_state) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_98_p3)) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end
assign grp_fu_113_p3 = rxEng_dataBuffer2_V_dout[ap_const_lv32_48];
assign grp_nbreadreq_fu_68_p3 = rxEng_dataBuffer2_V_empty_n;
assign rxEng_dataBuffer3_V_din = rxEng_dataBuffer2_V_dout;
assign storemerge_fu_131_p3 = ((rxEng_tcpValidFifo_V_dout[0:0]===1'b1)? ap_const_lv2_1: ap_const_lv2_2);
assign tmp_94_nbwritereq_fu_82_p3 = rxEng_dataBuffer3_V_full_n;
assign tmp_nbreadreq_fu_98_p3 = rxEng_tcpValidFifo_V_empty_n;


endmodule //tcp_slowrttoe_rxTcpInvalidDropper

