// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ip_handler_detect_ip_protocol (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ipDataCutFifo_V_dout,
        ipDataCutFifo_V_empty_n,
        ipDataCutFifo_V_read,
        m_axis_TCP_TREADY,
        m_axis_UDP_TREADY,
        m_axis_ICMP_TREADY,
        m_axis_ICMP_TDATA,
        m_axis_ICMP_TVALID,
        m_axis_ICMP_TKEEP,
        m_axis_ICMP_TLAST,
        m_axis_UDP_TDATA,
        m_axis_UDP_TVALID,
        m_axis_UDP_TKEEP,
        m_axis_UDP_TLAST,
        m_axis_TCP_TDATA,
        m_axis_TCP_TVALID,
        m_axis_TCP_TKEEP,
        m_axis_TCP_TLAST
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv8_6 = 8'b110;
parameter    ap_const_lv8_11 = 8'b10001;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] ipDataCutFifo_V_dout;
input   ipDataCutFifo_V_empty_n;
output   ipDataCutFifo_V_read;
input   m_axis_TCP_TREADY;
input   m_axis_UDP_TREADY;
input   m_axis_ICMP_TREADY;
output  [63:0] m_axis_ICMP_TDATA;
output   m_axis_ICMP_TVALID;
output  [7:0] m_axis_ICMP_TKEEP;
output  [0:0] m_axis_ICMP_TLAST;
output  [63:0] m_axis_UDP_TDATA;
output   m_axis_UDP_TVALID;
output  [7:0] m_axis_UDP_TKEEP;
output  [0:0] m_axis_UDP_TLAST;
output  [63:0] m_axis_TCP_TDATA;
output   m_axis_TCP_TVALID;
output  [7:0] m_axis_TCP_TKEEP;
output  [0:0] m_axis_TCP_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ipDataCutFifo_V_read;
reg m_axis_ICMP_TVALID;
reg m_axis_UDP_TVALID;
reg m_axis_TCP_TVALID;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_20;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [0:0] tmp_nbreadreq_fu_92_p3;
reg    ap_sig_bdd_52;
reg   [0:0] dip_state_load_reg_330;
reg   [0:0] tmp_reg_338;
reg   [0:0] cond_reg_357;
reg   [7:0] dip_ipProtocol_V_loc_reg_156;
reg    ap_sig_ioackin_m_axis_TCP_TREADY;
reg    ap_sig_ioackin_m_axis_UDP_TREADY;
reg    ap_sig_ioackin_m_axis_ICMP_TREADY;
reg   [7:0] dip_ipProtocol_V_load_reg_334;
reg   [0:0] dip_state = 1'b0;
reg   [7:0] dip_ipProtocol_V = 8'b00000000;
reg   [63:0] dip_prevWord_data_V = 64'b0000000000000000000000000000000000000000000000000000000000000000;
reg   [7:0] dip_prevWord_keep_V = 8'b00000000;
reg   [0:0] dip_prevWord_last_V = 1'b0;
reg   [1:0] dip_wordCount_V = 2'b00;
wire   [63:0] p_Val2_s_fu_221_p1;
reg   [63:0] p_Val2_s_reg_342;
reg   [7:0] tmp_keep_V_load_new_reg_347;
wire   [0:0] tmp_124_fu_235_p3;
reg   [0:0] tmp_124_reg_352;
wire   [0:0] cond_fu_247_p2;
wire   [0:0] ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0;
wire   [0:0] tmp_s_fu_253_p2;
reg   [0:0] dip_wordCount_V_flag_phi_fu_148_p4;
wire   [7:0] ap_reg_phiprechg_dip_ipProtocol_V_loc_reg_156pp0_it0;
wire   [0:0] ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0;
reg   [0:0] dip_wordCount_V_flag_1_phi_fu_169_p4;
wire   [1:0] ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0;
reg   [1:0] dip_wordCount_V_new_1_phi_fu_180_p4;
wire   [0:0] ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0;
reg   [0:0] dip_wordCount_V_flag_2_phi_fu_191_p4;
wire   [1:0] ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0;
reg   [1:0] dip_wordCount_V_new_2_phi_fu_203_p4;
reg    ap_reg_ioackin_m_axis_TCP_TREADY = 1'b0;
reg    ap_reg_ioackin_m_axis_UDP_TREADY = 1'b0;
reg    ap_reg_ioackin_m_axis_ICMP_TREADY = 1'b0;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
reg    ap_sig_bdd_157;
reg    ap_sig_bdd_163;
reg    ap_sig_bdd_107;
reg    ap_sig_bdd_185;
reg    ap_sig_bdd_217;
reg    ap_sig_bdd_172;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_m_axis_ICMP_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_axis_ICMP_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axis_ICMP_TREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
            ap_reg_ioackin_m_axis_ICMP_TREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_1 == m_axis_ICMP_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_1 == m_axis_ICMP_TREADY)))) begin
            ap_reg_ioackin_m_axis_ICMP_TREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_m_axis_TCP_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_axis_TCP_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axis_TCP_TREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
            ap_reg_ioackin_m_axis_TCP_TREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_1 == m_axis_TCP_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_1 == m_axis_TCP_TREADY)))) begin
            ap_reg_ioackin_m_axis_TCP_TREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_m_axis_UDP_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_axis_UDP_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axis_UDP_TREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
            ap_reg_ioackin_m_axis_UDP_TREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_1 == m_axis_UDP_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_1 == m_axis_UDP_TREADY)))) begin
            ap_reg_ioackin_m_axis_UDP_TREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_107) begin
        if (ap_sig_bdd_163) begin
            dip_ipProtocol_V_loc_reg_156 <= dip_ipProtocol_V;
        end else if (ap_sig_bdd_157) begin
            dip_ipProtocol_V_loc_reg_156 <= {{ipDataCutFifo_V_dout[ap_const_lv32_F : ap_const_lv32_8]}};
        end else if ((ap_true == ap_true)) begin
            dip_ipProtocol_V_loc_reg_156 <= ap_reg_phiprechg_dip_ipProtocol_V_loc_reg_156pp0_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_107) begin
        if (~(dip_state == ap_const_lv1_0)) begin
            dip_state <= ap_const_lv1_0;
        end else if (ap_sig_bdd_185) begin
            dip_state <= ap_const_lv1_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        cond_reg_357 <= cond_fu_247_p2;
        p_Val2_s_reg_342 <= p_Val2_s_fu_221_p1;
        tmp_124_reg_352 <= ipDataCutFifo_V_dout[ap_const_lv32_48];
        tmp_keep_V_load_new_reg_347 <= {{ipDataCutFifo_V_dout[ap_const_lv32_47 : ap_const_lv32_40]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_lv1_0 == cond_fu_247_p2) & ~(ap_const_lv1_0 == tmp_s_fu_253_p2))) begin
        dip_ipProtocol_V <= {{ipDataCutFifo_V_dout[ap_const_lv32_F : ap_const_lv32_8]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        dip_ipProtocol_V_load_reg_334 <= dip_ipProtocol_V;
        dip_state_load_reg_330 <= dip_state;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        dip_prevWord_data_V <= p_Val2_s_reg_342;
        dip_prevWord_keep_V <= tmp_keep_V_load_new_reg_347;
        dip_prevWord_last_V <= tmp_124_reg_352;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(ap_const_lv1_0 == dip_wordCount_V_flag_2_phi_fu_191_p4))) begin
        dip_wordCount_V <= dip_wordCount_V_new_2_phi_fu_203_p4;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (dip_state == ap_const_lv1_0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        tmp_reg_338 <= tmp_nbreadreq_fu_92_p3;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_52 or dip_state_load_reg_330 or tmp_reg_338 or cond_reg_357 or dip_ipProtocol_V_loc_reg_156 or ap_sig_ioackin_m_axis_TCP_TREADY or ap_sig_ioackin_m_axis_UDP_TREADY or ap_sig_ioackin_m_axis_ICMP_TREADY or dip_ipProtocol_V_load_reg_334)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_52 or dip_state_load_reg_330 or tmp_reg_338 or cond_reg_357 or dip_ipProtocol_V_loc_reg_156 or ap_sig_ioackin_m_axis_TCP_TREADY or ap_sig_ioackin_m_axis_UDP_TREADY or ap_sig_ioackin_m_axis_ICMP_TREADY or dip_ipProtocol_V_load_reg_334)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. ///
always @ (ap_sig_bdd_20)
begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_m_axis_ICMP_TREADY assign process. ///
always @ (m_axis_ICMP_TREADY or ap_reg_ioackin_m_axis_ICMP_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_axis_ICMP_TREADY)) begin
        ap_sig_ioackin_m_axis_ICMP_TREADY = m_axis_ICMP_TREADY;
    end else begin
        ap_sig_ioackin_m_axis_ICMP_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_m_axis_TCP_TREADY assign process. ///
always @ (m_axis_TCP_TREADY or ap_reg_ioackin_m_axis_TCP_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_axis_TCP_TREADY)) begin
        ap_sig_ioackin_m_axis_TCP_TREADY = m_axis_TCP_TREADY;
    end else begin
        ap_sig_ioackin_m_axis_TCP_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_m_axis_UDP_TREADY assign process. ///
always @ (m_axis_UDP_TREADY or ap_reg_ioackin_m_axis_UDP_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_axis_UDP_TREADY)) begin
        ap_sig_ioackin_m_axis_UDP_TREADY = m_axis_UDP_TREADY;
    end else begin
        ap_sig_ioackin_m_axis_UDP_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_pprstidle_pp0 assign process. ///
always @ (ap_start or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_start))) begin
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    end else begin
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    end
end

/// dip_wordCount_V_flag_1_phi_fu_169_p4 assign process. ///
always @ (cond_fu_247_p2 or dip_wordCount_V_flag_phi_fu_148_p4 or ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0 or ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        if (~(ap_const_lv1_0 == cond_fu_247_p2)) begin
            dip_wordCount_V_flag_1_phi_fu_169_p4 = ap_const_lv1_1;
        end else if ((ap_const_lv1_0 == cond_fu_247_p2)) begin
            dip_wordCount_V_flag_1_phi_fu_169_p4 = dip_wordCount_V_flag_phi_fu_148_p4;
        end else begin
            dip_wordCount_V_flag_1_phi_fu_169_p4 = ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0;
        end
    end else begin
        dip_wordCount_V_flag_1_phi_fu_169_p4 = ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0;
    end
end

/// dip_wordCount_V_flag_2_phi_fu_191_p4 assign process. ///
always @ (tmp_124_fu_235_p3 or dip_wordCount_V_flag_1_phi_fu_169_p4 or ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0 or ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        if ((ap_const_lv1_0 == tmp_124_fu_235_p3)) begin
            dip_wordCount_V_flag_2_phi_fu_191_p4 = dip_wordCount_V_flag_1_phi_fu_169_p4;
        end else if (~(ap_const_lv1_0 == tmp_124_fu_235_p3)) begin
            dip_wordCount_V_flag_2_phi_fu_191_p4 = ap_const_lv1_1;
        end else begin
            dip_wordCount_V_flag_2_phi_fu_191_p4 = ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0;
        end
    end else begin
        dip_wordCount_V_flag_2_phi_fu_191_p4 = ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0;
    end
end

/// dip_wordCount_V_flag_phi_fu_148_p4 assign process. ///
always @ (ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0 or tmp_s_fu_253_p2 or ap_sig_bdd_172)
begin
    if (ap_sig_bdd_172) begin
        if ((ap_const_lv1_0 == tmp_s_fu_253_p2)) begin
            dip_wordCount_V_flag_phi_fu_148_p4 = ap_const_lv1_0;
        end else if (~(ap_const_lv1_0 == tmp_s_fu_253_p2)) begin
            dip_wordCount_V_flag_phi_fu_148_p4 = ap_const_lv1_1;
        end else begin
            dip_wordCount_V_flag_phi_fu_148_p4 = ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0;
        end
    end else begin
        dip_wordCount_V_flag_phi_fu_148_p4 = ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0;
    end
end

/// dip_wordCount_V_new_1_phi_fu_180_p4 assign process. ///
always @ (cond_fu_247_p2 or ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0 or ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        if (~(ap_const_lv1_0 == cond_fu_247_p2)) begin
            dip_wordCount_V_new_1_phi_fu_180_p4 = ap_const_lv2_1;
        end else if ((ap_const_lv1_0 == cond_fu_247_p2)) begin
            dip_wordCount_V_new_1_phi_fu_180_p4 = ap_const_lv2_2;
        end else begin
            dip_wordCount_V_new_1_phi_fu_180_p4 = ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0;
        end
    end else begin
        dip_wordCount_V_new_1_phi_fu_180_p4 = ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0;
    end
end

/// dip_wordCount_V_new_2_phi_fu_203_p4 assign process. ///
always @ (tmp_124_fu_235_p3 or dip_wordCount_V_new_1_phi_fu_180_p4 or ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0 or ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        if ((ap_const_lv1_0 == tmp_124_fu_235_p3)) begin
            dip_wordCount_V_new_2_phi_fu_203_p4 = dip_wordCount_V_new_1_phi_fu_180_p4;
        end else if (~(ap_const_lv1_0 == tmp_124_fu_235_p3)) begin
            dip_wordCount_V_new_2_phi_fu_203_p4 = ap_const_lv2_0;
        end else begin
            dip_wordCount_V_new_2_phi_fu_203_p4 = ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0;
        end
    end else begin
        dip_wordCount_V_new_2_phi_fu_203_p4 = ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0;
    end
end

/// ipDataCutFifo_V_read assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or tmp_nbreadreq_fu_92_p3 or ap_sig_bdd_52 or dip_state_load_reg_330 or tmp_reg_338 or cond_reg_357 or dip_ipProtocol_V_loc_reg_156 or ap_sig_ioackin_m_axis_TCP_TREADY or ap_sig_ioackin_m_axis_UDP_TREADY or ap_sig_ioackin_m_axis_ICMP_TREADY or dip_ipProtocol_V_load_reg_334 or dip_state)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        ipDataCutFifo_V_read = ap_const_logic_1;
    end else begin
        ipDataCutFifo_V_read = ap_const_logic_0;
    end
end

/// m_axis_ICMP_TVALID assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_52 or dip_state_load_reg_330 or tmp_reg_338 or cond_reg_357 or dip_ipProtocol_V_loc_reg_156 or dip_ipProtocol_V_load_reg_334 or ap_reg_ioackin_m_axis_ICMP_TREADY)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_0 == ap_reg_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_0 == ap_reg_ioackin_m_axis_ICMP_TREADY)))) begin
        m_axis_ICMP_TVALID = ap_const_logic_1;
    end else begin
        m_axis_ICMP_TVALID = ap_const_logic_0;
    end
end

/// m_axis_TCP_TVALID assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_52 or dip_state_load_reg_330 or tmp_reg_338 or cond_reg_357 or dip_ipProtocol_V_loc_reg_156 or dip_ipProtocol_V_load_reg_334 or ap_reg_ioackin_m_axis_TCP_TREADY)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_0 == ap_reg_ioackin_m_axis_TCP_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_0 == ap_reg_ioackin_m_axis_TCP_TREADY)))) begin
        m_axis_TCP_TVALID = ap_const_logic_1;
    end else begin
        m_axis_TCP_TVALID = ap_const_logic_0;
    end
end

/// m_axis_UDP_TVALID assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_52 or dip_state_load_reg_330 or tmp_reg_338 or cond_reg_357 or dip_ipProtocol_V_loc_reg_156 or dip_ipProtocol_V_load_reg_334 or ap_reg_ioackin_m_axis_UDP_TREADY)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_0 == ap_reg_ioackin_m_axis_UDP_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52)) & (ap_const_logic_0 == ap_reg_ioackin_m_axis_UDP_TREADY)))) begin
        m_axis_UDP_TVALID = ap_const_logic_1;
    end else begin
        m_axis_UDP_TVALID = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_done_reg or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_52 or dip_state_load_reg_330 or tmp_reg_338 or cond_reg_357 or dip_ipProtocol_V_loc_reg_156 or ap_sig_ioackin_m_axis_TCP_TREADY or ap_sig_ioackin_m_axis_UDP_TREADY or ap_sig_ioackin_m_axis_ICMP_TREADY or dip_ipProtocol_V_load_reg_334 or ap_sig_pprstidle_pp0)
begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_phiprechg_dip_ipProtocol_V_loc_reg_156pp0_it0 = 'bx;
assign ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0 = 'bx;
assign ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0 = 'bx;
assign ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0 = 'bx;
assign ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0 = 'bx;
assign ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0 = 'bx;
assign ap_reg_ppiten_pp0_it0 = ap_start;

/// ap_sig_bdd_107 assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_52 or dip_state_load_reg_330 or tmp_reg_338 or cond_reg_357 or dip_ipProtocol_V_loc_reg_156 or ap_sig_ioackin_m_axis_TCP_TREADY or ap_sig_ioackin_m_axis_UDP_TREADY or ap_sig_ioackin_m_axis_ICMP_TREADY or dip_ipProtocol_V_load_reg_334)
begin
    ap_sig_bdd_107 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_52) | ((((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_6) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_11) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY)) | ((ap_const_lv1_0 == dip_state_load_reg_330) & ~(ap_const_lv1_0 == tmp_reg_338) & (ap_const_lv1_0 == cond_reg_357) & (dip_ipProtocol_V_loc_reg_156 == ap_const_lv8_1) & (ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_TCP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_6 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_UDP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_11 == dip_ipProtocol_V_load_reg_334)) | ((ap_const_logic_0 == ap_sig_ioackin_m_axis_ICMP_TREADY) & ~(ap_const_lv1_0 == dip_state_load_reg_330) & (ap_const_lv8_1 == dip_ipProtocol_V_load_reg_334))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))));
end

/// ap_sig_bdd_157 assign process. ///
always @ (tmp_nbreadreq_fu_92_p3 or dip_state or cond_fu_247_p2 or tmp_s_fu_253_p2)
begin
    ap_sig_bdd_157 = ((dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3) & (ap_const_lv1_0 == cond_fu_247_p2) & ~(ap_const_lv1_0 == tmp_s_fu_253_p2));
end

/// ap_sig_bdd_163 assign process. ///
always @ (tmp_nbreadreq_fu_92_p3 or dip_state or cond_fu_247_p2 or tmp_s_fu_253_p2)
begin
    ap_sig_bdd_163 = ((dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3) & (ap_const_lv1_0 == cond_fu_247_p2) & (ap_const_lv1_0 == tmp_s_fu_253_p2));
end

/// ap_sig_bdd_172 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or tmp_nbreadreq_fu_92_p3 or dip_state or cond_fu_247_p2)
begin
    ap_sig_bdd_172 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3) & (ap_const_lv1_0 == cond_fu_247_p2));
end

/// ap_sig_bdd_185 assign process. ///
always @ (tmp_nbreadreq_fu_92_p3 or dip_state or tmp_124_fu_235_p3)
begin
    ap_sig_bdd_185 = ((dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3) & ~(ap_const_lv1_0 == tmp_124_fu_235_p3));
end

/// ap_sig_bdd_20 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_217 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or tmp_nbreadreq_fu_92_p3 or dip_state)
begin
    ap_sig_bdd_217 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3));
end

/// ap_sig_bdd_52 assign process. ///
always @ (ap_start or ap_done_reg or ipDataCutFifo_V_empty_n or tmp_nbreadreq_fu_92_p3 or dip_state)
begin
    ap_sig_bdd_52 = (((ipDataCutFifo_V_empty_n == ap_const_logic_0) & (dip_state == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_92_p3)) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end
assign cond_fu_247_p2 = (dip_wordCount_V == ap_const_lv2_0? 1'b1: 1'b0);
assign m_axis_ICMP_TDATA = dip_prevWord_data_V;
assign m_axis_ICMP_TKEEP = dip_prevWord_keep_V;
assign m_axis_ICMP_TLAST = dip_prevWord_last_V;
assign m_axis_TCP_TDATA = dip_prevWord_data_V;
assign m_axis_TCP_TKEEP = dip_prevWord_keep_V;
assign m_axis_TCP_TLAST = dip_prevWord_last_V;
assign m_axis_UDP_TDATA = dip_prevWord_data_V;
assign m_axis_UDP_TKEEP = dip_prevWord_keep_V;
assign m_axis_UDP_TLAST = dip_prevWord_last_V;
assign p_Val2_s_fu_221_p1 = ipDataCutFifo_V_dout[63:0];
assign tmp_124_fu_235_p3 = ipDataCutFifo_V_dout[ap_const_lv32_48];
assign tmp_nbreadreq_fu_92_p3 = ipDataCutFifo_V_empty_n;
assign tmp_s_fu_253_p2 = (dip_wordCount_V == ap_const_lv2_1? 1'b1: 1'b0);


endmodule //ip_handler_detect_ip_protocol

