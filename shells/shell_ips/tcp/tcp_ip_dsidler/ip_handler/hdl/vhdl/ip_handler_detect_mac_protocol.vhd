-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ip_handler_detect_mac_protocol is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_raw_TVALID : IN STD_LOGIC;
    ipDataFifo_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    ipDataFifo_V_full_n : IN STD_LOGIC;
    ipDataFifo_V_write : OUT STD_LOGIC;
    m_axis_ARP_TREADY : IN STD_LOGIC;
    s_axis_raw_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_raw_TREADY : OUT STD_LOGIC;
    s_axis_raw_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axis_raw_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axis_ARP_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_ARP_TVALID : OUT STD_LOGIC;
    m_axis_ARP_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_ARP_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of ip_handler_detect_mac_protocol is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv16_806 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000110";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_20 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal tmp_nbreadreq_fu_86_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_49 : BOOLEAN;
    signal dmp_fsmState_V_load_reg_360 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_364 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_383 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_398 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_402 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_83 : BOOLEAN;
    signal ap_sig_ioackin_m_axis_ARP_TREADY : STD_LOGIC;
    signal dmp_fsmState_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dmp_macType_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal dmp_prevWord_data_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dmp_prevWord_keep_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal dmp_prevWord_last_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dmp_wordCount_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal tmp_data_V_3_reg_368 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_2_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_2_fu_211_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_378 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_dmp_wordCount_V_flag_reg_128pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dmp_wordCount_V_flag_phi_fu_131_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_251_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_phiprechg_dmp_macType_V_loc_reg_139pp0_it0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dmp_macType_V_loc_phi_fu_142_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_148pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal dmp_wordCount_V_flag_1_phi_fu_151_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_159pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal dmp_wordCount_V_new_1_phi_fu_162_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_170pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal dmp_wordCount_V_flag_2_phi_fu_173_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_182pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal dmp_wordCount_V_new_2_phi_fu_185_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp9_fu_323_p4 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_116_fu_349_p4 : STD_LOGIC_VECTOR (72 downto 0);
    signal ap_reg_ioackin_m_axis_ARP_TREADY : STD_LOGIC := '0';
    signal p_Result_6_fu_241_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_fu_231_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;
    signal ap_sig_bdd_190 : BOOLEAN;
    signal ap_sig_bdd_101 : BOOLEAN;
    signal ap_sig_bdd_177 : BOOLEAN;
    signal ap_sig_bdd_231 : BOOLEAN;
    signal ap_sig_bdd_72 : BOOLEAN;
    signal ap_sig_bdd_81 : BOOLEAN;
    signal ap_sig_bdd_211 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axis_ARP_TREADY assign process. --
    ap_reg_ioackin_m_axis_ARP_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axis_ARP_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and not((ap_const_lv1_0 = tmp_2_reg_398)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
                    ap_reg_ioackin_m_axis_ARP_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or (ap_sig_bdd_83 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_logic_1 = m_axis_ARP_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and not((ap_const_lv1_0 = tmp_2_reg_398)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or (ap_sig_bdd_83 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_logic_1 = m_axis_ARP_TREADY)))) then 
                    ap_reg_ioackin_m_axis_ARP_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                end if; 
            end if;
        end if;
    end process;


    -- dmp_fsmState_V assign process. --
    dmp_fsmState_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_101) then
                if (not((dmp_fsmState_V = ap_const_lv1_0))) then 
                    dmp_fsmState_V <= ap_const_lv1_0;
                elsif (ap_sig_bdd_190) then 
                    dmp_fsmState_V <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                cond_reg_383 <= cond_fu_219_p2;
                tmp_data_V_3_reg_368 <= s_axis_raw_TDATA;
                tmp_keep_V_2_reg_373 <= s_axis_raw_TKEEP;
                tmp_last_V_2_reg_378 <= s_axis_raw_TLAST;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                dmp_fsmState_V_load_reg_360 <= dmp_fsmState_V;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_lv1_0 = cond_fu_219_p2) and not((ap_const_lv1_0 = tmp_6_fu_225_p2)))) then
                dmp_macType_V <= p_Result_s_fu_251_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                dmp_prevWord_data_V <= tmp_data_V_3_reg_368;
                dmp_prevWord_keep_V <= tmp_keep_V_2_reg_373;
                dmp_prevWord_last_V <= tmp_last_V_2_reg_378;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv1_0 = dmp_wordCount_V_flag_2_phi_fu_173_p4)))) then
                dmp_wordCount_V <= dmp_wordCount_V_new_2_phi_fu_185_p4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((dmp_fsmState_V = ap_const_lv1_0)))) then
                tmp_2_reg_398 <= tmp_2_fu_290_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((dmp_fsmState_V = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_2_fu_290_p2))) then
                tmp_5_reg_402 <= tmp_5_fu_296_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_lv1_0 = cond_fu_219_p2))) then
                tmp_8_reg_390 <= tmp_8_fu_266_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (dmp_fsmState_V = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                tmp_reg_364 <= tmp_nbreadreq_fu_86_p5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_lv1_0 = cond_fu_219_p2) and (ap_const_lv1_0 = tmp_8_fu_266_p2))) then
                tmp_s_reg_394 <= tmp_s_fu_272_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_done_reg, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_49, dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_2_reg_398, ap_sig_bdd_83, ap_sig_ioackin_m_axis_ARP_TREADY, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_49, dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_2_reg_398, ap_sig_bdd_83, ap_sig_ioackin_m_axis_ARP_TREADY)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_49, dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_2_reg_398, ap_sig_bdd_83, ap_sig_ioackin_m_axis_ARP_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_dmp_macType_V_loc_reg_139pp0_it0 <= "XXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_148pp0_it0 <= "X";
    ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_170pp0_it0 <= "X";
    ap_reg_phiprechg_dmp_wordCount_V_flag_reg_128pp0_it0 <= "X";
    ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_159pp0_it0 <= "XX";
    ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_182pp0_it0 <= "XX";
    ap_reg_ppiten_pp0_it0 <= ap_start;

    -- ap_sig_bdd_101 assign process. --
    ap_sig_bdd_101_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_49, dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_2_reg_398, ap_sig_bdd_83, ap_sig_ioackin_m_axis_ARP_TREADY)
    begin
                ap_sig_bdd_101 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_177 assign process. --
    ap_sig_bdd_177_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_86_p5, dmp_fsmState_V, cond_fu_219_p2)
    begin
                ap_sig_bdd_177 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)) and (ap_const_lv1_0 = cond_fu_219_p2));
    end process;


    -- ap_sig_bdd_190 assign process. --
    ap_sig_bdd_190_assign_proc : process(tmp_nbreadreq_fu_86_p5, dmp_fsmState_V, tmp_last_V_2_fu_211_p1)
    begin
                ap_sig_bdd_190 <= ((dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)) and not((ap_const_lv1_0 = tmp_last_V_2_fu_211_p1)));
    end process;


    -- ap_sig_bdd_20 assign process. --
    ap_sig_bdd_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_211 assign process. --
    ap_sig_bdd_211_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_49, ap_sig_bdd_83)
    begin
                ap_sig_bdd_211 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or (ap_sig_bdd_83 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_231 assign process. --
    ap_sig_bdd_231_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_86_p5, dmp_fsmState_V)
    begin
                ap_sig_bdd_231 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)));
    end process;


    -- ap_sig_bdd_49 assign process. --
    ap_sig_bdd_49_assign_proc : process(ap_start, ap_done_reg, s_axis_raw_TVALID, tmp_nbreadreq_fu_86_p5, dmp_fsmState_V)
    begin
                ap_sig_bdd_49 <= (((s_axis_raw_TVALID = ap_const_logic_0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_72 assign process. --
    ap_sig_bdd_72_assign_proc : process(dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_s_reg_394)
    begin
                ap_sig_bdd_72 <= ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and (ap_const_lv1_0 = tmp_8_reg_390) and not((ap_const_lv1_0 = tmp_s_reg_394)));
    end process;


    -- ap_sig_bdd_81 assign process. --
    ap_sig_bdd_81_assign_proc : process(dmp_fsmState_V_load_reg_360, tmp_2_reg_398, tmp_5_reg_402)
    begin
                ap_sig_bdd_81 <= (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_lv1_0 = tmp_2_reg_398) and not((ap_const_lv1_0 = tmp_5_reg_402)));
    end process;


    -- ap_sig_bdd_83 assign process. --
    ap_sig_bdd_83_assign_proc : process(ipDataFifo_V_full_n, dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_s_reg_394, tmp_2_reg_398, tmp_5_reg_402)
    begin
                ap_sig_bdd_83 <= (((ipDataFifo_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and (ap_const_lv1_0 = tmp_8_reg_390) and not((ap_const_lv1_0 = tmp_s_reg_394))) or ((ipDataFifo_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_lv1_0 = tmp_2_reg_398) and not((ap_const_lv1_0 = tmp_5_reg_402))));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_bdd_20)
    begin
        if (ap_sig_bdd_20) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axis_ARP_TREADY assign process. --
    ap_sig_ioackin_m_axis_ARP_TREADY_assign_proc : process(m_axis_ARP_TREADY, ap_reg_ioackin_m_axis_ARP_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axis_ARP_TREADY)) then 
            ap_sig_ioackin_m_axis_ARP_TREADY <= m_axis_ARP_TREADY;
        else 
            ap_sig_ioackin_m_axis_ARP_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_pprstidle_pp0 assign process. --
    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_start))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_219_p2 <= "1" when (dmp_wordCount_V = ap_const_lv2_0) else "0";

    -- dmp_macType_V_loc_phi_fu_142_p4 assign process. --
    dmp_macType_V_loc_phi_fu_142_p4_assign_proc : process(dmp_macType_V, tmp_6_fu_225_p2, p_Result_s_fu_251_p3, ap_reg_phiprechg_dmp_macType_V_loc_reg_139pp0_it0, ap_sig_bdd_177)
    begin
        if (ap_sig_bdd_177) then
            if ((ap_const_lv1_0 = tmp_6_fu_225_p2)) then 
                dmp_macType_V_loc_phi_fu_142_p4 <= dmp_macType_V;
            elsif (not((ap_const_lv1_0 = tmp_6_fu_225_p2))) then 
                dmp_macType_V_loc_phi_fu_142_p4 <= p_Result_s_fu_251_p3;
            else 
                dmp_macType_V_loc_phi_fu_142_p4 <= ap_reg_phiprechg_dmp_macType_V_loc_reg_139pp0_it0;
            end if;
        else 
            dmp_macType_V_loc_phi_fu_142_p4 <= ap_reg_phiprechg_dmp_macType_V_loc_reg_139pp0_it0;
        end if; 
    end process;


    -- dmp_wordCount_V_flag_1_phi_fu_151_p4 assign process. --
    dmp_wordCount_V_flag_1_phi_fu_151_p4_assign_proc : process(cond_fu_219_p2, dmp_wordCount_V_flag_phi_fu_131_p4, ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_148pp0_it0, ap_sig_bdd_231)
    begin
        if (ap_sig_bdd_231) then
            if (not((ap_const_lv1_0 = cond_fu_219_p2))) then 
                dmp_wordCount_V_flag_1_phi_fu_151_p4 <= ap_const_lv1_1;
            elsif ((ap_const_lv1_0 = cond_fu_219_p2)) then 
                dmp_wordCount_V_flag_1_phi_fu_151_p4 <= dmp_wordCount_V_flag_phi_fu_131_p4;
            else 
                dmp_wordCount_V_flag_1_phi_fu_151_p4 <= ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_148pp0_it0;
            end if;
        else 
            dmp_wordCount_V_flag_1_phi_fu_151_p4 <= ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_148pp0_it0;
        end if; 
    end process;


    -- dmp_wordCount_V_flag_2_phi_fu_173_p4 assign process. --
    dmp_wordCount_V_flag_2_phi_fu_173_p4_assign_proc : process(tmp_last_V_2_fu_211_p1, dmp_wordCount_V_flag_1_phi_fu_151_p4, ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_170pp0_it0, ap_sig_bdd_231)
    begin
        if (ap_sig_bdd_231) then
            if ((ap_const_lv1_0 = tmp_last_V_2_fu_211_p1)) then 
                dmp_wordCount_V_flag_2_phi_fu_173_p4 <= dmp_wordCount_V_flag_1_phi_fu_151_p4;
            elsif (not((ap_const_lv1_0 = tmp_last_V_2_fu_211_p1))) then 
                dmp_wordCount_V_flag_2_phi_fu_173_p4 <= ap_const_lv1_1;
            else 
                dmp_wordCount_V_flag_2_phi_fu_173_p4 <= ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_170pp0_it0;
            end if;
        else 
            dmp_wordCount_V_flag_2_phi_fu_173_p4 <= ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_170pp0_it0;
        end if; 
    end process;


    -- dmp_wordCount_V_flag_phi_fu_131_p4 assign process. --
    dmp_wordCount_V_flag_phi_fu_131_p4_assign_proc : process(ap_reg_phiprechg_dmp_wordCount_V_flag_reg_128pp0_it0, tmp_6_fu_225_p2, ap_sig_bdd_177)
    begin
        if (ap_sig_bdd_177) then
            if ((ap_const_lv1_0 = tmp_6_fu_225_p2)) then 
                dmp_wordCount_V_flag_phi_fu_131_p4 <= ap_const_lv1_0;
            elsif (not((ap_const_lv1_0 = tmp_6_fu_225_p2))) then 
                dmp_wordCount_V_flag_phi_fu_131_p4 <= ap_const_lv1_1;
            else 
                dmp_wordCount_V_flag_phi_fu_131_p4 <= ap_reg_phiprechg_dmp_wordCount_V_flag_reg_128pp0_it0;
            end if;
        else 
            dmp_wordCount_V_flag_phi_fu_131_p4 <= ap_reg_phiprechg_dmp_wordCount_V_flag_reg_128pp0_it0;
        end if; 
    end process;


    -- dmp_wordCount_V_new_1_phi_fu_162_p4 assign process. --
    dmp_wordCount_V_new_1_phi_fu_162_p4_assign_proc : process(cond_fu_219_p2, ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_159pp0_it0, ap_sig_bdd_231)
    begin
        if (ap_sig_bdd_231) then
            if (not((ap_const_lv1_0 = cond_fu_219_p2))) then 
                dmp_wordCount_V_new_1_phi_fu_162_p4 <= ap_const_lv2_1;
            elsif ((ap_const_lv1_0 = cond_fu_219_p2)) then 
                dmp_wordCount_V_new_1_phi_fu_162_p4 <= ap_const_lv2_2;
            else 
                dmp_wordCount_V_new_1_phi_fu_162_p4 <= ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_159pp0_it0;
            end if;
        else 
            dmp_wordCount_V_new_1_phi_fu_162_p4 <= ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_159pp0_it0;
        end if; 
    end process;


    -- dmp_wordCount_V_new_2_phi_fu_185_p4 assign process. --
    dmp_wordCount_V_new_2_phi_fu_185_p4_assign_proc : process(tmp_last_V_2_fu_211_p1, dmp_wordCount_V_new_1_phi_fu_162_p4, ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_182pp0_it0, ap_sig_bdd_231)
    begin
        if (ap_sig_bdd_231) then
            if ((ap_const_lv1_0 = tmp_last_V_2_fu_211_p1)) then 
                dmp_wordCount_V_new_2_phi_fu_185_p4 <= dmp_wordCount_V_new_1_phi_fu_162_p4;
            elsif (not((ap_const_lv1_0 = tmp_last_V_2_fu_211_p1))) then 
                dmp_wordCount_V_new_2_phi_fu_185_p4 <= ap_const_lv2_0;
            else 
                dmp_wordCount_V_new_2_phi_fu_185_p4 <= ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_182pp0_it0;
            end if;
        else 
            dmp_wordCount_V_new_2_phi_fu_185_p4 <= ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_182pp0_it0;
        end if; 
    end process;


    -- ipDataFifo_V_din assign process. --
    ipDataFifo_V_din_assign_proc : process(tmp9_fu_323_p4, tmp_116_fu_349_p4, ap_sig_bdd_72, ap_sig_bdd_81, ap_sig_bdd_211)
    begin
        if (ap_sig_bdd_211) then
            if (ap_sig_bdd_81) then 
                ipDataFifo_V_din <= tmp_116_fu_349_p4;
            elsif (ap_sig_bdd_72) then 
                ipDataFifo_V_din <= tmp9_fu_323_p4;
            else 
                ipDataFifo_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ipDataFifo_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- ipDataFifo_V_write assign process. --
    ipDataFifo_V_write_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_49, dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_s_reg_394, tmp_2_reg_398, tmp_5_reg_402, ap_sig_bdd_83, ap_sig_ioackin_m_axis_ARP_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and (ap_const_lv1_0 = tmp_8_reg_390) and not((ap_const_lv1_0 = tmp_s_reg_394)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_lv1_0 = tmp_2_reg_398) and not((ap_const_lv1_0 = tmp_5_reg_402)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            ipDataFifo_V_write <= ap_const_logic_1;
        else 
            ipDataFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_ARP_TDATA <= dmp_prevWord_data_V;
    m_axis_ARP_TKEEP <= dmp_prevWord_keep_V;
    m_axis_ARP_TLAST <= dmp_prevWord_last_V;

    -- m_axis_ARP_TVALID assign process. --
    m_axis_ARP_TVALID_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_49, dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_2_reg_398, ap_sig_bdd_83, ap_reg_ioackin_m_axis_ARP_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or (ap_sig_bdd_83 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_logic_0 = ap_reg_ioackin_m_axis_ARP_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and not((ap_const_lv1_0 = tmp_2_reg_398)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or (ap_sig_bdd_83 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_logic_0 = ap_reg_ioackin_m_axis_ARP_TREADY)))) then 
            m_axis_ARP_TVALID <= ap_const_logic_1;
        else 
            m_axis_ARP_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_4_fu_231_p4 <= s_axis_raw_TDATA(47 downto 40);
    p_Result_6_fu_241_p4 <= s_axis_raw_TDATA(39 downto 32);
    p_Result_s_fu_251_p3 <= (p_Result_6_fu_241_p4 & p_Result_4_fu_231_p4);

    -- s_axis_raw_TREADY assign process. --
    s_axis_raw_TREADY_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, tmp_nbreadreq_fu_86_p5, ap_sig_bdd_49, dmp_fsmState_V_load_reg_360, tmp_reg_364, cond_reg_383, tmp_8_reg_390, tmp_2_reg_398, ap_sig_bdd_83, ap_sig_ioackin_m_axis_ARP_TREADY, dmp_fsmState_V)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dmp_fsmState_V = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_86_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_49) or ((ap_sig_bdd_83 or ((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360) and not((ap_const_lv1_0 = tmp_reg_364)) and (ap_const_lv1_0 = cond_reg_383) and not((ap_const_lv1_0 = tmp_8_reg_390)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY)) or (not((ap_const_lv1_0 = dmp_fsmState_V_load_reg_360)) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ARP_TREADY) and not((ap_const_lv1_0 = tmp_2_reg_398)))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            s_axis_raw_TREADY <= ap_const_logic_1;
        else 
            s_axis_raw_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    tmp9_fu_323_p4 <= ((dmp_prevWord_last_V & dmp_prevWord_keep_V) & dmp_prevWord_data_V);
    tmp_116_fu_349_p4 <= ((dmp_prevWord_last_V & dmp_prevWord_keep_V) & dmp_prevWord_data_V);
    tmp_2_fu_290_p2 <= "1" when (dmp_macType_V = ap_const_lv16_806) else "0";
    tmp_5_fu_296_p2 <= "1" when (dmp_macType_V = ap_const_lv16_800) else "0";
    tmp_6_fu_225_p2 <= "1" when (dmp_wordCount_V = ap_const_lv2_1) else "0";
    tmp_8_fu_266_p2 <= "1" when (dmp_macType_V_loc_phi_fu_142_p4 = ap_const_lv16_806) else "0";
    tmp_last_V_2_fu_211_p1 <= s_axis_raw_TLAST;
    tmp_nbreadreq_fu_86_p5 <= (0=>(s_axis_raw_TVALID), others=>'-');
    tmp_s_fu_272_p2 <= "1" when (dmp_macType_V_loc_phi_fu_142_p4 = ap_const_lv16_800) else "0";
end behav;
