-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ip_handler_detect_ip_protocol is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ipDataCutFifo_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
    ipDataCutFifo_V_empty_n : IN STD_LOGIC;
    ipDataCutFifo_V_read : OUT STD_LOGIC;
    m_axis_TCP_TREADY : IN STD_LOGIC;
    m_axis_UDP_TREADY : IN STD_LOGIC;
    m_axis_ICMP_TREADY : IN STD_LOGIC;
    m_axis_ICMP_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_ICMP_TVALID : OUT STD_LOGIC;
    m_axis_ICMP_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_ICMP_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_UDP_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_UDP_TVALID : OUT STD_LOGIC;
    m_axis_UDP_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_UDP_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_TCP_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_TCP_TVALID : OUT STD_LOGIC;
    m_axis_TCP_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_TCP_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of ip_handler_detect_ip_protocol is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_true : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_20 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal tmp_nbreadreq_fu_92_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_52 : BOOLEAN;
    signal dip_state_load_reg_330 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_338 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_357 : STD_LOGIC_VECTOR (0 downto 0);
    signal dip_ipProtocol_V_loc_reg_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_ioackin_m_axis_TCP_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_m_axis_UDP_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_m_axis_ICMP_TREADY : STD_LOGIC;
    signal dip_ipProtocol_V_load_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal dip_state : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dip_ipProtocol_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal dip_prevWord_data_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dip_prevWord_keep_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal dip_prevWord_last_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dip_wordCount_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal p_Val2_s_fu_221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_reg_342 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_load_new_reg_347 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_124_fu_235_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_reg_352 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dip_wordCount_V_flag_phi_fu_148_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_dip_ipProtocol_V_loc_reg_156pp0_it0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal dip_wordCount_V_flag_1_phi_fu_169_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal dip_wordCount_V_new_1_phi_fu_180_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal dip_wordCount_V_flag_2_phi_fu_191_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal dip_wordCount_V_new_2_phi_fu_203_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ioackin_m_axis_TCP_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axis_UDP_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axis_ICMP_TREADY : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;
    signal ap_sig_bdd_157 : BOOLEAN;
    signal ap_sig_bdd_163 : BOOLEAN;
    signal ap_sig_bdd_107 : BOOLEAN;
    signal ap_sig_bdd_185 : BOOLEAN;
    signal ap_sig_bdd_217 : BOOLEAN;
    signal ap_sig_bdd_172 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axis_ICMP_TREADY assign process. --
    ap_reg_ioackin_m_axis_ICMP_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axis_ICMP_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
                    ap_reg_ioackin_m_axis_ICMP_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_1 = m_axis_ICMP_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_1 = m_axis_ICMP_TREADY)))) then 
                    ap_reg_ioackin_m_axis_ICMP_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axis_TCP_TREADY assign process. --
    ap_reg_ioackin_m_axis_TCP_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axis_TCP_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
                    ap_reg_ioackin_m_axis_TCP_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_1 = m_axis_TCP_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_1 = m_axis_TCP_TREADY)))) then 
                    ap_reg_ioackin_m_axis_TCP_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axis_UDP_TREADY assign process. --
    ap_reg_ioackin_m_axis_UDP_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axis_UDP_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
                    ap_reg_ioackin_m_axis_UDP_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_1 = m_axis_UDP_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_1 = m_axis_UDP_TREADY)))) then 
                    ap_reg_ioackin_m_axis_UDP_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                end if; 
            end if;
        end if;
    end process;


    -- dip_ipProtocol_V_loc_reg_156 assign process. --
    dip_ipProtocol_V_loc_reg_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_107) then
                if (ap_sig_bdd_163) then 
                    dip_ipProtocol_V_loc_reg_156 <= dip_ipProtocol_V;
                elsif (ap_sig_bdd_157) then 
                    dip_ipProtocol_V_loc_reg_156 <= ipDataCutFifo_V_dout(15 downto 8);
                elsif ((ap_true = ap_true)) then 
                    dip_ipProtocol_V_loc_reg_156 <= ap_reg_phiprechg_dip_ipProtocol_V_loc_reg_156pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- dip_state assign process. --
    dip_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_107) then
                if (not((dip_state = ap_const_lv1_0))) then 
                    dip_state <= ap_const_lv1_0;
                elsif (ap_sig_bdd_185) then 
                    dip_state <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                cond_reg_357 <= cond_fu_247_p2;
                p_Val2_s_reg_342 <= p_Val2_s_fu_221_p1;
                tmp_124_reg_352 <= ipDataCutFifo_V_dout(72 downto 72);
                tmp_keep_V_load_new_reg_347 <= ipDataCutFifo_V_dout(71 downto 64);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_lv1_0 = cond_fu_247_p2) and not((ap_const_lv1_0 = tmp_s_fu_253_p2)))) then
                dip_ipProtocol_V <= ipDataCutFifo_V_dout(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                dip_ipProtocol_V_load_reg_334 <= dip_ipProtocol_V;
                dip_state_load_reg_330 <= dip_state;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                dip_prevWord_data_V <= p_Val2_s_reg_342;
                dip_prevWord_keep_V <= tmp_keep_V_load_new_reg_347;
                dip_prevWord_last_V <= tmp_124_reg_352;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv1_0 = dip_wordCount_V_flag_2_phi_fu_191_p4)))) then
                dip_wordCount_V <= dip_wordCount_V_new_2_phi_fu_203_p4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (dip_state = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                tmp_reg_338 <= tmp_nbreadreq_fu_92_p3;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_done_reg, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, dip_state_load_reg_330, tmp_reg_338, cond_reg_357, dip_ipProtocol_V_loc_reg_156, ap_sig_ioackin_m_axis_TCP_TREADY, ap_sig_ioackin_m_axis_UDP_TREADY, ap_sig_ioackin_m_axis_ICMP_TREADY, dip_ipProtocol_V_load_reg_334, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, dip_state_load_reg_330, tmp_reg_338, cond_reg_357, dip_ipProtocol_V_loc_reg_156, ap_sig_ioackin_m_axis_TCP_TREADY, ap_sig_ioackin_m_axis_UDP_TREADY, ap_sig_ioackin_m_axis_ICMP_TREADY, dip_ipProtocol_V_load_reg_334)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, dip_state_load_reg_330, tmp_reg_338, cond_reg_357, dip_ipProtocol_V_loc_reg_156, ap_sig_ioackin_m_axis_TCP_TREADY, ap_sig_ioackin_m_axis_UDP_TREADY, ap_sig_ioackin_m_axis_ICMP_TREADY, dip_ipProtocol_V_load_reg_334)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_dip_ipProtocol_V_loc_reg_156pp0_it0 <= "XXXXXXXX";
    ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0 <= "X";
    ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0 <= "X";
    ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0 <= "X";
    ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0 <= "XX";
    ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0 <= "XX";
    ap_reg_ppiten_pp0_it0 <= ap_start;

    -- ap_sig_bdd_107 assign process. --
    ap_sig_bdd_107_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, dip_state_load_reg_330, tmp_reg_338, cond_reg_357, dip_ipProtocol_V_loc_reg_156, ap_sig_ioackin_m_axis_TCP_TREADY, ap_sig_ioackin_m_axis_UDP_TREADY, ap_sig_ioackin_m_axis_ICMP_TREADY, dip_ipProtocol_V_load_reg_334)
    begin
                ap_sig_bdd_107 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_157 assign process. --
    ap_sig_bdd_157_assign_proc : process(tmp_nbreadreq_fu_92_p3, dip_state, cond_fu_247_p2, tmp_s_fu_253_p2)
    begin
                ap_sig_bdd_157 <= ((dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)) and (ap_const_lv1_0 = cond_fu_247_p2) and not((ap_const_lv1_0 = tmp_s_fu_253_p2)));
    end process;


    -- ap_sig_bdd_163 assign process. --
    ap_sig_bdd_163_assign_proc : process(tmp_nbreadreq_fu_92_p3, dip_state, cond_fu_247_p2, tmp_s_fu_253_p2)
    begin
                ap_sig_bdd_163 <= ((dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)) and (ap_const_lv1_0 = cond_fu_247_p2) and (ap_const_lv1_0 = tmp_s_fu_253_p2));
    end process;


    -- ap_sig_bdd_172 assign process. --
    ap_sig_bdd_172_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_92_p3, dip_state, cond_fu_247_p2)
    begin
                ap_sig_bdd_172 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)) and (ap_const_lv1_0 = cond_fu_247_p2));
    end process;


    -- ap_sig_bdd_185 assign process. --
    ap_sig_bdd_185_assign_proc : process(tmp_nbreadreq_fu_92_p3, dip_state, tmp_124_fu_235_p3)
    begin
                ap_sig_bdd_185 <= ((dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)) and not((ap_const_lv1_0 = tmp_124_fu_235_p3)));
    end process;


    -- ap_sig_bdd_20 assign process. --
    ap_sig_bdd_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_217 assign process. --
    ap_sig_bdd_217_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_92_p3, dip_state)
    begin
                ap_sig_bdd_217 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)));
    end process;


    -- ap_sig_bdd_52 assign process. --
    ap_sig_bdd_52_assign_proc : process(ap_start, ap_done_reg, ipDataCutFifo_V_empty_n, tmp_nbreadreq_fu_92_p3, dip_state)
    begin
                ap_sig_bdd_52 <= (((ipDataCutFifo_V_empty_n = ap_const_logic_0) and (dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_bdd_20)
    begin
        if (ap_sig_bdd_20) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axis_ICMP_TREADY assign process. --
    ap_sig_ioackin_m_axis_ICMP_TREADY_assign_proc : process(m_axis_ICMP_TREADY, ap_reg_ioackin_m_axis_ICMP_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axis_ICMP_TREADY)) then 
            ap_sig_ioackin_m_axis_ICMP_TREADY <= m_axis_ICMP_TREADY;
        else 
            ap_sig_ioackin_m_axis_ICMP_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axis_TCP_TREADY assign process. --
    ap_sig_ioackin_m_axis_TCP_TREADY_assign_proc : process(m_axis_TCP_TREADY, ap_reg_ioackin_m_axis_TCP_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axis_TCP_TREADY)) then 
            ap_sig_ioackin_m_axis_TCP_TREADY <= m_axis_TCP_TREADY;
        else 
            ap_sig_ioackin_m_axis_TCP_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axis_UDP_TREADY assign process. --
    ap_sig_ioackin_m_axis_UDP_TREADY_assign_proc : process(m_axis_UDP_TREADY, ap_reg_ioackin_m_axis_UDP_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axis_UDP_TREADY)) then 
            ap_sig_ioackin_m_axis_UDP_TREADY <= m_axis_UDP_TREADY;
        else 
            ap_sig_ioackin_m_axis_UDP_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_pprstidle_pp0 assign process. --
    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_start))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_247_p2 <= "1" when (dip_wordCount_V = ap_const_lv2_0) else "0";

    -- dip_wordCount_V_flag_1_phi_fu_169_p4 assign process. --
    dip_wordCount_V_flag_1_phi_fu_169_p4_assign_proc : process(cond_fu_247_p2, dip_wordCount_V_flag_phi_fu_148_p4, ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0, ap_sig_bdd_217)
    begin
        if (ap_sig_bdd_217) then
            if (not((ap_const_lv1_0 = cond_fu_247_p2))) then 
                dip_wordCount_V_flag_1_phi_fu_169_p4 <= ap_const_lv1_1;
            elsif ((ap_const_lv1_0 = cond_fu_247_p2)) then 
                dip_wordCount_V_flag_1_phi_fu_169_p4 <= dip_wordCount_V_flag_phi_fu_148_p4;
            else 
                dip_wordCount_V_flag_1_phi_fu_169_p4 <= ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0;
            end if;
        else 
            dip_wordCount_V_flag_1_phi_fu_169_p4 <= ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_166pp0_it0;
        end if; 
    end process;


    -- dip_wordCount_V_flag_2_phi_fu_191_p4 assign process. --
    dip_wordCount_V_flag_2_phi_fu_191_p4_assign_proc : process(tmp_124_fu_235_p3, dip_wordCount_V_flag_1_phi_fu_169_p4, ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0, ap_sig_bdd_217)
    begin
        if (ap_sig_bdd_217) then
            if ((ap_const_lv1_0 = tmp_124_fu_235_p3)) then 
                dip_wordCount_V_flag_2_phi_fu_191_p4 <= dip_wordCount_V_flag_1_phi_fu_169_p4;
            elsif (not((ap_const_lv1_0 = tmp_124_fu_235_p3))) then 
                dip_wordCount_V_flag_2_phi_fu_191_p4 <= ap_const_lv1_1;
            else 
                dip_wordCount_V_flag_2_phi_fu_191_p4 <= ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0;
            end if;
        else 
            dip_wordCount_V_flag_2_phi_fu_191_p4 <= ap_reg_phiprechg_dip_wordCount_V_flag_2_reg_188pp0_it0;
        end if; 
    end process;


    -- dip_wordCount_V_flag_phi_fu_148_p4 assign process. --
    dip_wordCount_V_flag_phi_fu_148_p4_assign_proc : process(ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0, tmp_s_fu_253_p2, ap_sig_bdd_172)
    begin
        if (ap_sig_bdd_172) then
            if ((ap_const_lv1_0 = tmp_s_fu_253_p2)) then 
                dip_wordCount_V_flag_phi_fu_148_p4 <= ap_const_lv1_0;
            elsif (not((ap_const_lv1_0 = tmp_s_fu_253_p2))) then 
                dip_wordCount_V_flag_phi_fu_148_p4 <= ap_const_lv1_1;
            else 
                dip_wordCount_V_flag_phi_fu_148_p4 <= ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0;
            end if;
        else 
            dip_wordCount_V_flag_phi_fu_148_p4 <= ap_reg_phiprechg_dip_wordCount_V_flag_reg_145pp0_it0;
        end if; 
    end process;


    -- dip_wordCount_V_new_1_phi_fu_180_p4 assign process. --
    dip_wordCount_V_new_1_phi_fu_180_p4_assign_proc : process(cond_fu_247_p2, ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0, ap_sig_bdd_217)
    begin
        if (ap_sig_bdd_217) then
            if (not((ap_const_lv1_0 = cond_fu_247_p2))) then 
                dip_wordCount_V_new_1_phi_fu_180_p4 <= ap_const_lv2_1;
            elsif ((ap_const_lv1_0 = cond_fu_247_p2)) then 
                dip_wordCount_V_new_1_phi_fu_180_p4 <= ap_const_lv2_2;
            else 
                dip_wordCount_V_new_1_phi_fu_180_p4 <= ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0;
            end if;
        else 
            dip_wordCount_V_new_1_phi_fu_180_p4 <= ap_reg_phiprechg_dip_wordCount_V_new_1_reg_177pp0_it0;
        end if; 
    end process;


    -- dip_wordCount_V_new_2_phi_fu_203_p4 assign process. --
    dip_wordCount_V_new_2_phi_fu_203_p4_assign_proc : process(tmp_124_fu_235_p3, dip_wordCount_V_new_1_phi_fu_180_p4, ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0, ap_sig_bdd_217)
    begin
        if (ap_sig_bdd_217) then
            if ((ap_const_lv1_0 = tmp_124_fu_235_p3)) then 
                dip_wordCount_V_new_2_phi_fu_203_p4 <= dip_wordCount_V_new_1_phi_fu_180_p4;
            elsif (not((ap_const_lv1_0 = tmp_124_fu_235_p3))) then 
                dip_wordCount_V_new_2_phi_fu_203_p4 <= ap_const_lv2_0;
            else 
                dip_wordCount_V_new_2_phi_fu_203_p4 <= ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0;
            end if;
        else 
            dip_wordCount_V_new_2_phi_fu_203_p4 <= ap_reg_phiprechg_dip_wordCount_V_new_2_reg_200pp0_it0;
        end if; 
    end process;


    -- ipDataCutFifo_V_read assign process. --
    ipDataCutFifo_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, tmp_nbreadreq_fu_92_p3, ap_sig_bdd_52, dip_state_load_reg_330, tmp_reg_338, cond_reg_357, dip_ipProtocol_V_loc_reg_156, ap_sig_ioackin_m_axis_TCP_TREADY, ap_sig_ioackin_m_axis_UDP_TREADY, ap_sig_ioackin_m_axis_ICMP_TREADY, dip_ipProtocol_V_load_reg_334, dip_state)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (dip_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_92_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or ((((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY)) or ((ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_TCP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_UDP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334)) or ((ap_const_logic_0 = ap_sig_ioackin_m_axis_ICMP_TREADY) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            ipDataCutFifo_V_read <= ap_const_logic_1;
        else 
            ipDataCutFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_ICMP_TDATA <= dip_prevWord_data_V;
    m_axis_ICMP_TKEEP <= dip_prevWord_keep_V;
    m_axis_ICMP_TLAST <= dip_prevWord_last_V;

    -- m_axis_ICMP_TVALID assign process. --
    m_axis_ICMP_TVALID_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, dip_state_load_reg_330, tmp_reg_338, cond_reg_357, dip_ipProtocol_V_loc_reg_156, dip_ipProtocol_V_load_reg_334, ap_reg_ioackin_m_axis_ICMP_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_0 = ap_reg_ioackin_m_axis_ICMP_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_1 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_0 = ap_reg_ioackin_m_axis_ICMP_TREADY)))) then 
            m_axis_ICMP_TVALID <= ap_const_logic_1;
        else 
            m_axis_ICMP_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_TCP_TDATA <= dip_prevWord_data_V;
    m_axis_TCP_TKEEP <= dip_prevWord_keep_V;
    m_axis_TCP_TLAST <= dip_prevWord_last_V;

    -- m_axis_TCP_TVALID assign process. --
    m_axis_TCP_TVALID_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, dip_state_load_reg_330, tmp_reg_338, cond_reg_357, dip_ipProtocol_V_loc_reg_156, dip_ipProtocol_V_load_reg_334, ap_reg_ioackin_m_axis_TCP_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_0 = ap_reg_ioackin_m_axis_TCP_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_6 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_0 = ap_reg_ioackin_m_axis_TCP_TREADY)))) then 
            m_axis_TCP_TVALID <= ap_const_logic_1;
        else 
            m_axis_TCP_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_UDP_TDATA <= dip_prevWord_data_V;
    m_axis_UDP_TKEEP <= dip_prevWord_keep_V;
    m_axis_UDP_TLAST <= dip_prevWord_last_V;

    -- m_axis_UDP_TVALID assign process. --
    m_axis_UDP_TVALID_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, dip_state_load_reg_330, tmp_reg_338, cond_reg_357, dip_ipProtocol_V_loc_reg_156, dip_ipProtocol_V_load_reg_334, ap_reg_ioackin_m_axis_UDP_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = dip_state_load_reg_330) and not((ap_const_lv1_0 = tmp_reg_338)) and (ap_const_lv1_0 = cond_reg_357) and (dip_ipProtocol_V_loc_reg_156 = ap_const_lv8_11) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_0 = ap_reg_ioackin_m_axis_UDP_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = dip_state_load_reg_330)) and (ap_const_lv8_11 = dip_ipProtocol_V_load_reg_334) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52))) and (ap_const_logic_0 = ap_reg_ioackin_m_axis_UDP_TREADY)))) then 
            m_axis_UDP_TVALID <= ap_const_logic_1;
        else 
            m_axis_UDP_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_s_fu_221_p1 <= ipDataCutFifo_V_dout(64 - 1 downto 0);
    tmp_124_fu_235_p3 <= ipDataCutFifo_V_dout(72 downto 72);
    tmp_nbreadreq_fu_92_p3 <= (0=>ipDataCutFifo_V_empty_n, others=>'-');
    tmp_s_fu_253_p2 <= "1" when (dip_wordCount_V = ap_const_lv2_1) else "0";
end behav;
