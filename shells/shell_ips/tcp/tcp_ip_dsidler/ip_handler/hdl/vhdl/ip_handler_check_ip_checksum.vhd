-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ip_handler_check_ip_checksum is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ipDataFifo_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
    ipDataFifo_V_empty_n : IN STD_LOGIC;
    ipDataFifo_V_read : OUT STD_LOGIC;
    iph_subSumsFifoOut_V_din : OUT STD_LOGIC_VECTOR (68 downto 0);
    iph_subSumsFifoOut_V_full_n : IN STD_LOGIC;
    iph_subSumsFifoOut_V_write : OUT STD_LOGIC;
    ipDataCheckFifo_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    ipDataCheckFifo_V_full_n : IN STD_LOGIC;
    ipDataCheckFifo_V_write : OUT STD_LOGIC;
    myIpAddress_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ip_handler_check_ip_checksum is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_true : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_20 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal tmp_nbreadreq_fu_202_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_52 : BOOLEAN;
    signal cics_state_load_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_load_reg_1614 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_ipHeaderLen_V_load_reg_1618 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_reg_1635 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_106 : BOOLEAN;
    signal cics_state : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cics_prevWord_data_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal cics_prevWord_keep_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal cics_wordCount_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal cics_ip_sums_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ip_sums_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ip_sums_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ip_sums_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ipHeaderLen_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal cics_dstIpAddress_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_443 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_447 : STD_LOGIC_VECTOR (1 downto 0);
    signal myIpAddress_V_read_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_1592 : STD_LOGIC_VECTOR (72 downto 0);
    signal currWord_last_V_fu_479_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_load_load_fu_487_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_ipHeaderLen_V_load_load_fu_495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_fu_562_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_1639 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_flag_reg_230pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_flag_phi_fu_233_p16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_load_1_reg_259pp0_it0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_wordCount_V_load_1_phi_fu_262_p16 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_phiprechg_tmp_25_reg_284pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_phi_fu_287_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_295pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_flag_1_phi_fu_298_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_new_1_reg_307pp0_it0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_wordCount_V_new_1_phi_fu_310_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_fu_1260_p6 : STD_LOGIC_VECTOR (68 downto 0);
    signal tmp_113_fu_1328_p6 : STD_LOGIC_VECTOR (68 downto 0);
    signal tmp_335_fu_1542_p6 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_442_fu_1568_p4 : STD_LOGIC_VECTOR (72 downto 0);
    signal currWord_data_V_fu_465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_700_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_fu_887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum0_V_1_fu_1144_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum0_V_fu_1312_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_fu_1380_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_fu_746_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_fu_933_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum1_V_1_fu_1194_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_71_fu_1426_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_fu_792_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_fu_979_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum2_V_1_fu_1244_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_75_fu_1472_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_838_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_fu_1025_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_1071_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_fu_1518_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_fu_542_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_514_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_504_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_fu_532_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_62_fu_558_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_99_fu_586_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_663_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_363_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_14_fu_666_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal extLd_fu_635_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_674_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_678_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_46_fu_684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_696_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_692_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_381_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_372_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_67_1_fu_712_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum1_V_fu_643_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_1_fu_720_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_23_1_fu_724_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_50_fu_730_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_742_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_51_fu_738_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_399_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_390_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_67_2_fu_758_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum2_V_fu_651_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_2_fu_766_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_23_2_fu_770_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_fu_776_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_788_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_784_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_417_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_408_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_67_3_fu_804_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum3_V_fu_659_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_3_fu_812_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_23_3_fu_816_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_58_fu_822_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_834_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_fu_830_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_850_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_fu_853_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_861_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_865_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_fu_871_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_883_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_879_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_62_1_fu_899_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_1_fu_907_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_1_fu_911_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_33_fu_917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_929_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_925_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_62_2_fu_945_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_2_fu_953_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_2_fu_957_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_fu_963_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_975_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_971_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_62_3_fu_991_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_3_fu_999_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_3_fu_1003_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_41_fu_1009_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1021_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_1017_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_fu_1037_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_1045_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_fu_1049_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_fu_1055_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1067_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_1063_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_85_fu_1107_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_21_fu_1110_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1118_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_fu_1122_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_86_fu_1128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_1140_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_87_fu_1136_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_76_1_fu_1160_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_1_fu_1168_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_34_1_fu_1172_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_90_fu_1178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_1190_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_91_fu_1186_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_76_2_fu_1210_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_2_fu_1218_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_34_2_fu_1222_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_94_fu_1228_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_1240_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_95_fu_1236_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_sum2_V_1_cast_fu_1250_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_sum1_V_1_cast_fu_1200_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_sum0_V_1_cast_fu_1150_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_80_fu_1275_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_23_fu_1278_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_1286_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_1290_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_81_fu_1296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_1308_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_82_fu_1304_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum0_V_cast_fu_1318_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_63_fu_1343_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_18_fu_1346_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_1354_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_1358_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_64_fu_1364_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1376_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_fu_1372_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_80_1_fu_1392_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_1_fu_1400_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_1_fu_1404_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_68_fu_1410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_1422_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_69_fu_1418_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_80_2_fu_1438_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_2_fu_1446_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_2_fu_1450_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_72_fu_1456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_1468_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_fu_1464_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_80_3_fu_1484_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_3_fu_1492_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_3_fu_1496_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_76_fu_1502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_1514_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_77_fu_1510_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_16_fu_1533_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_98_fu_1530_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_24_fu_1556_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;
    signal ap_sig_bdd_182 : BOOLEAN;
    signal ap_sig_bdd_268 : BOOLEAN;
    signal ap_sig_bdd_113 : BOOLEAN;
    signal ap_sig_bdd_1020 : BOOLEAN;
    signal ap_sig_bdd_271 : BOOLEAN;
    signal ap_sig_bdd_1029 : BOOLEAN;
    signal ap_sig_bdd_1031 : BOOLEAN;
    signal ap_sig_bdd_1035 : BOOLEAN;
    signal ap_sig_bdd_1025 : BOOLEAN;
    signal ap_sig_bdd_285 : BOOLEAN;
    signal ap_sig_bdd_300 : BOOLEAN;
    signal ap_sig_bdd_100 : BOOLEAN;
    signal ap_sig_bdd_260 : BOOLEAN;
    signal ap_sig_bdd_1047 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it1 assign process. --
    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_113) then
                if (ap_sig_bdd_268) then 
                    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it1 <= cics_dstIpAddress_V;
                elsif (ap_sig_bdd_182) then 
                    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it1 <= p_Result_4_fu_562_p5;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it1 <= ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- cics_dstIpAddress_V assign process. --
    cics_dstIpAddress_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_271) then
                if (ap_sig_bdd_1020) then 
                    cics_dstIpAddress_V <= p_Result_4_fu_562_p5;
                elsif ((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) then 
                    cics_dstIpAddress_V <= p_Result_s_fu_514_p5;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ipHeaderLen_V assign process. --
    cics_ipHeaderLen_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_495_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_495_p1)))) then 
                cics_ipHeaderLen_V <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1))) then 
                cics_ipHeaderLen_V <= p_1_fu_542_p1;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_495_p1)) and not((ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_495_p1)) and not((ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_495_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)))) then 
                cics_ipHeaderLen_V <= grp_fu_328_p2;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_0 assign process. --
    cics_ip_sums_V_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1025) then
                if (ap_sig_bdd_1035) then 
                    cics_ip_sums_V_0 <= tmp_67_fu_1380_p2;
                elsif (ap_sig_bdd_1031) then 
                    cics_ip_sums_V_0 <= tmp_sum0_V_fu_1312_p2;
                elsif (ap_sig_bdd_1029) then 
                    cics_ip_sums_V_0 <= tmp_sum0_V_1_fu_1144_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) then 
                    cics_ip_sums_V_0 <= ap_const_lv16_0;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) then 
                    cics_ip_sums_V_0 <= tmp_32_fu_887_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) then 
                    cics_ip_sums_V_0 <= tmp_49_fu_700_p2;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_1 assign process. --
    cics_ip_sums_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1025) then
                if (ap_sig_bdd_1035) then 
                    cics_ip_sums_V_1 <= tmp_71_fu_1426_p2;
                elsif (ap_sig_bdd_1029) then 
                    cics_ip_sums_V_1 <= tmp_sum1_V_1_fu_1194_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) then 
                    cics_ip_sums_V_1 <= ap_const_lv16_0;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) then 
                    cics_ip_sums_V_1 <= tmp_36_fu_933_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) then 
                    cics_ip_sums_V_1 <= tmp_53_fu_746_p2;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_2 assign process. --
    cics_ip_sums_V_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1025) then
                if (ap_sig_bdd_1035) then 
                    cics_ip_sums_V_2 <= tmp_75_fu_1472_p2;
                elsif (ap_sig_bdd_1029) then 
                    cics_ip_sums_V_2 <= tmp_sum2_V_1_fu_1244_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) then 
                    cics_ip_sums_V_2 <= ap_const_lv16_0;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) then 
                    cics_ip_sums_V_2 <= tmp_40_fu_979_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) then 
                    cics_ip_sums_V_2 <= tmp_57_fu_792_p2;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_3 assign process. --
    cics_ip_sums_V_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1025) then
                if (ap_sig_bdd_1035) then 
                    cics_ip_sums_V_3 <= tmp_79_fu_1518_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) then 
                    cics_ip_sums_V_3 <= ap_const_lv16_0;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) then 
                    cics_ip_sums_V_3 <= tmp_23_fu_1071_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) then 
                    cics_ip_sums_V_3 <= tmp_44_fu_1025_p2;
                elsif ((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) then 
                    cics_ip_sums_V_3 <= tmp_61_fu_838_p2;
                end if;
            end if; 
        end if;
    end process;

    -- cics_state assign process. --
    cics_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_113) then
                if (not((cics_state = ap_const_lv1_0))) then 
                    cics_state <= ap_const_lv1_0;
                elsif (ap_sig_bdd_285) then 
                    cics_state <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                cics_ipHeaderLen_V_load_reg_1618 <= cics_ipHeaderLen_V;
                cics_wordCount_V_load_reg_1614 <= cics_wordCount_V;
                tmp1_reg_1592 <= ipDataFifo_V_dout;
                tmp_24_reg_1635 <= tmp_24_fu_580_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                cics_prevWord_data_V <= currWord_data_V_fu_465_p1;
                cics_prevWord_keep_V <= ipDataFifo_V_dout(71 downto 64);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                cics_state_load_reg_1584 <= cics_state;
                myIpAddress_V_read_reg_1579 <= myIpAddress_V;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv1_0 = cics_wordCount_V_flag_1_phi_fu_298_p4)))) then
                cics_wordCount_V <= cics_wordCount_V_new_1_phi_fu_310_p4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv1_0 = tmp_24_fu_580_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((cics_state = ap_const_lv1_0))))) then
                reg_443 <= cics_prevWord_data_V(63 downto 48);
                reg_447 <= cics_prevWord_keep_V(7 downto 6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv1_0 = tmp_24_fu_580_p2)))) then
                tmp_last_V_reg_1639 <= tmp_last_V_fu_594_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (cics_state = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                tmp_reg_1588 <= tmp_nbreadreq_fu_202_p3;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_done_reg, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, ap_sig_bdd_106, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, ap_sig_bdd_106)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, ap_sig_bdd_106)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_295pp0_it0 <= "X";
    ap_reg_phiprechg_cics_wordCount_V_flag_reg_230pp0_it0 <= "X";
    ap_reg_phiprechg_cics_wordCount_V_load_1_reg_259pp0_it0 <= "XXX";
    ap_reg_phiprechg_cics_wordCount_V_new_1_reg_307pp0_it0 <= "XXX";
    ap_reg_phiprechg_tmp_25_reg_284pp0_it0 <= "X";
    ap_reg_ppiten_pp0_it0 <= ap_start;

    -- ap_sig_bdd_100 assign process. --
    ap_sig_bdd_100_assign_proc : process(cics_state_load_reg_1584, tmp_reg_1588, tmp_24_reg_1635)
    begin
                ap_sig_bdd_100 <= ((ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and not((ap_const_lv1_0 = tmp_24_reg_1635)));
    end process;


    -- ap_sig_bdd_1020 assign process. --
    ap_sig_bdd_1020_assign_proc : process(cics_wordCount_V_load_load_fu_487_p1, tmp_1_fu_552_p2)
    begin
                ap_sig_bdd_1020 <= (not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv1_0 = tmp_1_fu_552_p2)));
    end process;


    -- ap_sig_bdd_1025 assign process. --
    ap_sig_bdd_1025_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, cics_state_load_reg_1584, tmp_reg_1588, ap_sig_bdd_106)
    begin
                ap_sig_bdd_1025 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_1029 assign process. --
    ap_sig_bdd_1029_assign_proc : process(cics_wordCount_V_load_reg_1614, cics_ipHeaderLen_V_load_reg_1618)
    begin
                ap_sig_bdd_1029 <= (not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_2));
    end process;


    -- ap_sig_bdd_1031 assign process. --
    ap_sig_bdd_1031_assign_proc : process(cics_wordCount_V_load_reg_1614, cics_ipHeaderLen_V_load_reg_1618)
    begin
                ap_sig_bdd_1031 <= (not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_1));
    end process;


    -- ap_sig_bdd_1035 assign process. --
    ap_sig_bdd_1035_assign_proc : process(cics_wordCount_V_load_reg_1614, cics_ipHeaderLen_V_load_reg_1618)
    begin
                ap_sig_bdd_1035 <= (not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) and not((cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_2)) and not((cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_1)) and not((cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_0)));
    end process;


    -- ap_sig_bdd_1047 assign process. --
    ap_sig_bdd_1047_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, cics_state_load_reg_1584, tmp_reg_1588, cics_wordCount_V_load_reg_1614, ap_sig_bdd_106)
    begin
                ap_sig_bdd_1047 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_106 assign process. --
    ap_sig_bdd_106_assign_proc : process(iph_subSumsFifoOut_V_full_n, cics_state_load_reg_1584, tmp_reg_1588, cics_wordCount_V_load_reg_1614, cics_ipHeaderLen_V_load_reg_1618, ipDataCheckFifo_V_full_n, tmp_24_reg_1635)
    begin
                ap_sig_bdd_106 <= (((iph_subSumsFifoOut_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_2)) or ((iph_subSumsFifoOut_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_1)) or ((ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and (ipDataCheckFifo_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_24_reg_1635))) or ((ipDataCheckFifo_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = cics_state_load_reg_1584))));
    end process;


    -- ap_sig_bdd_113 assign process. --
    ap_sig_bdd_113_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, ap_sig_bdd_106)
    begin
                ap_sig_bdd_113 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_182 assign process. --
    ap_sig_bdd_182_assign_proc : process(tmp_nbreadreq_fu_202_p3, cics_state, cics_wordCount_V_load_load_fu_487_p1, tmp_1_fu_552_p2)
    begin
                ap_sig_bdd_182 <= ((cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv1_0 = tmp_1_fu_552_p2)));
    end process;


    -- ap_sig_bdd_20 assign process. --
    ap_sig_bdd_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_260 assign process. --
    ap_sig_bdd_260_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, ap_sig_bdd_106)
    begin
                ap_sig_bdd_260 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_268 assign process. --
    ap_sig_bdd_268_assign_proc : process(tmp_nbreadreq_fu_202_p3, cics_state, cics_wordCount_V_load_load_fu_487_p1, tmp_1_fu_552_p2)
    begin
                ap_sig_bdd_268 <= ((cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv1_0 = tmp_1_fu_552_p2));
    end process;


    -- ap_sig_bdd_271 assign process. --
    ap_sig_bdd_271_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, tmp_nbreadreq_fu_202_p3, ap_sig_bdd_52, ap_sig_bdd_106, cics_state)
    begin
                ap_sig_bdd_271 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_285 assign process. --
    ap_sig_bdd_285_assign_proc : process(tmp_nbreadreq_fu_202_p3, cics_state, currWord_last_V_fu_479_p3, tmp_25_phi_fu_287_p4)
    begin
                ap_sig_bdd_285 <= ((cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv1_0 = currWord_last_V_fu_479_p3)) and (ap_const_lv1_0 = tmp_25_phi_fu_287_p4));
    end process;


    -- ap_sig_bdd_300 assign process. --
    ap_sig_bdd_300_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_202_p3, cics_state)
    begin
                ap_sig_bdd_300 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)));
    end process;


    -- ap_sig_bdd_52 assign process. --
    ap_sig_bdd_52_assign_proc : process(ap_start, ap_done_reg, ipDataFifo_V_empty_n, tmp_nbreadreq_fu_202_p3, cics_state)
    begin
                ap_sig_bdd_52 <= (((ipDataFifo_V_empty_n = ap_const_logic_0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_bdd_20)
    begin
        if (ap_sig_bdd_20) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_pprstidle_pp0 assign process. --
    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_start))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    cics_ipHeaderLen_V_load_load_fu_495_p1 <= cics_ipHeaderLen_V;

    -- cics_wordCount_V_flag_1_phi_fu_298_p4 assign process. --
    cics_wordCount_V_flag_1_phi_fu_298_p4_assign_proc : process(currWord_last_V_fu_479_p3, cics_wordCount_V_flag_phi_fu_233_p16, ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_295pp0_it0, ap_sig_bdd_300)
    begin
        if (ap_sig_bdd_300) then
            if ((ap_const_lv1_0 = currWord_last_V_fu_479_p3)) then 
                cics_wordCount_V_flag_1_phi_fu_298_p4 <= cics_wordCount_V_flag_phi_fu_233_p16;
            elsif (not((ap_const_lv1_0 = currWord_last_V_fu_479_p3))) then 
                cics_wordCount_V_flag_1_phi_fu_298_p4 <= ap_const_lv1_1;
            else 
                cics_wordCount_V_flag_1_phi_fu_298_p4 <= ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_295pp0_it0;
            end if;
        else 
            cics_wordCount_V_flag_1_phi_fu_298_p4 <= ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_295pp0_it0;
        end if; 
    end process;


    -- cics_wordCount_V_flag_phi_fu_233_p16 assign process. --
    cics_wordCount_V_flag_phi_fu_233_p16_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_202_p3, cics_state, cics_wordCount_V_load_load_fu_487_p1, cics_ipHeaderLen_V_load_load_fu_495_p1, ap_reg_phiprechg_cics_wordCount_V_flag_reg_230pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and (ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and (ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and (ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and (ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)))) then 
            cics_wordCount_V_flag_phi_fu_233_p16 <= ap_const_lv1_1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_495_p1)) and not((ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_495_p1)) and not((ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_495_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_495_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_495_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_495_p1)))) then 
            cics_wordCount_V_flag_phi_fu_233_p16 <= ap_const_lv1_0;
        else 
            cics_wordCount_V_flag_phi_fu_233_p16 <= ap_reg_phiprechg_cics_wordCount_V_flag_reg_230pp0_it0;
        end if; 
    end process;


    -- cics_wordCount_V_load_1_phi_fu_262_p16 assign process. --
    cics_wordCount_V_load_1_phi_fu_262_p16_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_202_p3, cics_state, cics_wordCount_V, cics_wordCount_V_load_load_fu_487_p1, cics_ipHeaderLen_V_load_load_fu_495_p1, ap_reg_phiprechg_cics_wordCount_V_load_1_reg_259pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and (ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1))) then 
            cics_wordCount_V_load_1_phi_fu_262_p16 <= ap_const_lv3_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and (ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1))) then 
            cics_wordCount_V_load_1_phi_fu_262_p16 <= ap_const_lv3_2;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and (ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1))) then 
            cics_wordCount_V_load_1_phi_fu_262_p16 <= ap_const_lv3_3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and (ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1))) then 
            cics_wordCount_V_load_1_phi_fu_262_p16 <= ap_const_lv3_4;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_495_p1)) and not((ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_495_p1)) and not((ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_495_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_495_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_495_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_487_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_487_p1)) and (ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_495_p1)))) then 
            cics_wordCount_V_load_1_phi_fu_262_p16 <= cics_wordCount_V;
        else 
            cics_wordCount_V_load_1_phi_fu_262_p16 <= ap_reg_phiprechg_cics_wordCount_V_load_1_reg_259pp0_it0;
        end if; 
    end process;

    cics_wordCount_V_load_load_fu_487_p1 <= cics_wordCount_V;

    -- cics_wordCount_V_new_1_phi_fu_310_p4 assign process. --
    cics_wordCount_V_new_1_phi_fu_310_p4_assign_proc : process(currWord_last_V_fu_479_p3, cics_wordCount_V_load_1_phi_fu_262_p16, ap_reg_phiprechg_cics_wordCount_V_new_1_reg_307pp0_it0, ap_sig_bdd_300)
    begin
        if (ap_sig_bdd_300) then
            if ((ap_const_lv1_0 = currWord_last_V_fu_479_p3)) then 
                cics_wordCount_V_new_1_phi_fu_310_p4 <= cics_wordCount_V_load_1_phi_fu_262_p16;
            elsif (not((ap_const_lv1_0 = currWord_last_V_fu_479_p3))) then 
                cics_wordCount_V_new_1_phi_fu_310_p4 <= ap_const_lv3_0;
            else 
                cics_wordCount_V_new_1_phi_fu_310_p4 <= ap_reg_phiprechg_cics_wordCount_V_new_1_reg_307pp0_it0;
            end if;
        else 
            cics_wordCount_V_new_1_phi_fu_310_p4 <= ap_reg_phiprechg_cics_wordCount_V_new_1_reg_307pp0_it0;
        end if; 
    end process;

    currWord_data_V_fu_465_p1 <= ipDataFifo_V_dout(64 - 1 downto 0);
    currWord_last_V_fu_479_p3 <= ipDataFifo_V_dout(72 downto 72);
    extLd_fu_635_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_0),17));
    grp_fu_328_p2 <= std_logic_vector(signed(ap_const_lv8_FE) + signed(cics_ipHeaderLen_V));
    grp_fu_363_p4 <= tmp1_reg_1592(15 downto 8);
    grp_fu_372_p4 <= tmp1_reg_1592(31 downto 24);
    grp_fu_381_p4 <= tmp1_reg_1592(23 downto 16);
    grp_fu_390_p4 <= tmp1_reg_1592(47 downto 40);
    grp_fu_399_p4 <= tmp1_reg_1592(39 downto 32);
    grp_fu_408_p4 <= tmp1_reg_1592(63 downto 56);
    grp_fu_417_p4 <= tmp1_reg_1592(55 downto 48);
    grp_fu_426_p2 <= "1" when (ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it1 = myIpAddress_V_read_reg_1579) else "0";
    grp_fu_431_p2 <= "1" when (ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_318pp0_it1 = ap_const_lv32_FFFFFFFF) else "0";
    grp_fu_437_p2 <= (grp_fu_426_p2 or grp_fu_431_p2);

    -- ipDataCheckFifo_V_din assign process. --
    ipDataCheckFifo_V_din_assign_proc : process(cics_state_load_reg_1584, tmp_335_fu_1542_p6, tmp_442_fu_1568_p4, ap_sig_bdd_100, ap_sig_bdd_260)
    begin
        if (ap_sig_bdd_260) then
            if (not((ap_const_lv1_0 = cics_state_load_reg_1584))) then 
                ipDataCheckFifo_V_din <= tmp_442_fu_1568_p4;
            elsif (ap_sig_bdd_100) then 
                ipDataCheckFifo_V_din <= tmp_335_fu_1542_p6;
            else 
                ipDataCheckFifo_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ipDataCheckFifo_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- ipDataCheckFifo_V_write assign process. --
    ipDataCheckFifo_V_write_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, cics_state_load_reg_1584, tmp_reg_1588, tmp_24_reg_1635, ap_sig_bdd_106)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and not((ap_const_lv1_0 = tmp_24_reg_1635)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = cics_state_load_reg_1584)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            ipDataCheckFifo_V_write <= ap_const_logic_1;
        else 
            ipDataCheckFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- ipDataFifo_V_read assign process. --
    ipDataFifo_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, tmp_nbreadreq_fu_202_p3, ap_sig_bdd_52, ap_sig_bdd_106, cics_state)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            ipDataFifo_V_read <= ap_const_logic_1;
        else 
            ipDataFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- iph_subSumsFifoOut_V_din assign process. --
    iph_subSumsFifoOut_V_din_assign_proc : process(cics_ipHeaderLen_V_load_reg_1618, tmp_224_fu_1260_p6, tmp_113_fu_1328_p6, ap_sig_bdd_1047)
    begin
        if (ap_sig_bdd_1047) then
            if ((cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_1)) then 
                iph_subSumsFifoOut_V_din <= tmp_113_fu_1328_p6;
            elsif ((cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_2)) then 
                iph_subSumsFifoOut_V_din <= tmp_224_fu_1260_p6;
            else 
                iph_subSumsFifoOut_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            iph_subSumsFifoOut_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- iph_subSumsFifoOut_V_write assign process. --
    iph_subSumsFifoOut_V_write_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_52, cics_state_load_reg_1584, tmp_reg_1588, cics_wordCount_V_load_reg_1614, cics_ipHeaderLen_V_load_reg_1618, ap_sig_bdd_106)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = cics_state_load_reg_1584) and not((ap_const_lv1_0 = tmp_reg_1588)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1614 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1618 = ap_const_lv8_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_52) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            iph_subSumsFifoOut_V_write <= ap_const_logic_1;
        else 
            iph_subSumsFifoOut_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_1_fu_542_p1 <= std_logic_vector(resize(unsigned(p_Result_5_fu_532_p4),8));
    p_Result_10_fu_853_p3 <= (tmp_28_fu_850_p1 & grp_fu_363_p4);
    p_Result_14_fu_666_p3 <= (tmp_45_fu_663_p1 & grp_fu_363_p4);
    p_Result_16_fu_1533_p4 <= tmp1_reg_1592(69 downto 64);
    p_Result_18_fu_1346_p3 <= (tmp_63_fu_1343_p1 & grp_fu_363_p4);
    p_Result_21_fu_1110_p3 <= (tmp_85_fu_1107_p1 & grp_fu_363_p4);
    p_Result_22_fu_1037_p3 <= (grp_fu_417_p4 & grp_fu_408_p4);
    p_Result_23_fu_1278_p3 <= (tmp_80_fu_1275_p1 & grp_fu_363_p4);
    p_Result_24_fu_1556_p5 <= (ap_const_lv64_0(63 downto 16) & reg_443);
    p_Result_4_fu_562_p5 <= (tmp_62_fu_558_p1 & cics_dstIpAddress_V(15 downto 0));
    p_Result_5_fu_532_p4 <= ipDataFifo_V_dout(51 downto 48);
    p_Result_62_1_fu_899_p3 <= (grp_fu_381_p4 & grp_fu_372_p4);
    p_Result_62_2_fu_945_p3 <= (grp_fu_399_p4 & grp_fu_390_p4);
    p_Result_62_3_fu_991_p3 <= (grp_fu_417_p4 & grp_fu_408_p4);
    p_Result_67_1_fu_712_p3 <= (grp_fu_381_p4 & grp_fu_372_p4);
    p_Result_67_2_fu_758_p3 <= (grp_fu_399_p4 & grp_fu_390_p4);
    p_Result_67_3_fu_804_p3 <= (grp_fu_417_p4 & grp_fu_408_p4);
    p_Result_6_fu_504_p4 <= ipDataFifo_V_dout(63 downto 48);
    p_Result_76_1_fu_1160_p3 <= (grp_fu_381_p4 & grp_fu_372_p4);
    p_Result_76_2_fu_1210_p3 <= (grp_fu_399_p4 & grp_fu_390_p4);
    p_Result_80_1_fu_1392_p3 <= (grp_fu_381_p4 & grp_fu_372_p4);
    p_Result_80_2_fu_1438_p3 <= (grp_fu_399_p4 & grp_fu_390_p4);
    p_Result_80_3_fu_1484_p3 <= (grp_fu_417_p4 & grp_fu_408_p4);
    p_Result_s_fu_514_p5 <= (cics_dstIpAddress_V(31 downto 16) & p_Result_6_fu_504_p4);
    tmp_10_fu_1290_p2 <= std_logic_vector(unsigned(extLd_fu_635_p1) + unsigned(tmp_9_fu_1286_p1));
    tmp_113_fu_1328_p6 <= ((((grp_fu_437_p2 & tmp_sum3_V_fu_659_p1) & tmp_sum2_V_fu_651_p1) & tmp_sum1_V_fu_643_p1) & tmp_sum0_V_cast_fu_1318_p1);
    tmp_11_fu_1055_p3 <= tmp_5_fu_1049_p2(16 downto 16);
    tmp_13_fu_1354_p1 <= std_logic_vector(resize(unsigned(p_Result_18_fu_1346_p3),17));
    tmp_14_fu_1063_p1 <= tmp_5_fu_1049_p2(16 - 1 downto 0);
    tmp_15_fu_1358_p2 <= std_logic_vector(unsigned(extLd_fu_635_p1) + unsigned(tmp_13_fu_1354_p1));
    tmp_16_1_fu_907_p1 <= std_logic_vector(resize(unsigned(p_Result_62_1_fu_899_p3),17));
    tmp_16_2_fu_953_p1 <= std_logic_vector(resize(unsigned(p_Result_62_2_fu_945_p3),17));
    tmp_16_3_fu_999_p1 <= std_logic_vector(resize(unsigned(p_Result_62_3_fu_991_p3),17));
    tmp_17_1_fu_911_p2 <= std_logic_vector(unsigned(tmp_sum1_V_fu_643_p1) + unsigned(tmp_16_1_fu_907_p1));
    tmp_17_2_fu_957_p2 <= std_logic_vector(unsigned(tmp_sum2_V_fu_651_p1) + unsigned(tmp_16_2_fu_953_p1));
    tmp_17_3_fu_1003_p2 <= std_logic_vector(unsigned(tmp_sum3_V_fu_659_p1) + unsigned(tmp_16_3_fu_999_p1));
    tmp_18_fu_1067_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_1055_p3),16));
    tmp_19_fu_1118_p1 <= std_logic_vector(resize(unsigned(p_Result_21_fu_1110_p3),17));
    tmp_1_fu_552_p2 <= "1" when (cics_wordCount_V = ap_const_lv3_4) else "0";
    tmp_20_fu_1122_p2 <= std_logic_vector(unsigned(extLd_fu_635_p1) + unsigned(tmp_19_fu_1118_p1));
    tmp_224_fu_1260_p6 <= ((((grp_fu_437_p2 & tmp_sum3_V_fu_659_p1) & tmp_sum2_V_1_cast_fu_1250_p1) & tmp_sum1_V_1_cast_fu_1200_p1) & tmp_sum0_V_1_cast_fu_1150_p1);
    tmp_22_1_fu_720_p1 <= std_logic_vector(resize(unsigned(p_Result_67_1_fu_712_p3),17));
    tmp_22_2_fu_766_p1 <= std_logic_vector(resize(unsigned(p_Result_67_2_fu_758_p3),17));
    tmp_22_3_fu_812_p1 <= std_logic_vector(resize(unsigned(p_Result_67_3_fu_804_p3),17));
    tmp_23_1_fu_724_p2 <= std_logic_vector(unsigned(tmp_sum1_V_fu_643_p1) + unsigned(tmp_22_1_fu_720_p1));
    tmp_23_2_fu_770_p2 <= std_logic_vector(unsigned(tmp_sum2_V_fu_651_p1) + unsigned(tmp_22_2_fu_766_p1));
    tmp_23_3_fu_816_p2 <= std_logic_vector(unsigned(tmp_sum3_V_fu_659_p1) + unsigned(tmp_22_3_fu_812_p1));
    tmp_23_fu_1071_p2 <= std_logic_vector(unsigned(tmp_18_fu_1067_p1) + unsigned(tmp_14_fu_1063_p1));
    tmp_24_fu_580_p2 <= "1" when (unsigned(cics_wordCount_V_load_1_phi_fu_262_p16) > unsigned(ap_const_lv3_2)) else "0";

    -- tmp_25_phi_fu_287_p4 assign process. --
    tmp_25_phi_fu_287_p4_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_202_p3, cics_state, tmp_24_fu_580_p2, tmp_last_V_fu_594_p2, ap_reg_phiprechg_tmp_25_reg_284pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_state = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_202_p3)) and not((ap_const_lv1_0 = tmp_24_fu_580_p2)))) then 
            tmp_25_phi_fu_287_p4 <= tmp_last_V_fu_594_p2;
        else 
            tmp_25_phi_fu_287_p4 <= ap_reg_phiprechg_tmp_25_reg_284pp0_it0;
        end if; 
    end process;

    tmp_28_1_fu_1400_p1 <= std_logic_vector(resize(unsigned(p_Result_80_1_fu_1392_p3),17));
    tmp_28_2_fu_1446_p1 <= std_logic_vector(resize(unsigned(p_Result_80_2_fu_1438_p3),17));
    tmp_28_3_fu_1492_p1 <= std_logic_vector(resize(unsigned(p_Result_80_3_fu_1484_p3),17));
    tmp_28_fu_850_p1 <= tmp1_reg_1592(8 - 1 downto 0);
    tmp_29_1_fu_1404_p2 <= std_logic_vector(unsigned(tmp_sum1_V_fu_643_p1) + unsigned(tmp_28_1_fu_1400_p1));
    tmp_29_2_fu_1450_p2 <= std_logic_vector(unsigned(tmp_sum2_V_fu_651_p1) + unsigned(tmp_28_2_fu_1446_p1));
    tmp_29_3_fu_1496_p2 <= std_logic_vector(unsigned(tmp_sum3_V_fu_659_p1) + unsigned(tmp_28_3_fu_1492_p1));
    tmp_29_fu_871_p3 <= tmp_3_fu_865_p2(16 downto 16);
    tmp_2_fu_861_p1 <= std_logic_vector(resize(unsigned(p_Result_10_fu_853_p3),17));
    tmp_30_fu_879_p1 <= tmp_3_fu_865_p2(16 - 1 downto 0);
    tmp_31_fu_883_p1 <= std_logic_vector(resize(unsigned(tmp_29_fu_871_p3),16));
    tmp_32_fu_887_p2 <= std_logic_vector(unsigned(tmp_31_fu_883_p1) + unsigned(tmp_30_fu_879_p1));
    tmp_335_fu_1542_p6 <= ((((tmp_last_V_reg_1639 & p_Result_16_fu_1533_p4) & reg_447) & tmp_98_fu_1530_p1) & reg_443);
    tmp_33_1_fu_1168_p1 <= std_logic_vector(resize(unsigned(p_Result_76_1_fu_1160_p3),17));
    tmp_33_2_fu_1218_p1 <= std_logic_vector(resize(unsigned(p_Result_76_2_fu_1210_p3),17));
    tmp_33_fu_917_p3 <= tmp_17_1_fu_911_p2(16 downto 16);
    tmp_34_1_fu_1172_p2 <= std_logic_vector(unsigned(tmp_sum1_V_fu_643_p1) + unsigned(tmp_33_1_fu_1168_p1));
    tmp_34_2_fu_1222_p2 <= std_logic_vector(unsigned(tmp_sum2_V_fu_651_p1) + unsigned(tmp_33_2_fu_1218_p1));
    tmp_34_fu_925_p1 <= tmp_17_1_fu_911_p2(16 - 1 downto 0);
    tmp_35_fu_929_p1 <= std_logic_vector(resize(unsigned(tmp_33_fu_917_p3),16));
    tmp_36_fu_933_p2 <= std_logic_vector(unsigned(tmp_35_fu_929_p1) + unsigned(tmp_34_fu_925_p1));
    tmp_37_fu_963_p3 <= tmp_17_2_fu_957_p2(16 downto 16);
    tmp_38_fu_971_p1 <= tmp_17_2_fu_957_p2(16 - 1 downto 0);
    tmp_39_fu_975_p1 <= std_logic_vector(resize(unsigned(tmp_37_fu_963_p3),16));
    tmp_3_fu_865_p2 <= std_logic_vector(unsigned(extLd_fu_635_p1) + unsigned(tmp_2_fu_861_p1));
    tmp_40_fu_979_p2 <= std_logic_vector(unsigned(tmp_39_fu_975_p1) + unsigned(tmp_38_fu_971_p1));
    tmp_41_fu_1009_p3 <= tmp_17_3_fu_1003_p2(16 downto 16);
    tmp_42_fu_1017_p1 <= tmp_17_3_fu_1003_p2(16 - 1 downto 0);
    tmp_43_fu_1021_p1 <= std_logic_vector(resize(unsigned(tmp_41_fu_1009_p3),16));
    tmp_442_fu_1568_p4 <= ((ap_const_lv7_40 & reg_447) & p_Result_24_fu_1556_p5);
    tmp_44_fu_1025_p2 <= std_logic_vector(unsigned(tmp_43_fu_1021_p1) + unsigned(tmp_42_fu_1017_p1));
    tmp_45_fu_663_p1 <= tmp1_reg_1592(8 - 1 downto 0);
    tmp_46_fu_684_p3 <= tmp_6_fu_678_p2(16 downto 16);
    tmp_47_fu_692_p1 <= tmp_6_fu_678_p2(16 - 1 downto 0);
    tmp_48_fu_696_p1 <= std_logic_vector(resize(unsigned(tmp_46_fu_684_p3),16));
    tmp_49_fu_700_p2 <= std_logic_vector(unsigned(tmp_48_fu_696_p1) + unsigned(tmp_47_fu_692_p1));
    tmp_4_fu_1045_p1 <= std_logic_vector(resize(unsigned(p_Result_22_fu_1037_p3),17));
    tmp_50_fu_730_p3 <= tmp_23_1_fu_724_p2(16 downto 16);
    tmp_51_fu_738_p1 <= tmp_23_1_fu_724_p2(16 - 1 downto 0);
    tmp_52_fu_742_p1 <= std_logic_vector(resize(unsigned(tmp_50_fu_730_p3),16));
    tmp_53_fu_746_p2 <= std_logic_vector(unsigned(tmp_52_fu_742_p1) + unsigned(tmp_51_fu_738_p1));
    tmp_54_fu_776_p3 <= tmp_23_2_fu_770_p2(16 downto 16);
    tmp_55_fu_784_p1 <= tmp_23_2_fu_770_p2(16 - 1 downto 0);
    tmp_56_fu_788_p1 <= std_logic_vector(resize(unsigned(tmp_54_fu_776_p3),16));
    tmp_57_fu_792_p2 <= std_logic_vector(unsigned(tmp_56_fu_788_p1) + unsigned(tmp_55_fu_784_p1));
    tmp_58_fu_822_p3 <= tmp_23_3_fu_816_p2(16 downto 16);
    tmp_59_fu_830_p1 <= tmp_23_3_fu_816_p2(16 - 1 downto 0);
    tmp_5_fu_1049_p2 <= std_logic_vector(unsigned(tmp_sum3_V_fu_659_p1) + unsigned(tmp_4_fu_1045_p1));
    tmp_60_fu_834_p1 <= std_logic_vector(resize(unsigned(tmp_58_fu_822_p3),16));
    tmp_61_fu_838_p2 <= std_logic_vector(unsigned(tmp_60_fu_834_p1) + unsigned(tmp_59_fu_830_p1));
    tmp_62_fu_558_p1 <= ipDataFifo_V_dout(16 - 1 downto 0);
    tmp_63_fu_1343_p1 <= tmp1_reg_1592(8 - 1 downto 0);
    tmp_64_fu_1364_p3 <= tmp_15_fu_1358_p2(16 downto 16);
    tmp_65_fu_1372_p1 <= tmp_15_fu_1358_p2(16 - 1 downto 0);
    tmp_66_fu_1376_p1 <= std_logic_vector(resize(unsigned(tmp_64_fu_1364_p3),16));
    tmp_67_fu_1380_p2 <= std_logic_vector(unsigned(tmp_66_fu_1376_p1) + unsigned(tmp_65_fu_1372_p1));
    tmp_68_fu_1410_p3 <= tmp_29_1_fu_1404_p2(16 downto 16);
    tmp_69_fu_1418_p1 <= tmp_29_1_fu_1404_p2(16 - 1 downto 0);
    tmp_6_fu_678_p2 <= std_logic_vector(unsigned(extLd_fu_635_p1) + unsigned(tmp_8_fu_674_p1));
    tmp_70_fu_1422_p1 <= std_logic_vector(resize(unsigned(tmp_68_fu_1410_p3),16));
    tmp_71_fu_1426_p2 <= std_logic_vector(unsigned(tmp_70_fu_1422_p1) + unsigned(tmp_69_fu_1418_p1));
    tmp_72_fu_1456_p3 <= tmp_29_2_fu_1450_p2(16 downto 16);
    tmp_73_fu_1464_p1 <= tmp_29_2_fu_1450_p2(16 - 1 downto 0);
    tmp_74_fu_1468_p1 <= std_logic_vector(resize(unsigned(tmp_72_fu_1456_p3),16));
    tmp_75_fu_1472_p2 <= std_logic_vector(unsigned(tmp_74_fu_1468_p1) + unsigned(tmp_73_fu_1464_p1));
    tmp_76_fu_1502_p3 <= tmp_29_3_fu_1496_p2(16 downto 16);
    tmp_77_fu_1510_p1 <= tmp_29_3_fu_1496_p2(16 - 1 downto 0);
    tmp_78_fu_1514_p1 <= std_logic_vector(resize(unsigned(tmp_76_fu_1502_p3),16));
    tmp_79_fu_1518_p2 <= std_logic_vector(unsigned(tmp_78_fu_1514_p1) + unsigned(tmp_77_fu_1510_p1));
    tmp_80_fu_1275_p1 <= tmp1_reg_1592(8 - 1 downto 0);
    tmp_81_fu_1296_p3 <= tmp_10_fu_1290_p2(16 downto 16);
    tmp_82_fu_1304_p1 <= tmp_10_fu_1290_p2(16 - 1 downto 0);
    tmp_83_fu_1308_p1 <= std_logic_vector(resize(unsigned(tmp_81_fu_1296_p3),16));
    tmp_85_fu_1107_p1 <= tmp1_reg_1592(8 - 1 downto 0);
    tmp_86_fu_1128_p3 <= tmp_20_fu_1122_p2(16 downto 16);
    tmp_87_fu_1136_p1 <= tmp_20_fu_1122_p2(16 - 1 downto 0);
    tmp_88_fu_1140_p1 <= std_logic_vector(resize(unsigned(tmp_86_fu_1128_p3),16));
    tmp_8_fu_674_p1 <= std_logic_vector(resize(unsigned(p_Result_14_fu_666_p3),17));
    tmp_90_fu_1178_p3 <= tmp_34_1_fu_1172_p2(16 downto 16);
    tmp_91_fu_1186_p1 <= tmp_34_1_fu_1172_p2(16 - 1 downto 0);
    tmp_92_fu_1190_p1 <= std_logic_vector(resize(unsigned(tmp_90_fu_1178_p3),16));
    tmp_94_fu_1228_p3 <= tmp_34_2_fu_1222_p2(16 downto 16);
    tmp_95_fu_1236_p1 <= tmp_34_2_fu_1222_p2(16 - 1 downto 0);
    tmp_96_fu_1240_p1 <= std_logic_vector(resize(unsigned(tmp_94_fu_1228_p3),16));
    tmp_98_fu_1530_p1 <= tmp1_reg_1592(48 - 1 downto 0);
    tmp_99_fu_586_p3 <= ipDataFifo_V_dout(70 downto 70);
    tmp_9_fu_1286_p1 <= std_logic_vector(resize(unsigned(p_Result_23_fu_1278_p3),17));
    tmp_last_V_fu_594_p2 <= (tmp_99_fu_586_p3 xor ap_const_lv1_1);
    tmp_nbreadreq_fu_202_p3 <= (0=>ipDataFifo_V_empty_n, others=>'-');
    tmp_sum0_V_1_cast_fu_1150_p1 <= std_logic_vector(resize(unsigned(tmp_sum0_V_1_fu_1144_p2),17));
    tmp_sum0_V_1_fu_1144_p2 <= std_logic_vector(unsigned(tmp_88_fu_1140_p1) + unsigned(tmp_87_fu_1136_p1));
    tmp_sum0_V_cast_fu_1318_p1 <= std_logic_vector(resize(unsigned(tmp_sum0_V_fu_1312_p2),17));
    tmp_sum0_V_fu_1312_p2 <= std_logic_vector(unsigned(tmp_83_fu_1308_p1) + unsigned(tmp_82_fu_1304_p1));
    tmp_sum1_V_1_cast_fu_1200_p1 <= std_logic_vector(resize(unsigned(tmp_sum1_V_1_fu_1194_p2),17));
    tmp_sum1_V_1_fu_1194_p2 <= std_logic_vector(unsigned(tmp_92_fu_1190_p1) + unsigned(tmp_91_fu_1186_p1));
    tmp_sum1_V_fu_643_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_1),17));
    tmp_sum2_V_1_cast_fu_1250_p1 <= std_logic_vector(resize(unsigned(tmp_sum2_V_1_fu_1244_p2),17));
    tmp_sum2_V_1_fu_1244_p2 <= std_logic_vector(unsigned(tmp_96_fu_1240_p1) + unsigned(tmp_95_fu_1236_p1));
    tmp_sum2_V_fu_651_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_2),17));
    tmp_sum3_V_fu_659_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_3),17));
end behav;
