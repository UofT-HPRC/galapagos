// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tcp_slowrttoe_updateRequestSender (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        sessionUpdate_req_V_din,
        sessionUpdate_req_V_full_n,
        sessionUpdate_req_V_write,
        slc_sessionIdFinFifo_V_V_din,
        slc_sessionIdFinFifo_V_V_full_n,
        slc_sessionIdFinFifo_V_V_write,
        regSessionCount_V,
        regSessionCount_V_ap_vld,
        sessionInsert_req_V_source_dout,
        sessionInsert_req_V_source_empty_n,
        sessionInsert_req_V_source_read,
        sessionInsert_req_V_op_dout,
        sessionInsert_req_V_op_empty_n,
        sessionInsert_req_V_op_read,
        sessionInsert_req_V_value_V_dout,
        sessionInsert_req_V_value_V_empty_n,
        sessionInsert_req_V_value_V_read,
        sessionInsert_req_V_key_myIp_V_dout,
        sessionInsert_req_V_key_myIp_V_empty_n,
        sessionInsert_req_V_key_myIp_V_read,
        sessionInsert_req_V_key_theirI_dout,
        sessionInsert_req_V_key_theirI_empty_n,
        sessionInsert_req_V_key_theirI_read,
        sessionInsert_req_V_key_myPort_dout,
        sessionInsert_req_V_key_myPort_empty_n,
        sessionInsert_req_V_key_myPort_read,
        sessionInsert_req_V_key_theirP_dout,
        sessionInsert_req_V_key_theirP_empty_n,
        sessionInsert_req_V_key_theirP_read,
        sessionDelete_req_V_source_dout,
        sessionDelete_req_V_source_empty_n,
        sessionDelete_req_V_source_read,
        sessionDelete_req_V_op_dout,
        sessionDelete_req_V_op_empty_n,
        sessionDelete_req_V_op_read,
        sessionDelete_req_V_value_V_dout,
        sessionDelete_req_V_value_V_empty_n,
        sessionDelete_req_V_value_V_read,
        sessionDelete_req_V_key_myIp_V_dout,
        sessionDelete_req_V_key_myIp_V_empty_n,
        sessionDelete_req_V_key_myIp_V_read,
        sessionDelete_req_V_key_theirI_dout,
        sessionDelete_req_V_key_theirI_empty_n,
        sessionDelete_req_V_key_theirI_read,
        sessionDelete_req_V_key_myPort_dout,
        sessionDelete_req_V_key_myPort_empty_n,
        sessionDelete_req_V_key_myPort_read,
        sessionDelete_req_V_key_theirP_dout,
        sessionDelete_req_V_key_theirP_empty_n,
        sessionDelete_req_V_key_theirP_read
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv16_FFFF = 16'b1111111111111111;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [111:0] sessionUpdate_req_V_din;
input   sessionUpdate_req_V_full_n;
output   sessionUpdate_req_V_write;
output  [13:0] slc_sessionIdFinFifo_V_V_din;
input   slc_sessionIdFinFifo_V_V_full_n;
output   slc_sessionIdFinFifo_V_V_write;
output  [15:0] regSessionCount_V;
output   regSessionCount_V_ap_vld;
input  [0:0] sessionInsert_req_V_source_dout;
input   sessionInsert_req_V_source_empty_n;
output   sessionInsert_req_V_source_read;
input  [0:0] sessionInsert_req_V_op_dout;
input   sessionInsert_req_V_op_empty_n;
output   sessionInsert_req_V_op_read;
input  [13:0] sessionInsert_req_V_value_V_dout;
input   sessionInsert_req_V_value_V_empty_n;
output   sessionInsert_req_V_value_V_read;
input  [31:0] sessionInsert_req_V_key_myIp_V_dout;
input   sessionInsert_req_V_key_myIp_V_empty_n;
output   sessionInsert_req_V_key_myIp_V_read;
input  [31:0] sessionInsert_req_V_key_theirI_dout;
input   sessionInsert_req_V_key_theirI_empty_n;
output   sessionInsert_req_V_key_theirI_read;
input  [15:0] sessionInsert_req_V_key_myPort_dout;
input   sessionInsert_req_V_key_myPort_empty_n;
output   sessionInsert_req_V_key_myPort_read;
input  [15:0] sessionInsert_req_V_key_theirP_dout;
input   sessionInsert_req_V_key_theirP_empty_n;
output   sessionInsert_req_V_key_theirP_read;
input  [0:0] sessionDelete_req_V_source_dout;
input   sessionDelete_req_V_source_empty_n;
output   sessionDelete_req_V_source_read;
input  [0:0] sessionDelete_req_V_op_dout;
input   sessionDelete_req_V_op_empty_n;
output   sessionDelete_req_V_op_read;
input  [13:0] sessionDelete_req_V_value_V_dout;
input   sessionDelete_req_V_value_V_empty_n;
output   sessionDelete_req_V_value_V_read;
input  [31:0] sessionDelete_req_V_key_myIp_V_dout;
input   sessionDelete_req_V_key_myIp_V_empty_n;
output   sessionDelete_req_V_key_myIp_V_read;
input  [31:0] sessionDelete_req_V_key_theirI_dout;
input   sessionDelete_req_V_key_theirI_empty_n;
output   sessionDelete_req_V_key_theirI_read;
input  [15:0] sessionDelete_req_V_key_myPort_dout;
input   sessionDelete_req_V_key_myPort_empty_n;
output   sessionDelete_req_V_key_myPort_read;
input  [15:0] sessionDelete_req_V_key_theirP_dout;
input   sessionDelete_req_V_key_theirP_empty_n;
output   sessionDelete_req_V_key_theirP_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[111:0] sessionUpdate_req_V_din;
reg sessionUpdate_req_V_write;
reg slc_sessionIdFinFifo_V_V_write;
reg[15:0] regSessionCount_V;
reg regSessionCount_V_ap_vld;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_20;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
wire    sessionInsert_req_V_op0_status;
wire   [0:0] tmp_nbreadreq_fu_160_p9;
reg    ap_sig_bdd_49;
wire    sessionDelete_req_V_op0_status;
reg   [0:0] tmp_reg_368;
wire   [0:0] tmp_118_nbreadreq_fu_198_p9;
reg    ap_sig_bdd_60;
reg   [0:0] ap_reg_ppstg_tmp_reg_368_pp0_it1;
reg   [0:0] tmp_118_reg_407;
reg    ap_sig_bdd_86;
reg   [15:0] usedSessionIDs_V = 16'b0000000000000000;
reg   [0:0] tmp_source_reg_372;
reg   [0:0] ap_reg_ppstg_tmp_source_reg_372_pp0_it1;
reg   [0:0] tmp_op_reg_377;
reg   [0:0] ap_reg_ppstg_tmp_op_reg_377_pp0_it1;
reg   [13:0] tmp_value_V_reg_382;
reg   [13:0] ap_reg_ppstg_tmp_value_V_reg_382_pp0_it1;
reg   [31:0] tmp_key_myIp_V_reg_387;
reg   [31:0] ap_reg_ppstg_tmp_key_myIp_V_reg_387_pp0_it1;
reg   [31:0] tmp_key_theirIp_V_reg_392;
reg   [31:0] ap_reg_ppstg_tmp_key_theirIp_V_reg_392_pp0_it1;
reg   [15:0] tmp_key_myPort_V_reg_397;
reg   [15:0] ap_reg_ppstg_tmp_key_myPort_V_reg_397_pp0_it1;
reg   [15:0] tmp_key_theirPort_V_reg_402;
reg   [15:0] ap_reg_ppstg_tmp_key_theirPort_V_reg_402_pp0_it1;
reg   [0:0] tmp_source_2_reg_411;
reg   [0:0] tmp_op_1_reg_416;
reg   [13:0] tmp_value_V_2_reg_421;
reg   [31:0] tmp_key_myIp_V_1_reg_427;
reg   [31:0] tmp_key_theirIp_V_1_reg_432;
reg   [15:0] tmp_key_myPort_V_1_reg_437;
reg   [15:0] tmp_key_theirPort_V_1_reg_442;
reg    sessionInsert_req_V_op0_update;
reg    sessionDelete_req_V_op0_update;
wire   [111:0] tmp_1_fu_318_p8;
wire   [111:0] tmp1_fu_343_p8;
wire   [15:0] tmp_236_fu_330_p2;
wire   [15:0] tmp_s_fu_355_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
reg    ap_sig_bdd_75;
reg    ap_sig_bdd_226;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_226) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1)) begin
            usedSessionIDs_V <= tmp_s_fu_355_p2;
        end else if (ap_sig_bdd_75) begin
            usedSessionIDs_V <= tmp_236_fu_330_p2;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_tmp_key_myIp_V_reg_387_pp0_it1 <= tmp_key_myIp_V_reg_387;
        ap_reg_ppstg_tmp_key_myPort_V_reg_397_pp0_it1 <= tmp_key_myPort_V_reg_397;
        ap_reg_ppstg_tmp_key_theirIp_V_reg_392_pp0_it1 <= tmp_key_theirIp_V_reg_392;
        ap_reg_ppstg_tmp_key_theirPort_V_reg_402_pp0_it1 <= tmp_key_theirPort_V_reg_402;
        ap_reg_ppstg_tmp_op_reg_377_pp0_it1 <= tmp_op_reg_377;
        ap_reg_ppstg_tmp_reg_368_pp0_it1 <= tmp_reg_368;
        ap_reg_ppstg_tmp_source_reg_372_pp0_it1 <= tmp_source_reg_372;
        ap_reg_ppstg_tmp_value_V_reg_382_pp0_it1 <= tmp_value_V_reg_382;
        tmp_reg_368 <= tmp_nbreadreq_fu_160_p9;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == tmp_reg_368) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_118_reg_407 <= tmp_118_nbreadreq_fu_198_p9;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == tmp_reg_368) & ~(ap_const_lv1_0 == tmp_118_nbreadreq_fu_198_p9) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_key_myIp_V_1_reg_427 <= sessionDelete_req_V_key_myIp_V_dout;
        tmp_key_myPort_V_1_reg_437 <= sessionDelete_req_V_key_myPort_dout;
        tmp_key_theirIp_V_1_reg_432 <= sessionDelete_req_V_key_theirI_dout;
        tmp_key_theirPort_V_1_reg_442 <= sessionDelete_req_V_key_theirP_dout;
        tmp_op_1_reg_416 <= sessionDelete_req_V_op_dout;
        tmp_source_2_reg_411 <= sessionDelete_req_V_source_dout;
        tmp_value_V_2_reg_421 <= sessionDelete_req_V_value_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(tmp_nbreadreq_fu_160_p9 == ap_const_lv1_0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_key_myIp_V_reg_387 <= sessionInsert_req_V_key_myIp_V_dout;
        tmp_key_myPort_V_reg_397 <= sessionInsert_req_V_key_myPort_dout;
        tmp_key_theirIp_V_reg_392 <= sessionInsert_req_V_key_theirI_dout;
        tmp_key_theirPort_V_reg_402 <= sessionInsert_req_V_key_theirP_dout;
        tmp_op_reg_377 <= sessionInsert_req_V_op_dout;
        tmp_source_reg_372 <= sessionInsert_req_V_source_dout;
        tmp_value_V_reg_382 <= sessionInsert_req_V_value_V_dout;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_49 or ap_sig_bdd_60 or ap_sig_bdd_86)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it2))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_49 or ap_sig_bdd_60 or ap_sig_bdd_86)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. ///
always @ (ap_sig_bdd_20)
begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_pprstidle_pp0 assign process. ///
always @ (ap_start or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_start))) begin
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    end else begin
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    end
end

/// regSessionCount_V assign process. ///
always @ (ap_reg_ppstg_tmp_reg_368_pp0_it1 or tmp_236_fu_330_p2 or tmp_s_fu_355_p2 or ap_sig_bdd_75 or ap_sig_bdd_226)
begin
    if (ap_sig_bdd_226) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1)) begin
            regSessionCount_V = tmp_s_fu_355_p2;
        end else if (ap_sig_bdd_75) begin
            regSessionCount_V = tmp_236_fu_330_p2;
        end else begin
            regSessionCount_V = 'bx;
        end
    end else begin
        regSessionCount_V = 'bx;
    end
end

/// regSessionCount_V_ap_vld assign process. ///
always @ (ap_done_reg or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_49 or ap_sig_bdd_60 or ap_reg_ppstg_tmp_reg_368_pp0_it1 or tmp_118_reg_407 or ap_sig_bdd_86)
begin
    if ((((ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1) & ~(ap_const_lv1_0 == tmp_118_reg_407) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))))) begin
        regSessionCount_V_ap_vld = ap_const_logic_1;
    end else begin
        regSessionCount_V_ap_vld = ap_const_logic_0;
    end
end

/// sessionDelete_req_V_op0_update assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_49 or tmp_reg_368 or tmp_118_nbreadreq_fu_198_p9 or ap_sig_bdd_60 or ap_sig_bdd_86)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_lv1_0 == tmp_reg_368) & ~(ap_const_lv1_0 == tmp_118_nbreadreq_fu_198_p9) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        sessionDelete_req_V_op0_update = ap_const_logic_1;
    end else begin
        sessionDelete_req_V_op0_update = ap_const_logic_0;
    end
end

/// sessionInsert_req_V_op0_update assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or tmp_nbreadreq_fu_160_p9 or ap_sig_bdd_49 or ap_sig_bdd_60 or ap_sig_bdd_86)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(tmp_nbreadreq_fu_160_p9 == ap_const_lv1_0) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        sessionInsert_req_V_op0_update = ap_const_logic_1;
    end else begin
        sessionInsert_req_V_op0_update = ap_const_logic_0;
    end
end

/// sessionUpdate_req_V_din assign process. ///
always @ (ap_reg_ppstg_tmp_reg_368_pp0_it1 or tmp_1_fu_318_p8 or tmp1_fu_343_p8 or ap_sig_bdd_75 or ap_sig_bdd_226)
begin
    if (ap_sig_bdd_226) begin
        if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1)) begin
            sessionUpdate_req_V_din = tmp1_fu_343_p8;
        end else if (ap_sig_bdd_75) begin
            sessionUpdate_req_V_din = tmp_1_fu_318_p8;
        end else begin
            sessionUpdate_req_V_din = 'bx;
        end
    end else begin
        sessionUpdate_req_V_din = 'bx;
    end
end

/// sessionUpdate_req_V_write assign process. ///
always @ (ap_done_reg or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_49 or ap_sig_bdd_60 or ap_reg_ppstg_tmp_reg_368_pp0_it1 or tmp_118_reg_407 or ap_sig_bdd_86)
begin
    if ((((ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1) & ~(ap_const_lv1_0 == tmp_118_reg_407) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))))) begin
        sessionUpdate_req_V_write = ap_const_logic_1;
    end else begin
        sessionUpdate_req_V_write = ap_const_logic_0;
    end
end

/// slc_sessionIdFinFifo_V_V_write assign process. ///
always @ (ap_done_reg or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_49 or ap_sig_bdd_60 or ap_reg_ppstg_tmp_reg_368_pp0_it1 or tmp_118_reg_407 or ap_sig_bdd_86)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1) & ~(ap_const_lv1_0 == tmp_118_reg_407) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        slc_sessionIdFinFifo_V_V_write = ap_const_logic_1;
    end else begin
        slc_sessionIdFinFifo_V_V_write = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_done_reg or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_49 or ap_sig_bdd_60 or ap_sig_bdd_86 or ap_sig_pprstidle_pp0)
begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_ppiten_pp0_it0 = ap_start;

/// ap_sig_bdd_20 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_226 assign process. ///
always @ (ap_done_reg or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_49 or ap_sig_bdd_60 or ap_sig_bdd_86)
begin
    ap_sig_bdd_226 = ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_done_reg == ap_const_logic_1) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_49) | (ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_86 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))));
end

/// ap_sig_bdd_49 assign process. ///
always @ (ap_start or ap_done_reg or sessionInsert_req_V_op0_status or tmp_nbreadreq_fu_160_p9)
begin
    ap_sig_bdd_49 = (((sessionInsert_req_V_op0_status == ap_const_logic_0) & ~(tmp_nbreadreq_fu_160_p9 == ap_const_lv1_0)) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_60 assign process. ///
always @ (sessionDelete_req_V_op0_status or tmp_reg_368 or tmp_118_nbreadreq_fu_198_p9)
begin
    ap_sig_bdd_60 = ((sessionDelete_req_V_op0_status == ap_const_logic_0) & (ap_const_lv1_0 == tmp_reg_368) & ~(ap_const_lv1_0 == tmp_118_nbreadreq_fu_198_p9));
end

/// ap_sig_bdd_75 assign process. ///
always @ (ap_reg_ppstg_tmp_reg_368_pp0_it1 or tmp_118_reg_407)
begin
    ap_sig_bdd_75 = ((ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1) & ~(ap_const_lv1_0 == tmp_118_reg_407));
end

/// ap_sig_bdd_86 assign process. ///
always @ (sessionUpdate_req_V_full_n or ap_reg_ppstg_tmp_reg_368_pp0_it1 or tmp_118_reg_407 or slc_sessionIdFinFifo_V_V_full_n)
begin
    ap_sig_bdd_86 = (((sessionUpdate_req_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1) & ~(ap_const_lv1_0 == tmp_118_reg_407)) | ((ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1) & ~(ap_const_lv1_0 == tmp_118_reg_407) & (slc_sessionIdFinFifo_V_V_full_n == ap_const_logic_0)) | ((sessionUpdate_req_V_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_368_pp0_it1)));
end
assign sessionDelete_req_V_key_myIp_V_read = sessionDelete_req_V_op0_update;
assign sessionDelete_req_V_key_myPort_read = sessionDelete_req_V_op0_update;
assign sessionDelete_req_V_key_theirI_read = sessionDelete_req_V_op0_update;
assign sessionDelete_req_V_key_theirP_read = sessionDelete_req_V_op0_update;
assign sessionDelete_req_V_op0_status = (sessionDelete_req_V_source_empty_n & sessionDelete_req_V_op_empty_n & sessionDelete_req_V_value_V_empty_n & sessionDelete_req_V_key_myIp_V_empty_n & sessionDelete_req_V_key_theirI_empty_n & sessionDelete_req_V_key_myPort_empty_n & sessionDelete_req_V_key_theirP_empty_n);
assign sessionDelete_req_V_op_read = sessionDelete_req_V_op0_update;
assign sessionDelete_req_V_source_read = sessionDelete_req_V_op0_update;
assign sessionDelete_req_V_value_V_read = sessionDelete_req_V_op0_update;
assign sessionInsert_req_V_key_myIp_V_read = sessionInsert_req_V_op0_update;
assign sessionInsert_req_V_key_myPort_read = sessionInsert_req_V_op0_update;
assign sessionInsert_req_V_key_theirI_read = sessionInsert_req_V_op0_update;
assign sessionInsert_req_V_key_theirP_read = sessionInsert_req_V_op0_update;
assign sessionInsert_req_V_op0_status = (sessionInsert_req_V_source_empty_n & sessionInsert_req_V_op_empty_n & sessionInsert_req_V_value_V_empty_n & sessionInsert_req_V_key_myIp_V_empty_n & sessionInsert_req_V_key_theirI_empty_n & sessionInsert_req_V_key_myPort_empty_n & sessionInsert_req_V_key_theirP_empty_n);
assign sessionInsert_req_V_op_read = sessionInsert_req_V_op0_update;
assign sessionInsert_req_V_source_read = sessionInsert_req_V_op0_update;
assign sessionInsert_req_V_value_V_read = sessionInsert_req_V_op0_update;
assign slc_sessionIdFinFifo_V_V_din = tmp_value_V_2_reg_421;
assign tmp1_fu_343_p8 = {{{{{{{ap_reg_ppstg_tmp_key_theirPort_V_reg_402_pp0_it1}, {ap_reg_ppstg_tmp_key_myPort_V_reg_397_pp0_it1}}, {ap_reg_ppstg_tmp_key_theirIp_V_reg_392_pp0_it1}}, {ap_reg_ppstg_tmp_key_myIp_V_reg_387_pp0_it1}}, {ap_reg_ppstg_tmp_value_V_reg_382_pp0_it1}}, {ap_reg_ppstg_tmp_op_reg_377_pp0_it1}}, {ap_reg_ppstg_tmp_source_reg_372_pp0_it1}};
assign tmp_118_nbreadreq_fu_198_p9 = (sessionDelete_req_V_source_empty_n & sessionDelete_req_V_op_empty_n & sessionDelete_req_V_value_V_empty_n & sessionDelete_req_V_key_myIp_V_empty_n & sessionDelete_req_V_key_theirI_empty_n & sessionDelete_req_V_key_myPort_empty_n & sessionDelete_req_V_key_theirP_empty_n);
assign tmp_1_fu_318_p8 = {{{{{{{tmp_key_theirPort_V_1_reg_442}, {tmp_key_myPort_V_1_reg_437}}, {tmp_key_theirIp_V_1_reg_432}}, {tmp_key_myIp_V_1_reg_427}}, {tmp_value_V_2_reg_421}}, {tmp_op_1_reg_416}}, {tmp_source_2_reg_411}};
assign tmp_236_fu_330_p2 = ($signed(usedSessionIDs_V) + $signed(ap_const_lv16_FFFF));
assign tmp_nbreadreq_fu_160_p9 = (sessionInsert_req_V_source_empty_n & sessionInsert_req_V_op_empty_n & sessionInsert_req_V_value_V_empty_n & sessionInsert_req_V_key_myIp_V_empty_n & sessionInsert_req_V_key_theirI_empty_n & sessionInsert_req_V_key_myPort_empty_n & sessionInsert_req_V_key_theirP_empty_n);
assign tmp_s_fu_355_p2 = (usedSessionIDs_V + ap_const_lv16_1);


endmodule //tcp_slowrttoe_updateRequestSender

